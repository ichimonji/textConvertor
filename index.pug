doctype html

include _mixin
include _data

html(lang = 'en')
  head
    title #{$title}
    meta(charset = 'utf-8')
    +metaAll(metas)
    link(rel = 'image_src', href = 'http://myth.maji.asia/figure/aloes.jpg')
    +linkAll(links)
  body
    heade#headerr.header
      h1.head #{$title}
      div
        button.btn.btn-primary(data-toggle = 'modal', data-target = '#settings') #[i.glyphicon.glyphicon-cog(aria-hidden = 'true')] #[span.hidden-xs  settings]
        button.btn.btn-primary(data-toggle = 'modal', data-target = '#help') #[i.fa.fa-question-circle(aria-hidden = 'true')] #[span.hidden-xs  help]
    main.main
      .main-wrap
        section.area-input
          .area-input-text
            .form-group
              label(for = 'text-i') Original Text #[span#selDisp]
              textarea#text-i.form-control(placeholder = 'Original Text')
          .area-input-text
            .form-group
              label(for= 'text-o') Converted Text
              textarea#text-o.form-control(placeholder = 'Converted Text')
          .area-input-button
            #lengthDisp
            .btn-group-vertical
              +bt('copy', '変換後テキストをクリップボードのコピー') #[i.fa.fa-clipboard] #[span COPY]
              +bt('move', '変換後テキストを変換前テキストエリアへ移動') #[i.glyphicon.glyphicon-chevron-left] #[span MOVE]
              +bt('delete', 'テキストを一括削除') #[i.glyphicon.glyphicon-remove] #[span DELETE]
              +bt('undo', '一段階前に戻す') #[i.glyphicon.glyphicon-undo] #[span UNDO]
              +bt('change', '左右を入れ替え') #[i.fa.fa-exchange] #[span REPLACE]
              label.btn.btn-sm.btn-primary #[input.automove(name = 'automove', type = 'checkbox')] AUTO#[span.hidden-xs  MOVE]
        section.area-control
          .ctLabel.btn-group.btn-group-sm.btn-group-justified
            each val, key in {'code': 'コード/数値', 'cont':'文字列操作', 'unit': '文字列生成', 'lang': '言語'}
              label.btn.btn-info(for = 'ctGroup_' + key) #{val}
          each val, key in btsArr
            input.ctGroupRd.hidden(id = key, type = 'radio', name = 'ctGroupRd', checked = 'checked')
            .ctGroup
              each val2, key2 in val
                +dlBox(key2, val2)
                  if key2 === 'ctset_tidy'
                    .form-inline
                      .form-group
                        .input-group.input-group-sm.input-group-bt
                          input#td_amount.form-control(value = 20, type = 'number')
                          .input-group-btn
                            button.btn.btn-primary.bt-control(type = 'button', value = 'tidy') 文字ごとに改行
                        .input-group.input-group-sm.input-group-bt
                          input#td2_reg.form-control(value = '\\d{2,2}:', type = 'text')
                          .input-group-btn
                            button.btn.btn-primary.bt-control(type = 'button', value = 'tidy2') ごとに頭出し
                        .btn-group.btn-group-sm(role = 'group', aria-label = '...')
                          each val in [{value: '。',checked: true},{value: '、'},{value: '\.'},{value: '\,'},{value: '「」',checked: true},{value: '（）'}]
                            label.btn.btn-info #[input.tidy3_cb(name = 'tidy3_cb', type = 'checkbox', value!=val.value, checked = val.checked)] !{val.value}
                          button.btn.btn-primary.btn-sm.bt-control(type = 'button', value = 'tidy3') で改行
                    button.btn.btn-primary.bt-control(type = 'button', value = 'tree') 列挙パスをツリー化
                    button.btn.btn-primary.bt-control(type = 'button', value = 'path') ツリーを列挙パス化
                    button.btn.btn-primary.bt-control(type = 'button', value = 'jsonTidy') JSON整形
                  else if key2 === 'ctset_grep'
                    .form-inline
                      .form-group
                        .input-group.input-group-sm
                          span.input-group-btn
                            label.btn.btn-primary #[input#caps(type = 'checkbox' )] Aa
                          input.form-control(type = 'text', id = 'rep_find', value = '', placeholder = 'Find What')
                        .input-group.input-group-sm
                          input.form-control(type = 'text', id = 'rep_rep', value = '', placeholder = 'Replace With')
                          span.input-group-btn
                            button.btn.btn-primary.bt-control(type = 'button', title = '置換' , value = 'replacement') 置換
                  else if key2 === 'ctset_ime'
                    each val, key in {accent: '符号付き英字', ligat: '英合字', pyin: 'ピンイン入力', uni: 'Unicode'}
                      button.btn.btn-primary.btn-sm( type = 'button', data-toggle = 'modal', data-target = '#' + key) #{val}
          ul.link-list
            li: a.btn.btn-primary(data-toggle = 'modal', data-target = '#help') #[i.fa.fa-question-circle(aria-hidden = 'true')] help
            li: a.btn.btn-primary(target='_blank', href='https://github.com/ichimonji/textConvertor') #[i.fa.fa-github(aria-hidden = 'true')] github
      section.section-ime
        #accent.modal.fade(tabindex = '-1', role = 'dialog')
          .modal-dialog(role = 'document')
            .modal-content
              .modal-header
                button.close(type = 'button', data-dismiss = 'modal', aria-label = 'Close')
                  span(aria-hidden = 'true') &times;
                h4.modal-title 符号付き英字
              .modal-body
                #alphaDisp.alphaDisp
                .btn-group.btn-group-sm.btn-col13.btn-group-alpha(role = 'group', aria-label = '...')
                  button.btn.btn-info.btn-control( type = 'button', value = 'case') Aa
                  each val in ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
                    button.btn.btn-primary.btn-alpha( type = 'button', value = val) #{val}
                #alpha_opt.btn-group.btn-group-sm.btn-col13
                button.btn.btn-primary.bt-control(type = 'button', value = 'accent') 決定
      section.section-ime
        #ligat.modal.fade(tabindex = '-1', role = 'dialog')
          .modal-dialog(role = 'document')
            .modal-content
              .modal-header
                button.close(type = 'button', data-dismiss = 'modal', aria-label = 'Close')
                  span(aria-hidden = 'true') &times;
                h4.modal-title 英合字
              .modal-body
                #ligatDisp.ligatDisp
                .btn-group.btn-group-sm.btn-col13.btn-group-ligat(role = 'group', aria-label = '...')
                  each val in ['ae','ao','au','av','ay','db','dz','ff','ffi','ffl','fi','fl','ft','ij','lb','lj','ng','nj','oe','oo','ou','qp','st','sz','ue','vy']
                    button.btn.btn-primary.btn-ligat( type = 'button', value = val) #{val}
                #ligat_opt.btn-group.btn-group-sm.btn-col13
                button.btn.btn-primary.bt-control(type = 'button', value = 'ligature') 決定
      section.section-ime
        #pyin.modal.fade(tabindex = '-1', role = 'dialog')
          .modal-dialog(role = 'document')
            .modal-content
              .modal-header
                button.close(type = 'button', data-dismiss = 'modal', aria-label = 'Close')
                  span(aria-hidden = 'true') &times;
                h4.modal-title ピンイン入力
              .modal-body
                #pyinDisp.pyinDisp
                .btn-group.btn-group-sm.btn-col10.btn-group-pyin(role = 'group', aria-label = '...')
                  each val in ['a','b','c','ch','d','e','f','g','h','j','k','l','m','n','o','p','q','r','s','sh','t','w','x','y','z','zh']
                    button.btn.btn-primary.btn-pyin(type = 'button', value = val) #{val}
                #pyin_opt.btn-group.btn-group-sm.btn-col13
                #pyin_opt2.btn-group.btn-group-sm.btn-col13
                button.btn.btn-primary.bt-control(type = 'button', value = 'pinyin2') 決定
      section.section-ime
        #uni.modal.fade(tabindex = '-1', role = 'dialog')
          .modal-dialog(role = 'document')
            .modal-content
              .modal-header
                button.close(type = 'button', data-dismiss = 'modal', aria-label = 'Close')
                  span(aria-hidden = 'true') &times;
                h4.modal-title Unicode入力
              .modal-body
                #uniDisp.uniDisp
                .btn-group.btn-group-sm.btn-col10.btn-group-uni(role = 'group', aria-label = '...')
                  select#uniSelect.form-control
                    each val, key in uniGroup
                      option(value = val) #{key}
                #uni_opt.btn-group.btn-group-sm.btn-col13
                button.btn.btn-primary.bt-control(type = 'button', value = 'uni2') 決定
      section.info
        #settings.modal.help.fade(tabindex = '-1', role = 'dialog')
          .modal-dialog.modal-sm(role = 'document')
            .modal-content
              .modal-header
                button.close(type = 'button', data-dismiss = 'modal', aria-label = 'Close')
                  span(aria-hidden = 'true') &times;
                h4.modal-title settings
              .modal-body
                each val, key in settings
                  .form-group
                    label(for = key) !{val.title}
                    .btn-group(class = 'col' + Object.keys(val.arr).length, data-toggle = 'buttons', role = 'group', aria-label = 'setting: ' + key)
                      each val2, key2 in val.arr
                        - var checkedflg = (key2 === val.checked);
                        label.btn.btn-primary(class = checkedflg ? 'active' : '') #[input(type = 'radio', name = key, value = val2, checked = checkedflg)] !{key2}
              .modal-footer
                button.btn.btn-default.btn-sm(type = 'button', data-dismiss = 'modal') Close
      section.info
        #help.modal.help.fade(tabindex = '-1', role = 'dialog')
          .modal-dialog(role = 'document')
            .modal-content
              .modal-header
                button.close(type = 'button', data-dismiss = 'modal', aria-label = 'Close')
                  span(aria-hidden = 'true') &times;
                h4.modal-title #{$title} help
              .modal-body
                include:markdown-it:html-beautify help.md
              .modal-footer
                button.btn.btn-default(type = 'button', data-dismiss = 'modal') Close
      textarea#forCopy
    footer.footer
      a(href = 'https://twitter.com/ichimonji_haji') #[i.fa.fa-twitter] @ichimonji_haji
    +jsAll(scripts)
