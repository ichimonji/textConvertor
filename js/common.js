(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/* eslint no-unused-vars: 0 */

var
// export const
// 簡体字、繁体字、日本漢字の単語
cjkAll = exports.cjkAll = ['碍礙礙', '芦蘆蘆', '医醫医', '郁鬱鬱', '咽嚥嚥', '丑醜醜', '云雲雲', '欧歐欧', '殴毆殴', '画畫画', '会會会', '回迴迴', '蛎蠣蛎', '学學学', '叶葉葉', '决決決', '干乾乾', '干幹幹', '机機機', '吃吃喫', '旧舊旧', '侠俠侠', '峡峽峡', '挟挾挟', '狭狹狭', '曲麯麯', '区區区', '躯軀躯', '径徑径', '系係係', '系繫繫', '茎莖茎', '芸蕓蕓', '献獻献', '御禦御', '后後後', '号號号', '国國国', '静靜静', '困睏睏', '才才才', '晒曬曬', '参參参', '惨慘惨', '蚕蠶蚕', '杠槓槓', '黄黃黄', '残殘残', '辞辭辞', '湿濕湿', '屡屢屡', '写寫写', '借藉藉', '寿壽寿', '秋鞦鞦', '准準準', '将將将', '庄莊荘', '松鬆鬆', '症癥症', '称稱称', '换換換', '蒋蔣蒋', '条條条', '状狀状', '嘱囑嘱', '触觸触', '寝寢寝', '尽盡尽', '尽儘侭', '随隨随', '数數数', '枢樞枢', '据據拠', '制製製', '声聲声', '折摺摺', '窃竊窃', '蝉蟬蝉', '千韆韆', '浅淺浅', '践踐践', '禅禪禅', '曾曾曽', '双雙双', '壮壯壮', '装裝装', '属屬属', '堕墮堕', '体體体', '滞滯滞', '台臺台', '台檯檯', '台颱颱', '谷穀穀', '担擔担', '箪簞箪', '胆膽胆', '断斷断', '筑築築', '昼晝昼', '虫蟲虫', '沈瀋沈', '掴摑掴', '点點点', '斗鬥闘', '砺礪砺', '党黨党', '冬鼕鼕', '涛濤涛', '灯燈灯', '当當当', '祷禱祷', '独獨独', '迩邇迩', '祢禰祢', '麦麥麦', '板闆板', '蛮蠻蛮', '桧檜桧', '没沒没', '表錶錶', '蔑蔑蔑', '宝寶宝', '卜蔔蔔', '朴樸朴', '万萬万', '蒙矇矇', '蒙濛濛', '蒙懞懞', '弥彌弥', '弥瀰瀰', '薮藪籔', '余餘余', '与與与', '誉譽誉', '踊踴踊', '淀澱澱', '来來来', '莱萊萊', '乱亂乱', '里裏裏', '累纍累', '励勵励', '怜憐憐', '礼禮礼', '恋戀恋', '炉爐炉', '楼樓楼', '湾灣湾', '个個個', '乘乘乗', '豫豫予', '从從従', '仆僕僕', '价價価', '佛佛仏', '假假仮', '儿兒児', '冲衝衝', '几幾幾', '凭憑憑', '刮颳颳', '剩剩剰', '卷捲巻', '厂廠廠', '吁籲籲', '听聽聴', '咸鹹鹹', '圈圈圏', '坏壞壊', '壤壤壌', '壹壹壱', '梦夢夢', '夸誇誇', '奘奘弉', '姜薑姜', '广廣広', '弯彎彎', '惧懼懼', '惠惠恵', '愿願願', '愼愼慎', '拔拔抜', '拜拜拝', '拂拂払', '搜搜捜', '插插挿', '收收収', '无無無', '霸霸覇', '档檔档', '气氣気', '洒灑灑', '渊淵淵', '溪溪渓', '漓灕灕', '濳濳潜', '犹猶猶', '默默黙', '畴疇疇', '痒癢痒', '盖蓋蓋', '眞眞真', '碎碎砕', '稻稻稲', '穗穗穂', '穰穰穣', '粮糧糧', '粹粹粋', '纃纃緕', '缺缺欠', '罐罐缶', '网網網', '舍捨舎', '舖舖舗', '范範範', '苹蘋蘋', '荐薦薦', '藏藏蔵', '襃襃褒', '襌襌褝', '辟闢闢', '醉醉酔', '鎭鎭鎮', '鑛鑛鉱', '鑪鑪鈩', '陷陷陥', '隶隸隷', '靱靱靭', '髓髓髄', '鷆鷆鷏', '麸麩麸', '增增増', '德德徳', '敎敎教', '淸淸清', '甁甁瓶', '薰薰薫', '赶趕趕', '郞郞郎', '黑黑黒', '专專専', '业業業', '丛叢叢', '东東東', '丝絲糸', '两兩両', '严嚴厳', '丧喪喪', '丰豐豊', '临臨臨', '为為為', '丽麗麗', '举舉挙', '么麼麽', '义義義', '乌烏烏', '乐樂楽', '乔喬喬', '习習習', '乡鄉郷', '书書書', '买買買', '亏虧虧', '亚亞亜', '产產産', '亩畝畝', '亲親親', '亵褻褻', '亿億億', '仅僅僅', '仑侖侖', '仓倉倉', '仪儀儀', '们們們', '众衆衆', '优優優', '伙夥夥', '伛傴傴', '伞傘傘', '伟偉偉', '传傳伝', '伤傷傷', '伥倀倀', '伦倫倫', '伧傖傖', '伪僞偽', '佣傭傭', '佥僉僉', '侥僥僥', '侦偵偵', '侧側側', '侨僑僑', '侩儈儈', '侪儕儕', '侬儂儂', '俦儔儔', '俨儼儼', '俩倆倆', '俪儷儷', '俭儉倹', '债債債', '倾傾傾', '偻僂僂', '偾僨僨', '偿償償', '傥儻儻', '傧儐儐', '储儲儲', '傩儺儺', '兰蘭蘭', '关關関', '兴興興', '养養養', '兽獸獣', '冁囅囅', '冈岡岡', '军軍軍', '农農農', '冯馮馮', '冻凍凍', '凤鳳鳳', '凫鳬鳬', '凯凱凱', '击擊撃', '凿鑿鑿', '刍芻芻', '划劃劃', '刘劉劉', '则則則', '刚剛剛', '创創創', '刬剗剗', '刭剄剄', '刽劊劊', '刿劌劌', '剀剴剴', '剂劑剤', '剐剮剮', '剑劍剣', '剧劇劇', '况況況', '劝勸勧', '办辦辦', '务務務', '动動動', '劲勁勁', '劳勞労', '势勢勢', '勋勛勛', '勚勩勩', '匦匭匭', '匮匱匱', '华華華', '协協協', '单單単', '卖賣売', '卢盧盧', '卤鹵鹵', '卤滷滷', '卫衞衛', '卽卽即', '厅廳庁', '历歷歴', '历曆暦', '厉厲厲', '压壓圧', '厌厭厭', '厍厙厙', '厕厠厠', '厣厴厴', '县縣県', '叆靉靉', '叇靆靆', '发發発', '发髮髪', '变變変', '叹嘆嘆', '叽嘰嘰', '吓嚇嚇', '吗嗎嗎', '吞吞呑', '吨噸噸', '启啟啓', '吿吿告', '呒嘸嘸', '呓囈囈', '呕嘔嘔', '呖嚦嚦', '呗唄唄', '员員員', '呛嗆嗆', '呜嗚嗚', '咙嚨嚨', '咛嚀嚀', '咝噝噝', '响響響', '哑啞唖', '哒噠噠', '哓嘵嘵', '哔嗶嗶', '哕噦噦', '哗嘩嘩', '哙噲噲', '哝噥噥', '哟喲喲', '唛嘜嘜', '唝嗊嗊', '唠嘮嘮', '唡啢啢', '唢嗩嗩', '啧嘖嘖', '啬嗇嗇', '啭囀囀', '啮嚙噛', '啰囉囉', '啸嘯嘯', '喷噴噴', '喽嘍嘍', '喾嚳嚳', '嗫囁囁', '嗳噯噯', '嘤嚶嚶', '噜嚕噜', '嚣囂囂', '囊囊嚢', '团團団', '园園園', '围圍囲', '囵圇圇', '图圖図', '圆圓円', '圣聖聖', '圹壙壙', '场場場', '块塊塊', '坚堅堅', '坛壇壇', '坛罎壇', '坜壢壢', '坝壩壩', '坞塢塢', '坟墳墳', '坠墜墜', '垄壟壟', '垆壚壚', '垒壘塁', '垦墾墾', '垩堊堊', '垫墊墊', '垭埡埡', '垲塏塏', '埘塒塒', '埙塤塤', '埚堝堝', '堑塹塹', '塡塡填', '墙墻墻', '壳殻殻', '壶壺壷', '壸壼壼', '处處処', '备備備', '复復復', '复複複', '头頭頭', '夹夾夾', '夺奪奪', '奁奩奩', '奋奮奮', '奖奬奨', '妆妝妝', '妇婦婦', '妈媽媽', '妩嫵嫵', '妪嫗嫗', '妫嬀嬀', '姬姬姫', '姸姸妍', '娄婁婁', '娅婭婭', '娆嬈嬈', '娇嬌嬌', '娈孌孌', '娲媧媧', '娴嫻嫻', '婳嫿嫿', '婴嬰嬰', '婵嬋嬋', '婶嬸嬸', '嫒嬡嬡', '嫔嬪嬪', '嫱嬙嬙', '孙孫孫', '孪孿孿', '宁寧寧', '实實実', '宠寵寵', '审審審', '宪憲憲', '宽寬寛', '宾賓賓', '对對対', '寻尋尋', '导導導', '尔爾爾', '尘塵塵', '尙尙尚', '尝嘗嘗', '尧堯尭', '尴尷尷', '层層層', '屛屛屏', '屦屨屨', '屿嶼嶼', '岁歲歳', '岂豈豈', '岖嶇嶇', '岗崗崗', '岘峴峴', '岚嵐嵐', '岛島島', '岭嶺嶺', '岽崬崬', '岿巋巋', '峃嶨嶨', '峄嶧嶧', '峣嶢嶢', '峤嶠嶠', '峦巒巒', '崂嶗嶗', '崃崍崍', '崭嶄嶄', '嵘嶸嶸', '嵚嶔嶔', '嵝嶁嶁', '巅巔巓', '巢巢巣', '巩鞏鞏', '巯巰巰', '币幣幣', '帅帥帥', '师師師', '帏幃幃', '帐帳帳', '帘簾簾', '帜幟幟', '带帶帯', '帧幀幀', '帮幫幇', '帻幘幘', '帼幗幗', '庆慶慶', '庐廬廬', '庑廡廡', '库庫庫', '应應応', '庙廟廟', '庞龐龐', '废廢廃', '庼廎廎', '开開開', '张張張', '弹彈弾', '归歸帰', '录録録', '彻徹徹', '徕徠来', '忆憶憶', '忏懺懴', '忧憂憂', '忾愾愾', '怀懷懐', '态態態', '怂慫慫', '怃憮憮', '怄慪慪', '怅悵悵', '怆愴愴', '总總総', '怼懟懟', '怿懌懌', '恳懇懇', '恶惡悪', '恶噁悪', '恸慟慟', '恹懨懨', '恺愷愷', '恻惻惻', '恼惱悩', '恽惲惲', '悫慤慤', '悬懸懸', '悭慳慳', '悯憫憫', '惊驚驚', '惩懲懲', '惫憊憊', '惬愜愜', '惭慚慚', '惮憚憚', '惯慣慣', '愤憤憤', '愦憒憒', '慑懾懾', '懑懣懣', '懒懶懶', '戆戇戇', '戋戔戔', '戏戲戯', '戗戧戧', '战戰戦', '戾戾戻', '扑撲撲', '执執執', '扩擴拡', '扪捫捫', '扫掃掃', '扬揚揚', '扰擾擾', '抚撫撫', '抟摶摶', '抠摳摳', '抡掄掄', '抢搶搶', '护護護', '报報報', '拟擬擬', '拢攏攏', '拣揀揀', '拥擁擁', '拦攔攔', '拧擰擰', '拨撥撥', '择擇擇', '挚摯摯', '挛攣攣', '挜掗掗', '挝撾撾', '挞撻撻', '挠撓撓', '挡擋擋', '挢撟撟', '挤擠擠', '挥揮揮', '挦撏撏', '捞撈撈', '损損損', '捡撿撿', '捣搗搗', '掳擄擄', '掷擲擲', '掸撣撣', '掺摻摻', '掼摜摜', '揭揭掲', '揽攬攬', '揿撳撳', '搀攙攙', '搁擱擱', '搂摟摟', '搅攪撹', '搔搔掻', '摄攝摂', '摅攄攄', '摆擺擺', '摆襬擺', '摈擯擯', '摊攤攤', '撄攖攖', '撵攆攆', '撷擷擷', '撺攛攛', '擞擻擻', '攒攢攅', '敌敵敵', '敛斂斂', '斋齋斎', '斓斕斕', '斩斬斬', '时時時', '旷曠昿', '旸暘暘', '昙曇曇', '昽曨曨', '显顯顕', '晓曉暁', '晔曄曄', '晕暈暈', '晚晚晩', '暂暫暫', '暧曖曖', '术術術', '杀殺殺', '杂雜雑', '权權権', '杨楊楊', '极極極', '构構構', '枞樅樅', '枣棗棗', '枥櫪櫪', '枧梘梘', '枨棖棖', '枪槍槍', '枫楓楓', '枭梟梟', '柜櫃櫃', '柠檸檸', '查查査', '柽檉檉', '栅栅柵', '标標標', '栈棧桟', '栉櫛櫛', '栊櫳槞', '栋棟棟', '栌櫨櫨', '栎櫟檪', '栏欄欄', '树樹樹', '样樣様', '栾欒欒', '桡橈橈', '桢楨楨', '桤榿榿', '桥橋橋', '桦樺樺', '桨槳槳', '桩樁樁', '检檢検', '棂欞欞', '椟櫝櫝', '椠槧槧', '椤欏欏', '椭橢橢', '榄欖欖', '榇櫬櫬', '榈櫚櫚', '榉櫸﨔', '槚檟檟', '槛檻檻', '槟檳梹', '槠櫧櫧', '槪槪概', '樯檣檣', '樱櫻桜', '橹櫓櫓', '橼櫞櫞', '欢歡歓', '欤歟歟', '步步歩', '歼殲殲', '殇殤殤', '殒殞殞', '殓殮殮', '殚殫殫', '殡殯殯', '毂轂轂', '每每毎', '毕畢畢', '毙斃斃', '毡氈氈', '毵毿毿', '氇氌氌', '氢氫氫', '氩氬氬', '汇匯匯', '汇彙彙', '汉漢漢', '污污汚', '汤湯湯', '沟溝溝', '沣灃灃', '沤漚漚', '沥瀝瀝', '沦淪淪', '沧滄滄', '沨渢渢', '沩潙潙', '沪滬滬', '泞濘濘', '泷瀧滝', '泸瀘濾', '泺濼濼', '泻瀉瀉', '泼潑溌', '泽澤沢', '泾涇涇', '洁潔潔', '洼窪窪', '浃浹浹', '浆漿漿', '浇澆澆', '浈湞湞', '浉溮溮', '浊濁濁', '测測測', '浍澮澮', '济濟済', '浏瀏瀏', '浐滻滻', '浑渾渾', '浒滸滸', '浓濃濃', '浔潯潯', '浕濜濜', '涂塗塗', '涉涉渉', '涝澇澇', '涞淶淶', '涟漣漣', '涠潿潿', '涡渦渦', '涢溳溳', '涤滌滌', '润潤潤', '涧澗澗', '涨漲漲', '涩澀渋', '渍漬漬', '渎瀆涜', '渐漸漸', '渑澠澠', '渔漁漁', '渗滲滲', '渴渴渇', '溃潰潰', '溅濺濺', '溇漊漊', '滗潷潷', '滟灧灧', '滠灄灄', '满滿満', '滤濾沪', '滥濫濫', '滦灤灤', '滨濱浜', '滩灘灘', '滪澦澦', '潇瀟瀟', '潋瀲瀲', '潍濰濰', '澜瀾瀾', '濑瀨瀬', '濒瀕瀕', '灏灝灝', '灭滅滅', '灵靈霊', '灶竈竃', '灿燦燦', '炀煬煬', '炜煒煒', '炝熗熗', '炼煉煉', '炽熾熾', '烁爍爍', '烂爛爛', '烃烴烴', '烛燭燭', '烦煩煩', '烧燒焼', '烨燁燁', '烩燴燴', '烫燙燙', '烬燼燼', '热熱熱', '焖燜燜', '焘燾燾', '爱愛愛', '爷爺爺', '牍牘牘', '牵牽牽', '牺犧犠', '犊犢犢', '犷獷獷', '犸獁獁', '狈狽狽', '狞獰獰', '狮獅獅', '狯獪獪', '狱獄獄', '狲猻猻', '猃獫獫', '猎獵猟', '猕獼獼', '猡玀玀', '獭獺獺', '玑璣璣', '玛瑪瑪', '玮瑋瑋', '环環環', '现現現', '玱瑲瑲', '玺璽璽', '珑瓏瓏', '珲琿琿', '琎璡璡', '琏璉璉', '琐瑣瑣', '琼瓊瓊', '瑷璦璦', '璎瓔瓔', '瓒瓚瓚', '瓯甌甌', '电電電', '畅暢暢', '疖癤癤', '疗療療', '疟瘧瘧', '疠癘癘', '疡瘍瘍', '疬癧癧', '疮瘡瘡', '疯瘋瘋', '痈癰癰', '痉痙痙', '痨癆癆', '痫癇癇', '瘅癉癉', '瘆瘮瘮', '瘗瘞瘞', '瘘瘻瘻', '瘦瘦痩', '瘪癟癟', '瘫癱癱', '瘾癮癮', '瘿癭癭', '癞癩癩', '癣癬癬', '癫癲癲', '皑皚皚', '皱皺皺', '皲皸皸', '盏盞盞', '盐鹽塩', '监監監', '盘盤盤', '眍瞘瞘', '睐睞睞', '睑瞼瞼', '瞒瞞瞞', '瞩矚矚', '矫矯矯', '矶磯磯', '矾礬礬', '矿礦砿', '砀碭碭', '码碼碼', '砖磚甎', '砗硨硨', '砚硯硯', '砜碸碸', '砻礱礱', '砾礫礫', '础礎礎', '硏硏研', '硕碩碩', '硖硤硤', '硗磽磽', '硙磑磑', '硚礄礄', '确確確', '硷鹼鹸', '碛磧磧', '碜磣磣', '祎禕禕', '祯禎禎', '祸禍禍', '离離離', '种種種', '积積積', '秽穢穢', '稣穌穌', '稳穩穏', '穑穡穡', '穷窮窮', '窍竅竅', '窎窵窵', '窜竄竄', '窝窩窩', '窥窺窺', '窦竇竇', '窭窶窶', '竖竪竪', '竞競競', '笃篤篤', '笔筆筆', '笕筧筧', '笺箋箋', '笼籠篭', '笾籩籩', '筚篳篳', '筛篩篩', '筹籌籌', '签籤籖', '签簽簽', '简簡簡', '箓籙籙', '箦簀簀', '箧篋篋', '箨籜籜', '箩籮籮', '箫簫簫', '篑簣簣', '篓簍簍', '篮籃籃', '篱籬籬', '簖籪籪', '籁籟籟', '籴糴糴', '类類類', '粜糶糶', '粝糲糲', '粪糞糞', '糁糝糝', '紧緊緊', '絷縶縶', '纠糾糾', '纡紆紆', '红紅紅', '纣紂紂', '纤縴縴', '纤纖繊', '纥紇紇', '约約約', '级級級', '纨紈紈', '纩纊絋', '纪紀紀', '纫紉紉', '纬緯緯', '纭紜紜', '纯純純', '纰紕紕', '纱紗紗', '纲綱綱', '纳納納', '纴紝紝', '纵縱縦', '纶綸綸', '纷紛紛', '纸紙紙', '纹紋紋', '纺紡紡', '纼紖紖', '纽紐紐', '纾紓紓', '线綫綫', '绀紺紺', '绁紲紲', '绂紱紱', '练練練', '组組組', '绅紳紳', '细細細', '织織織', '终終終', '绉縐縐', '绊絆絆', '绋紼紼', '绌絀絀', '绍紹紹', '绎繹繹', '经經経', '绐紿紿', '绑綁綁', '绒絨絨', '结結結', '绔絝絝', '绕繞繞', '绖絰絰', '绗絎絎', '绘繪絵', '给給給', '绚絢絢', '绛絳絳', '络絡絡', '绝絶絶', '绞絞絞', '统統統', '绠綆綆', '绡綃綃', '绢絹絹', '绣綉綉', '绥綏綏', '绦縧縧', '继繼継', '绨綈綈', '绩績績', '绪緒緒', '绫綾綾', '续續続', '绮綺綺', '绯緋緋', '绰綽綽', '绲緄緄', '绳繩縄', '维維維', '绵綿綿', '绶綬綬', '绷綳綳', '绸綢紬', '绺綹綹', '绻綣綣', '综綜綜', '绽綻綻', '绾綰綰', '绿緑緑', '缀綴綴', '缁緇緇', '缂緙緙', '缃緗緗', '缄緘緘', '缅緬緬', '缆纜纜', '缇緹緹', '缈緲緲', '缉緝緝', '缊緼緼', '缌緦緦', '缎緞緞', '缑緱緱', '缒縋縋', '缓緩緩', '缔締締', '缕縷縷', '编編編', '缗緡緡', '缘緣縁', '缙縉縉', '缚縛縛', '缛縟縟', '缜縝縝', '缝縫縫', '缞縗縗', '缟縞縞', '缠纏纏', '缡縭縭', '缢縊縊', '缣縑縑', '缤繽繽', '缥縹縹', '缦縵縵', '缧縲縲', '缨纓纓', '缩縮縮', '缪繆繆', '缫繅繅', '缬纈纈', '缭繚繚', '缮繕繕', '缯繒繒', '缰繮繮', '缱繾繾', '缲繰繰', '缳繯繯', '缴繳繳', '缵纘纘', '罂罌罌', '罗羅羅', '罚罰罰', '罢罷罷', '罴羆羆', '羁羈羈', '羟羥羥', '翘翹翹', '翚翬翬', '耢耮耮', '耧耬耬', '耸聳聳', '聂聶聶', '聋聾聾', '职職職', '聍聹聹', '联聯聯', '聩聵聵', '聪聰聡', '肃肅粛', '肠腸腸', '肤膚膚', '肮骯骯', '肾腎腎', '肿腫腫', '胀脹脹', '胁脅脅', '胜勝勝', '胧朧朧', '胨腖腖', '胪臚臚', '胫脛脛', '胶膠膠', '脍膾膾', '脏臟臓', '脏髒臓', '脐臍臍', '脑腦脳', '脓膿膿', '脔臠臠', '脶腡腡', '脸臉臉', '腊臘臘', '腘膕膕', '腻膩膩', '腾騰騰', '膑臏臏', '臜臢臢', '舆輿輿', '舰艦艦', '舱艙艙', '舻艫舮', '艰艱艱', '艳艷艶', '艺藝芸', '节節節', '芗薌薌', '芜蕪蕪', '苁蓯蓯', '苇葦葦', '苈藶藶', '苋莧莧', '苍蒼蒼', '苏蘇蘇', '茏蘢蘢', '茑蔦蔦', '茔塋塋', '茕煢煢', '茧繭繭', '荆荆荊', '荚莢莢', '荛蕘蕘', '荜蓽蓽', '荞蕎蕎', '荟薈薈', '荠薺薺', '荡蕩蕩', '荣榮栄', '荤葷葷', '荥滎滎', '荦犖犖', '荧熒熒', '荨蕁蕁', '荩藎藎', '荪蓀蓀', '荫蔭蔭', '荬蕒蕒', '荭葒葒', '荮葤葤', '药藥薬', '莲蓮蓮', '莳蒔蒔', '莴萵萵', '获獲獲', '获穫穫', '莸蕕蕕', '莹瑩瑩', '莺鶯鶯', '莼蒓蒓', '萚蘀蘀', '萝蘿蘿', '萤螢蛍', '营營営', '萦縈縈', '萧蕭蕭', '萨薩薩', '蒇蕆蕆', '蒉蕢蕢', '蒌蔞蔞', '蓝藍藍', '蓟薊薊', '蓣蕷蕷', '蓦驀驀', '蔷薔薔', '蔹蘞蘞', '蔺藺藺', '蔼藹藹', '蕲蘄蘄', '蕴藴藴', '藓蘚蘚', '虏虜虜', '虑慮慮', '虮蟣蟣', '虽雖雖', '虾蝦蝦', '虿蠆蠆', '蚀蝕蝕', '蚁蟻蟻', '蚂螞螞', '蚬蜆蜆', '蛊蠱蠱', '蛏蟶蟶', '蛰蟄蟄', '蛱蛺蛺', '蛲蟯蟯', '蛳螄螄', '蛴蠐蠐', '蜗蝸蝸', '蜡蠟蝋', '蝇蠅蠅', '蝈蟈蟈', '蝼螻螻', '蝾蠑蠑', '螨蟎蟎', '蟏蠨蠨', '衅釁釁', '衔銜啣', '补補補', '衬襯襯', '袄襖襖', '袅裊裊', '袜襪襪', '袭襲襲', '裆襠襠', '裢褳褳', '裣襝襝', '裤褲袴', '裥襇襇', '褛褸褸', '褴襤襤', '见見見', '观觀観', '觃覎覎', '规規規', '觅覓覓', '视視視', '觇覘覘', '览覽覧', '觉覺覚', '觊覬覬', '觋覡覡', '觌覿覿', '觎覦覦', '觏覯覯', '觐覲覲', '觑覷覷', '觞觴觴', '詟讋讋', '誊謄謄', '计計計', '订訂訂', '讣訃訃', '认認認', '讥譏譏', '讦訐訐', '讧訌訌', '讨討討', '让讓譲', '讪訕訕', '讫訖訖', '训訓訓', '议議議', '讯訊訊', '记記記', '讲講講', '讳諱諱', '讴謳謳', '讵詎詎', '讶訝訝', '讷訥訥', '许許許', '讹訛訛', '论論論', '讻訩訩', '讼訟訟', '讽諷諷', '设設設', '访訪訪', '诀訣訣', '证證証', '诂詁詁', '诃訶訶', '评評評', '诅詛詛', '识識識', '诇詗詗', '诈詐詐', '诉訴訴', '诊診診', '诋詆詆', '诌謅謅', '词詞詞', '诎詘詘', '诏詔詔', '译譯訳', '诒詒詒', '诓誆誆', '诔誄誄', '试試試', '诖詿詿', '诗詩詩', '诘詰詰', '诙詼詼', '诚誠誠', '诛誅誅', '话話話', '诞誕誕', '诟詬詬', '诠詮詮', '诡詭詭', '询詢詢', '诣詣詣', '诤諍諍', '该該該', '详詳詳', '诧詫詫', '诨諢諢', '诩詡詡', '诫誡誡', '诬誣誣', '语語語', '诮誚誚', '误誤誤', '诰誥誥', '诱誘誘', '诲誨誨', '诳誑誑', '说説説', '诵誦誦', '诶誒誒', '请請請', '诸諸諸', '诹諏諏', '诺諾諾', '读讀読', '诼諑諑', '诽誹誹', '课課課', '诿諉諉', '谀諛諛', '谁誰誰', '谂諗諗', '调調調', '谄諂諂', '谅諒諒', '谆諄諄', '谇誶誶', '谈談談', '谉讅讅', '谊誼誼', '谋謀謀', '谌諶諶', '谍諜諜', '谎謊謊', '谏諫諌', '谐諧諧', '谑謔謔', '谒謁謁', '谓謂謂', '谔諤諤', '谕諭諭', '谖諼諼', '谗讒讒', '谘諮諮', '谙諳諳', '谚諺諺', '谛諦諦', '谜謎謎', '谝諞諞', '谞諝諝', '谟謨謨', '谠讜讜', '谡謖謖', '谢謝謝', '谣謠謠', '谤謗謗', '谥謚謚', '谦謙謙', '谧謐謐', '谨謹謹', '谩謾謾', '谪謫謫', '谫謭謭', '谬謬謬', '谭譚譚', '谮譖譛', '谯譙譙', '谰讕讕', '谱譜譜', '谲譎譎', '谳讞讞', '谴譴譴', '谵譫譫', '谶讖讖', '豮豶豶', '贝貝貝', '贞貞貞', '负負負', '贡貢貢', '财財財', '责責責', '贤賢賢', '败敗敗', '账賬賬', '货貨貨', '质質質', '贩販販', '贪貪貪', '贫貧貧', '贬貶貶', '购購購', '贮貯貯', '贯貫貫', '贰貳弐', '贱賤賎', '贲賁賁', '贳貰貰', '贴貼貼', '贵貴貴', '贶貺貺', '贷貸貸', '贸貿貿', '费費費', '贺賀賀', '贻貽貽', '贼賊賊', '贽贄贄', '贾賈賈', '贿賄賄', '赁賃賃', '赂賂賂', '赃贜贜', '资資資', '赅賅賅', '赆贐贐', '赈賑賑', '赉賚賚', '赊賒賒', '赋賦賦', '赌賭賭', '赍賫賫', '赎贖贖', '赏賞賞', '赐賜賜', '赒賙賙', '赓賡賡', '赔賠賠', '赕賧賧', '赖賴頼', '赗賵賵', '赘贅贅', '赙賻賻', '赚賺賺', '赛賽賽', '赜賾賾', '赝贋贋', '赞贊賛', '赠贈贈', '赡贍贍', '赢贏贏', '赣贛贛', '赪赬赬', '赵趙趙', '趋趨趨', '趱趲趲', '趸躉躉', '跃躍躍', '跄蹌蹌', '跷蹺蹺', '跸蹕蹕', '跹躚躚', '跻躋躋', '踌躊躊', '踬躓躓', '踯躑躑', '蹑躡躡', '蹒蹣蹣', '蹿躥躥', '躏躪躙', '躜躦躦', '车車車', '轧軋軋', '轨軌軌', '轩軒軒', '轫軔軔', '转轉転', '轭軛軛', '轮輪輪', '软軟軟', '轰轟轟', '轱軲軲', '轲軻軻', '轳轤轤', '轴軸軸', '轶軼軼', '轷軤軤', '轸軫軫', '轹轢轢', '轺軺軺', '轻輕軽', '轼軾軾', '载載載', '轾輊輊', '轿轎轎', '辂輅輅', '较較較', '辄輒輒', '辅輔輔', '辆輛輌', '辇輦輦', '辈輩輩', '辉輝輝', '辊輥輥', '辋輞輞', '辍輟輟', '辎輜輜', '辏輳輳', '辐輻輻', '辑輯輯', '输輸輸', '辔轡轡', '辕轅轅', '辖轄轄', '辗輾輾', '辘轆轆', '辙轍轍', '辚轔轔', '辩辯弁', '辫辮弁', '边邊辺', '辽遼遼', '达達達', '迁遷遷', '过過過', '迈邁邁', '运運運', '还還還', '这這這', '进進進', '远遠遠', '违違違', '连連連', '迟遲遅', '适適適', '选選選', '逊遜遜', '递遞逓', '逦邐邐', '逬逬迸', '逻邏邏', '遗遺遺', '邓鄧鄧', '邝鄺鄺', '邬鄔鄔', '邮郵郵', '邹鄒鄒', '邺鄴鄴', '邻鄰隣', '郏郟郟', '郐鄶鄶', '郑鄭鄭', '郓鄆鄆', '郦酈酈', '郧鄖鄖', '郸鄲鄲', '酝醖醖', '酱醬醤', '酽釅釅', '酾釃釃', '酿釀醸', '释釋釈', '鉴鑒鑑', '銮鑾鑾', '錾鏨鏨', '钆釓釓', '钇釔釔', '针針針', '钉釘釘', '钊釗釗', '钋釙釙', '钌釕釕', '钍釷釷', '钎釺釺', '钏釧釧', '钐釤釤', '钒釩釩', '钓釣釣', '钔鍆鍆', '钕釹釹', '钖鍚鍚', '钗釵釵', '钘鈃鈃', '钙鈣鈣', '钚鈈鈈', '钛鈦鈦', '钝鈍鈍', '钞鈔鈔', '钟鐘鐘', '钠鈉鈉', '钡鋇鋇', '钢鋼鋼', '钤鈐鈐', '钥鑰鑰', '钦欽欽', '钧鈞鈞', '钨鎢鎢', '钩鈎鈎', '钪鈧鈧', '钫鈁鈁', '钬鈥鈥', '钭鈄鈄', '钮鈕鈕', '钯鈀鈀', '钰鈺鈺', '钱錢銭', '钲鉦鉦', '钳鉗拑', '钴鈷鈷', '钵鉢鉢', '钶鈳鈳', '钷鉕鉕', '钹鈸鈸', '钺鉞戉', '钻鑽鑽', '钼鉬鉬', '钽鉭鉭', '钾鉀鉀', '钿鈿鈿', '铀鈾鈾', '铁鐵鉄', '铂鉑鉑', '铃鈴鈴', '铄鑠鑠', '铅鉛鉛', '铆鉚鉚', '铈鈰鈰', '铉鉉鉉', '铊鉈鉈', '铋鉍鉍', '铌鈮鈮', '铍鈹鈹', '铎鐸鈬', '铏鉶鉶', '铐銬銬', '铑銠銠', '铒鉺鉺', '铓鋩鋩', '铕銪銪', '铗鋏鋏', '铙鐃鐃', '铛鐺鐺', '铜銅銅', '铝鋁鋁', '铞銱銱', '铟銦銦', '铠鎧鎧', '铡鍘鍘', '铢銖銖', '铣銑銑', '铤鋌鋌', '铥銩銩', '铧鏵鏵', '铨銓銓', '铩鎩鎩', '铪鉿鉿', '铫銚銚', '铬鉻鉻', '铭銘銘', '铮錚錚', '铯銫銫', '铰鉸鉸', '铱銥銥', '铲鏟鏟', '铳銃銃', '铵銨銨', '银銀銀', '铷銣銣', '铸鑄鋳', '铹鐒鐒', '铺鋪鋪', '铼錸錸', '铽鋱鋱', '链鏈鏈', '铿鏗鏗', '销銷銷', '锁鎖鎖', '锂鋰鋰', '锃鋥鋥', '锄鋤鋤', '锅鍋鍋', '锆鋯鋯', '锇鋨鋨', '锈銹銹', '锉銼銼', '锋鋒鋒', '锌鋅鋅', '锎鐦鐦', '锏鐧鐧', '锐鋭鋭', '锑銻銻', '锒鋃鋃', '锓鋟鋟', '锔鋦鋦', '锕錒錒', '锗鍺鍺', '锘鍩鍩', '错錯錯', '锚錨錨', '锛錛錛', '锝鍀鍀', '锞錁錁', '锟錕錕', '锡錫錫', '锢錮錮', '锣鑼鑼', '锤錘錘', '锥錐錐', '锦錦錦', '锧鑕鑕', '锨鍁鍁', '锫錇錇', '锭錠錠', '键鍵鍵', '锯鋸鋸', '锰錳錳', '锱錙錙', '锲鍥鍥', '锴鍇鍇', '锵鏘鏘', '锶鍶鍶', '锷鍔鍔', '锸鍤鍤', '锹鍬鍬', '锻鍛鍛', '锼鎪鎪', '锾鍰鍰', '锿鎄鎄', '镀鍍鍍', '镁鎂鎂', '镂鏤鏤', '镃鎡鎡', '镄鐨鐨', '镅鎇鎇', '镇鎮鎮', '镉鎘鎘', '镊鑷鑷', '镋钂钂', '镌鎸鎸', '镍鎳鎳', '镎鎿鎿', '镏鎦鎦', '镐鎬鎬', '镑鎊鎊', '镒鎰鎰', '镓鎵鎵', '镔鑌鑌', '镖鏢鏢', '镗鏜鏜', '镘鏝鏝', '镚鏰鏰', '镛鏞鏞', '镜鏡鏡', '镝鏑鏑', '镞鏃鏃', '镢鐝鐝', '镣鐐鐐', '镤鏷鏷', '镥鑥鑥', '镦鐓鐓', '镧鑭鑭', '镨鐠鐠', '镩鑹鑹', '镪鏹鏹', '镫鐙鐙', '镬鑊鑊', '镭鐳鐳', '镮鐶鐶', '镯鐲鐲', '镰鐮鎌', '镱鐿鐿', '镲鑔鑔', '镳鑣鑣', '镴鑞鑞', '镶鑲鑲', '长長長', '门門門', '闩閂閂', '闪閃閃', '闭閉閉', '问問問', '闯闖闖', '闰閏閏', '闱闈闈', '闲閑閑', '间間間', '闵閔閔', '闷悶悶', '闸閘閘', '闹鬧閙', '闺閨閨', '闻聞聞', '闼闥闥', '闽閩閩', '闾閭閭', '闿闓闓', '阀閥閥', '阁閣閣', '阂閡閡', '阃閫閫', '阄鬮鬮', '阅閱閲', '阆閬閬', '阈閾閾', '阉閹閹', '阊閶閶', '阋鬩鬩', '阌閿閿', '阍閽閽', '阎閻閻', '阏閼閼', '阐闡闡', '阑闌闌', '阒闃闃', '阔闊闊', '阕闋闋', '阖闔闔', '阗闐闐', '阙闕闕', '阚闞闞', '队隊隊', '阳陽陽', '阴陰陰', '阵陣陣', '阶階階', '际際際', '陆陸陸', '陇隴隴', '陈陳陳', '陉陘陘', '陕陝陜', '陨隕隕', '险險険', '隐隱隠', '难難難', '雏雛雛', '雠讎讎', '雳靂靂', '雾霧霧', '霁霽霽', '霉黴黴', '霭靄靄', '靓靚靚', '靥靨靨', '鞑韃韃', '鞒鞽鞽', '鞯韉韉', '韦韋韋', '韧韌靭', '韨韍韍', '韩韓韓', '韪韙韙', '韫韞韞', '韬韜韜', '顚顚顛', '页頁頁', '顶頂頂', '顷頃頃', '顸頇頇', '项項項', '顺順順', '须須須', '顼頊頊', '顽頑頑', '顾顧顧', '顿頓頓', '颀頎頎', '颁頒頒', '颂頌頌', '颃頏頏', '预預預', '颅顱顱', '领領領', '颇頗頗', '颈頸頚', '颉頡頡', '颊頰頬', '颋頲頲', '颌頜頜', '颍潁潁', '颏頦頦', '颐頤頤', '频頻頻', '颓頽頽', '颔頷頷', '颖穎頴', '颗顆顆', '题題題', '颙顒顒', '颛顓顓', '颜顔顔', '额額額', '颞顳顳', '颟顢顢', '颠顛顛', '颡顙顙', '颢顥顥', '颤顫顫', '颥顬顬', '颦顰顰', '颧顴顴', '风風風', '飒颯颯', '飓颶颶', '飔颸颸', '飕颼颼', '飗飀飀', '飘飄飄', '飙飆飆', '飞飛飛', '飨饗饗', '餍饜饜', '饥饑飢', '饦飥飥', '饧餳餳', '饨飩飩', '饩餼餼', '饪飪飪', '饫飫飫', '饬飭飭', '饭飯飯', '饮飲飲', '饯餞餞', '饰飾飾', '饱飽飽', '饲飼飼', '饳飿飿', '饴飴飴', '饵餌餌', '饶饒饒', '饷餉餉', '饸餄餄', '饹餎餎', '饺餃餃', '饻餏餏', '饼餅餅', '饽餑餑', '饿餓餓', '馁餒餒', '馃餜餜', '馄餛餛', '馅餡餡', '馆館館', '馇餷餷', '馈饋餽', '馉餶餶', '馊餿餿', '馋饞饞', '馍饃饃', '馎餺餺', '馏餾餾', '馐饈饈', '馑饉饉', '馒饅饅', '馓饊饊', '馔饌饌', '馕饢饢', '驒驒騨', '马馬馬', '驭馭馭', '驮馱駄', '驯馴馴', '驰馳馳', '驱驅駆', '驳駁駁', '驴驢驢', '驵駔駔', '驶駛駛', '驷駟駟', '驸駙駙', '驹駒駒', '驺騶騶', '驻駐駐', '驼駝駝', '驽駑駑', '驾駕駕', '驿驛駅', '骀駘駘', '骁驍驍', '骂罵罵', '骄驕驕', '骅驊驊', '骆駱駱', '骇駭駭', '骈駢駢', '骊驪驪', '骋騁騁', '验驗験', '骎駸駸', '骏駿駿', '骐騏騏', '骑騎騎', '骒騍騍', '骓騅騅', '骖驂驂', '骗騙騙', '骘騭騭', '骚騷騒', '骛騖騖', '骜驁驁', '骝騮騮', '骞騫騫', '骟騸騸', '骠驃驃', '骡騾騾', '骢驄驄', '骤驟驟', '骥驥驥', '骧驤驤', '髅髏髏', '髋髖髖', '髌髕髕', '鬓鬢鬢', '魇魘魘', '魉魎魎', '鱼魚魚', '鱽魛魛', '鱿魷魷', '鲁魯魯', '鲂魴魴', '鲅鮁鮁', '鲆鮃鮃', '鲇鮎鮎', '鲈鱸鱸', '鲊鮓鮓', '鲋鮒鮒', '鲍鮑鮑', '鲎鱟鱟', '鲏鮍鮍', '鲐鮐鮐', '鲑鮭鮭', '鲒鮚鮚', '鲔鮪鮪', '鲖鮦鮦', '鲗鰂鰂', '鲙鱠鱠', '鲚鱭鱭', '鲛鮫鮫', '鲜鮮鮮', '鲝鮺鮺', '鲞鯗鯗', '鲟鱘鱘', '鲠鯁鯁', '鲡鱺鱺', '鲢鰱鰱', '鲣鰹鰹', '鲤鯉鯉', '鲥鰣鰣', '鲦鰷鰷', '鲧鯀鯀', '鲨鯊鯊', '鲩鯇鯇', '鲫鯽鯽', '鲭鯖鯖', '鲮鯪鯪', '鲰鯫鯫', '鲱鯡鯡', '鲲鯤鯤', '鲳鯧鯧', '鲵鯢鯢', '鲶鯰鯰', '鲷鯛鯛', '鲸鯨鯨', '鲻鯔鯔', '鲽鰈鰈', '鲿鱨鱨', '鳁鰛鰛', '鳃鰓鰓', '鳄鰐鰐', '鳅鰍鰍', '鳆鰒鰒', '鳇鰉鰉', '鳊鯿鯿', '鳌鰲鰲', '鳍鰭鰭', '鳎鰨鰨', '鳏鰥鰥', '鳑鰟鰟', '鳒鰜鰜', '鳓鰳鰳', '鳔鰾鰾', '鳕鱈鱈', '鳖鱉鱉', '鳗鰻鰻', '鳘鰵鰵', '鳙鱅鱅', '鳛鰼鰼', '鳜鱖鱖', '鳝鱔鱔', '鳞鱗鱗', '鳟鱒鱒', '鳢鱧鱧', '鳣鱣鱣', '鸟鳥鳥', '鸠鳩鳩', '鸡鷄鶏', '鸢鳶鳶', '鸣鳴鳴', '鸥鷗鴎', '鸦鴉鴉', '鸧鶬鶬', '鸨鴇鴇', '鸩鴆鴆', '鸪鴣鴣', '鸫鶇鶫', '鸬鸕鸕', '鸭鴨鴨', '鸮鴞鴞', '鸯鴦鴦', '鸰鴒鴒', '鸱鴟鴟', '鸲鴝鴝', '鸳鴛鴛', '鸵鴕鴕', '鸶鷥鷥', '鸷鷙鷙', '鸸鴯鴯', '鸹鴰鴰', '鸺鵂鵂', '鸻鴴鴴', '鸼鵃鵃', '鸽鴿鴿', '鸾鸞鸞', '鸿鴻鴻', '鹁鵓鵓', '鹂鸝鸝', '鹃鵑鵑', '鹄鵠鵠', '鹅鵝鵝', '鹆鵒鵒', '鹇鷴鷴', '鹈鵜鵜', '鹉鵡鵡', '鹊鵲鵲', '鹋鶓鶓', '鹌鵪鵪', '鹏鵬鵬', '鹐鵮鵮', '鹑鶉鶉', '鹒鶊鶊', '鹕鶘鶘', '鹖鶡鶡', '鹗鶚鶚', '鹘鶻鶻', '鹙鶖鶖', '鹚鷀鷀', '鹛鶥鶥', '鹜鶩鶩', '鹞鷂鷂', '鹡鶺鶺', '鹣鶼鶼', '鹤鶴鶴', '鹥鷖鷖', '鹦鸚鸚', '鹧鷓鷓', '鹨鷚鷚', '鹩鷯鷯', '鹪鷦鷦', '鹫鷲鷲', '鹬鷸鷸', '鹭鷺鷺', '鹯鸇鸇', '鹰鷹鷹', '鹳鸛鸛', '鹾鹺鹺', '黉黌黌', '黡黶黶', '黩黷黷', '黾黽黽', '鼋黿黿', '鼍鼉鼉', '齐齊斉', '齑齏齏', '齿齒歯', '龀齔齔', '龃齟齟', '龄齡齢', '龅齙齙', '龆齠齠', '龇齜齜', '龈齦齦', '龉齬齬', '龊齪齪', '龋齲齲', '龌齷齷', '龙龍竜', '龚龔龔', '龛龕龕', '龟龜亀', '㑇㑳㑳', '㖞喎喎', '㘎㘚㘚', '㤘㥮㥮', '㧏掆掆', '㧐㩳㩳', '㧟擓擓', '㭎棡棡', '㱮殨殨', '㳠澾澾', '䁖瞜瞜', '䅟穇䅟', '䌷紬紬', '䎬䎱䎱', '䏝膞膞', '䓖藭藭', '䙌䙡䙡', '䜣訢訢', '䜩讌讌', '䞍䝼䝼', '䥺釾釾', '䥽鏺鏺', '䦂䥇䥇', '䦃鐯鐯', '䦅鐥鐥', '䦆钁钁', '䦶䦛䦛', '䦷䦟䦟', '䲟鮣鮣', '䲠鰆鰆', '䲡鰌鰌', '䲢鰧鰧', '䲣䱷䱷', '䴓鳾鳾', '䴔鵁鵁', '䴕鴷鴷', '䴖鶄鶄', '䴗鶪鶪', '䴘鷉鷉', '䴙鸊鸊', '䶮龑龑', '别別別', '表表表', '家家家', '于於於', '内內内', '制制制', '制整整', '面面面', '弃棄棄', '异異異', '志志志', '志誌誌', '唤喚喚', '云云云', '借借借', '宫宮宮', '值值値', '减減減', '温溫温', '强強強', '谷穀穀', '晋晉晋', '奂奐奐', '吴吳呉', '争爭争', '游遊遊', '猫貓猫'],
    findKArr = exports.findKArr = cjkAll.map(function (r) {
  return r[0];
}),
    findK = exports.findK = new RegExp('([' + findKArr + '])', 'g'),
    findHArr = exports.findHArr = cjkAll.map(function (r) {
  return r[1];
}),
    findH = exports.findH = new RegExp('([' + findHArr + '])', 'g'),
    findNArr = exports.findNArr = cjkAll.map(function (r) {
  return r[2];
}),
    findN = exports.findN = new RegExp('([' + findNArr + '])', 'g'),

// 簡体字、繁体字、日本漢字の熟語
cjkWord = exports.cjkWord = [['○余', '○餘', '○余'], ['0寸', '0吋', '0吋'], ['0余', '0餘', '0余'], ['1寸', '1吋', '1吋'], ['2寸', '2吋', '2吋'], ['3寸', '3吋', '3吋'], ['4寸', '4吋', '4吋'], ['5寸', '5吋', '5吋'], ['6寸', '6吋', '6吋'], ['7寸', '7吋', '7吋'], ['8寸', '8吋', '8吋'], ['9寸', '9吋', '9吋'], ['阿咸', '阿咸', '阿咸'], ['哀吊', '哀弔', '哀弔'], ['或采', '或採', '或採'], ['或松', '或鬆', '或鬆'], ['依准', '依準', '依準'], ['依托', '依託', '依託'], ['依赞', '依贊', '依賛'], ['委托', '委託', '委託'], ['尉面', '尉面', '尉面'], ['尉发', '尉髮', '尉髪'], ['意函', '意涵', '意涵'], ['慰借', '慰藉', '慰藉'], ['胃脏', '胃臟', '胃臓'], ['郁懊', '鬱懊', '鬱懊'], ['一系', '一系', '一系'], ['一周', '一週', '一週'], ['一松', '一鬆', '一鬆'], ['一只', '一隻', '一隻'], ['一念发起', '一念發起', '一念発起'], ['一面', '一面', '一面'], ['一里', '一里', '一里'], ['一游', '一遊', '一遊'], ['一伙', '一夥', '一夥'], ['一发', '一發', '一発'], ['一发屋', '一發屋', '一発屋'], ['一发艺', '一發藝', '一発芸'], ['印制', '印製', '印製'], ['印面', '印面', '印面'], ['咽下', '嚥下', '嚥下'], ['咽回', '嚥回', '嚥回'], ['咽住', '嚥住', '嚥住'], ['咽食', '嚥食', '嚥食'], ['咽唾', '嚥唾', '嚥唾'], ['咽着', '嚥著', '嚥著'], ['咽著', '嚥著', '嚥著'], ['咽入', '嚥入', '嚥入'], ['咽了', '嚥了', '嚥了'], ['咽嚼', '嚥嚼', '嚥嚼'], ['羽后', '羽後', '羽後'], ['羽里', '羽裏', '羽裏'], ['雨后', '雨後', '雨後'], ['浦里', '浦里', '浦里'], ['影象', '影像', '影像'], ['影面', '影面', '影面'], ['映发', '映發', '映発'], ['永历', '永曆', '永暦'], ['英里', '英里', '英里'], ['越后', '越後', '越後'], ['越谷', '越谷', '越谷'], ['越卷', '越捲', '越巻'], ['宴游', '宴遊', '宴遊'], ['延历', '延曆', '延暦'], ['延发', '延發', '延発'], ['猿面', '猿面', '猿面'], ['凹面', '凹面', '凹面'], ['奥里', '奥裏', '奥裏'], ['横谷', '横谷', '横谷'], ['横面', '横面', '横面'], ['王后', '王后', '王后'], ['王制', '王制', '王制'], ['黄谷', '黃谷', '黄谷'], ['黄发', '黃髮', '黄髪'], ['屋后', '屋後', '屋後'], ['屋梁', '屋樑', '屋樑'], ['臆面', '臆面', '臆面'], ['乙丑', '乙丑', '乙丑'], ['下咽', '下嚥', '下嚥'], ['下谷', '下谷', '下谷'], ['下梁', '下樑', '下樑'], ['佳肴', '佳餚', '佳餚'], ['加速系', '加速系', '加速系'], ['可采', '可採', '可採'], ['可象', '可像', '可像'], ['嘉历', '嘉曆', '嘉暦'], ['家系', '家系', '家系'], ['家私', '傢俬', '家俬'], ['家伙', '傢伙', '家伙'], ['家俱', '傢俱', '家俱'], ['寡欲', '寡慾', '寡慾'], ['歌历', '歌歷', '歌歴'], ['河系', '河系', '河系'], ['河谷', '河谷', '河谷'], ['禾谷', '禾穀', '禾穀'], ['花历', '花曆', '花暦'], ['華胄', '華胄', '華胄'], ['我干', '我幹', '我幹'], ['我象', '我像', '我像'], ['画面', '畫面', '画面'], ['画历', '畫歷', '画歴'], ['解糖系', '解糖系', '解糖系'], ['解发', '解發', '解発'], ['回旋', '迴旋', '迴旋'], ['回避', '迴避', '迴避'], ['回廊', '迴廊', '迴廊'], ['回卷', '回捲', '回巻'], ['回圈', '迴圈', '迴圏'], ['回游', '迴游', '迴游'], ['回翔', '迴翔', '迴翔'], ['回历', '回曆', '回暦'], ['快干', '快乾', '快乾'], ['快卷', '快捲', '快巻'], ['恢复', '恢復', '恢復'], ['改采', '改採', '改採'], ['改历', '改曆', '改暦'], ['海谷', '海谷', '海谷'], ['界面', '界面', '界面'], ['劾系', '劾繫', '劾繫'], ['外制', '外製', '外製'], ['外资系', '外資系', '外資系'], ['核爆发', '核爆發', '核爆発'], ['核开发', '核開發', '核開発'], ['角发', '角髮', '角髪'], ['学制', '學制', '学制'], ['学历', '學歷', '学歴'], ['岳立', '嶽立', '嶽立'], ['割舍', '割捨', '割舎'], ['喝干', '喝乾', '喝乾'], ['喝采', '喝采', '喝采'], ['恰象', '恰像', '恰像'], ['活溌', '活溌', '活発'], ['活历', '活歷', '活歴'], ['兜卷', '兜捲', '兜巻'], ['刈谷', '刈谷', '刈谷'], ['寒栗', '寒慄', '寒慄'], ['寒喧', '寒暄', '寒暄'], ['勘发', '勘發', '勘発'], ['完了', '完了', '完了'], ['官制', '官製', '官製'], ['官历', '官歷', '官歴'], ['干姐', '乾姐', '乾姐'], ['干衣', '乾衣', '乾衣'], ['干井', '乾井', '乾井'], ['干一', '幹一', '幹一'], ['干咽', '乾嚥', '乾嚥'], ['干化', '乾化', '乾化'], ['干果', '乾果', '乾果'], ['干架', '幹架', '幹架'], ['干花', '乾花', '乾花'], ['干我', '幹我', '幹我'], ['干咳', '乾咳', '乾咳'], ['干活', '幹活', '幹活'], ['干完', '幹完', '幹完'], ['干干', '乾乾', '乾乾'], ['干眼', '乾眼', '乾眼'], ['干季', '乾季', '乾季'], ['干起', '幹起', '幹起'], ['干球', '乾球', '乾球'], ['干系', '干係', '干係'], ['干警', '幹警', '幹警'], ['干件', '幹件', '幹件'], ['干枯', '乾枯', '乾枯'], ['干股', '乾股', '乾股'], ['干好', '幹好', '幹好'], ['干校', '幹校', '幹校'], ['干硬', '乾硬', '乾硬'], ['干此', '幹此', '幹此'], ['干坤', '乾坤', '乾坤'], ['干些', '幹些', '幹些'], ['干沙', '乾沙', '乾沙'], ['干才', '幹才', '幹才'], ['干菜', '乾菜', '乾菜'], ['干材', '幹材', '幹材'], ['干枝', '乾枝', '乾枝'], ['干事', '幹事', '幹事'], ['干似', '乾似', '乾似'], ['干式', '乾式', '乾式'], ['干柴', '乾柴', '乾柴'], ['干什', '幹什', '幹什'], ['干出', '幹出', '幹出'], ['干焦', '乾焦', '乾焦'], ['干笑', '乾笑', '乾笑'], ['干上', '幹上', '幹上'], ['干薪', '乾薪', '乾薪'], ['干甚', '幹甚', '幹甚'], ['干性', '乾性', '乾性'], ['干成', '幹成', '幹成'], ['干脆', '乾脆', '乾脆'], ['干洗', '乾洗', '乾洗'], ['干爽', '乾爽', '乾爽'], ['干燥', '乾燥', '乾燥'], ['干草', '乾草', '乾草'], ['干他', '幹他', '幹他'], ['干探', '幹探', '幹探'], ['干着', '幹著', '幹著'], ['干著', '幹著', '幹著'], ['干弟', '乾弟', '乾弟'], ['干泥', '乾泥', '乾泥'], ['干土', '乾土', '乾土'], ['干等', '乾等', '乾等'], ['干到', '幹到', '幹到'], ['干透', '乾透', '乾透'], ['干道', '幹道', '幹道'], ['干得', '幹得', '幹得'], ['干那', '幹那', '幹那'], ['干肉', '乾肉', '乾肉'], ['干巴', '乾巴', '乾巴'], ['干杯', '乾杯', '乾杯'], ['干梅', '乾梅', '乾梅'], ['干品', '乾品', '乾品'], ['干不', '幹不', '幹不'], ['干布', '乾布', '乾布'], ['干部', '幹部', '幹部'], ['干粉', '乾粉', '乾粉'], ['干妹', '乾妹', '乾妹'], ['干娘', '乾娘', '乾娘'], ['干面', '乾麵', '乾麺'], ['干耗', '乾耗', '乾耗'], ['干酪', '乾酪', '乾酪'], ['干吏', '幹吏', '幹吏'], ['干流', '幹流', '幹流'], ['干隆', '乾隆', '乾隆'], ['干了', '幹了', '幹了'], ['干料', '乾料', '乾料'], ['干冷', '乾冷', '乾冷'], ['干裂', '乾裂', '乾裂'], ['干路', '幹路', '幹路'], ['干假', '幹假', '幹仮'], ['干冰', '乾冰', '乾冰'], ['干哥', '乾哥', '乾哥'], ['干嘛', '幹嘛', '幹嘛'], ['干姜', '乾薑', '乾姜'], ['干掉', '幹掉', '幹掉'], ['干旱', '乾旱', '乾旱'], ['干涸', '乾涸', '乾涸'], ['干熬', '乾熬', '乾熬'], ['干窘', '乾窘', '乾窘'], ['干醋', '乾醋', '乾醋'], ['干份', '幹份', '幹份'], ['干你', '幹你', '幹你'], ['干哪', '幹哪', '幹哪'], ['干啥', '幹啥', '幹啥'], ['干嚎', '乾嚎', '乾嚎'], ['干她', '幹她', '幹她'], ['干姊', '乾姊', '乾姊'], ['干渴', '乾渴', '乾渇'], ['干爸', '乾爸', '乾爸'], ['干爹', '乾爹', '乾爹'], ['干疤', '乾疤', '乾疤'], ['干瘦', '乾瘦', '乾痩'], ['干瞪', '乾瞪', '乾瞪'], ['感发', '感發', '感発'], ['敢斗', '敢鬥', '敢闘'], ['管制', '管制', '管制'], ['肝脏', '肝臟', '肝臓'], ['巌谷', '巌谷', '巌谷'], ['危机一发', '危機一髮', '危機一髪'], ['基干', '基幹', '基幹'], ['基准', '基準', '基準'], ['奇准', '奇準', '奇準'], ['嬉游', '嬉遊', '嬉遊'], ['寄托', '寄託', '寄託'], ['机制', '機制', '機制'], ['既发', '既發', '既発'], ['棋历', '棋歷', '棋歴'], ['季咸', '季咸', '季咸'], ['貴胄', '貴胄', '貴胄'], ['鬼面', '鬼面', '鬼面'], ['吃干', '吃乾', '喫乾'], ['吃准', '吃準', '喫準'], ['吃茶', '喫茶', '喫茶'], ['吃面', '吃麵', '喫麺'], ['客游', '客遊', '客遊'], ['逆发', '逆髮', '逆髪'], ['逆发祭', '逆髮祭', '逆髪祭'], ['久斗', '久鬥', '久闘'], ['吸干', '吸乾', '吸乾'], ['急征', '急徵', '急徴'], ['急反发', '急反發', '急反発'], ['急卷', '急捲', '急巻'], ['泣面', '泣面', '泣面'], ['球面', '球面', '球面'], ['球历', '球歷', '球歴'], ['旧制', '舊制', '旧制'], ['旧里', '舊里', '旧里'], ['旧历', '舊曆', '旧暦'], ['牛后', '牛後', '牛後'], ['去干', '去幹', '去幹'], ['去卷', '去捲', '去巻'], ['巨制', '巨製', '巨製'], ['京沈', '京瀋', '京沈'], ['京历', '京曆', '京暦'], ['供制', '供製', '供製'], ['共御', '共禦', '共御'], ['共制', '共製', '共製'], ['共斗', '共鬥', '共闘'], ['共白发', '共白髮', '共白髪'], ['共里', '共裏', '共裏'], ['凶案', '兇案', '兇案'], ['凶嫌', '兇嫌', '兇嫌'], ['凶徒', '兇徒', '兇徒'], ['凶犯', '兇犯', '兇犯'], ['凶猛', '兇猛', '兇猛'], ['峡谷', '峽谷', '峡谷'], ['強制', '強制', '強制'], ['強面', '強面', '強面'], ['凝干', '凝乾', '凝乾'], ['局限', '侷限', '侷限'], ['局促', '侷促', '侷促'], ['局面', '局面', '局面'], ['局蹙', '跼蹙', '跼蹙'], ['局躅', '跼躅', '跼躅'], ['曲面', '曲面', '曲面'], ['玉面', '玉面', '玉面'], ['勤朴', '勤樸', '勤朴'], ['均制', '均整', '均整'], ['均沾', '均霑', '均霑'], ['禁制', '禁制', '禁制'], ['襟里', '襟裏', '襟裏'], ['近交系', '近交系', '近交系'], ['金面', '金面', '金面'], ['金发', '金髮', '金髪'], ['吟游', '吟遊', '吟遊'], ['九十九发', '九十九髮', '九十九髪'], ['九只', '九隻', '九隻'], ['九里', '九里', '九里'], ['句历', '句歷', '句歴'], ['区系', '區系', '区系'], ['苦发乐爪', '苦髮樂爪', '苦髪楽爪'], ['愚暗', '愚闇', '愚闇'], ['空谷', '空谷', '空谷'], ['空发', '空發', '空発'], ['偶象', '偶像', '偶像'], ['偶发', '偶發', '偶発'], ['掘採', '掘採', '掘採'], ['熊谷', '熊谷', '熊谷'], ['群系', '群系', '群系'], ['群发', '群發', '群発'], ['刑余', '刑餘', '刑余'], ['型范', '型範', '型範'], ['系外', '系外', '系外'], ['系官', '係官', '係官'], ['系数', '係數', '係数'], ['系船', '係船', '係船'], ['系争', '係爭', '係争'], ['系属', '係屬', '係属'], ['系着', '繫著', '繫著'], ['系著', '繫著', '繫著'], ['系留', '係留', '係留'], ['系累', '係纍', '係累'], ['系列', '系列', '系列'], ['系恋', '係戀', '係恋'], ['系员', '係員', '係員'], ['系图', '系圖', '系図'], ['系统', '系統', '系統'], ['系谱', '系譜', '系譜'], ['系长', '係長', '係長'], ['激发', '激發', '激発'], ['血管系', '血管系', '血管系'], ['月面', '月面', '月面'], ['倦游', '倦遊', '倦遊'], ['喧染', '渲染', '渲染'], ['嫌凶', '嫌兇', '嫌兇'], ['建历', '建曆', '建暦'], ['元凶', '元兇', '元兇'], ['元后', '元后', '元后'], ['元历', '元曆', '元暦'], ['原发', '原發', '原発'], ['弦歌', '絃歌', '絃歌'], ['弦管', '絃管', '絃管'], ['弦琴', '絃琴', '絃琴'], ['弦索', '絃索', '絃索'], ['減原发', '減原發', '減原発'], ['古制', '古制', '古制'], ['古朴', '古樸', '古朴'], ['古里', '古里', '古里'], ['古历', '古曆', '古暦'], ['呼卷', '呼捲', '呼巻'], ['己丑', '己丑', '己丑'], ['己干', '己幹', '己幹'], ['故里', '故里', '故里'], ['五岳', '五嶽', '五嶽'], ['五周', '五週', '五週'], ['五只', '五隻', '五隻'], ['五谷', '五穀', '五穀'], ['五里', '五里', '五里'], ['五脏', '五臟', '五臓'], ['互斗', '互鬥', '互闘'], ['午后', '午後', '午後'], ['呉历', '呉歷', '呉歴'], ['御寒', '禦寒', '御寒'], ['御后', '禦后', '御后'], ['御制', '御製', '御製'], ['御侮', '禦侮', '御侮'], ['御寇', '禦寇', '御寇'], ['御历', '禦曆', '御暦'], ['悟了', '悟了', '悟了'], ['交托', '交託', '交託'], ['交游', '交遊', '交遊'], ['光学系', '光學系', '光学系'], ['光念', '光唸', '光唸'], ['公干', '公幹', '公幹'], ['公布', '公佈', '公佈'], ['公余', '公餘', '公余'], ['公理系', '公理系', '公理系'], ['公里', '公里', '公里'], ['勾干', '勾幹', '勾幹'], ['口干', '口乾', '口乾'], ['向往', '嚮往', '向往'], ['向午', '晌午', '晌午'], ['向准', '向準', '向準'], ['后逸', '後逸', '後逸'], ['后胤', '後胤', '後胤'], ['后院', '後院', '後院'], ['后宴', '後宴', '後宴'], ['后援', '後援', '後援'], ['后燕', '後燕', '後燕'], ['后家', '後家', '後家'], ['后架', '後架', '後架'], ['后会', '後會', '後会'], ['后悔', '後悔', '後悔'], ['后害', '後害', '後害'], ['后学', '後學', '後学'], ['后釜', '後釜', '後釜'], ['后勘', '後勘', '後勘'], ['后患', '後患', '後患'], ['后喜', '後喜', '後喜'], ['后期', '後期', '後期'], ['后脚', '後脚', '後脚'], ['后笈', '後笈', '後笈'], ['后金', '後金', '後金'], ['后句', '後句', '後句'], ['后屈', '後屈', '後屈'], ['后景', '後景', '後景'], ['后月', '後月', '後月'], ['后件', '後件', '後件'], ['后肩', '後肩', '後肩'], ['后言', '後言', '後言'], ['后光', '後光', '後光'], ['后口', '後口', '後口'], ['后后', '後後', '後後'], ['后攻', '後攻', '後攻'], ['后考', '後考', '後考'], ['后刻', '後刻', '後刻'], ['后昆', '後昆', '後昆'], ['后根', '後根', '後根'], ['后座', '後座', '後座'], ['后妻', '後妻', '後妻'], ['后史', '後史', '後史'], ['后町', '后町', '后町'], ['后土', '后土', '后土'], ['后日', '後日', '後日'], ['后妃', '后妃', '后妃'], ['后尾', '後尾', '後尾'], ['后腹', '后腹', '后腹'], ['后方', '後方', '後方'], ['后面', '後面', '後面'], ['后乐', '後樂', '後楽'], ['后军', '後軍', '後軍'], ['后卫', '後衞', '後衛'], ['后发', '後發', '後発'], ['后尘', '後塵', '後塵'], ['后揭', '後揭', '後掲'], ['后汉', '後漢', '後漢'], ['后继', '後繼', '後継'], ['后缘', '後緣', '後縁'], ['后荣', '後榮', '後栄'], ['后见', '後見', '後見'], ['后觉', '後覺', '後覚'], ['后记', '後記', '後記'], ['后贤', '後賢', '後賢'], ['后辈', '後輩', '後輩'], ['后鉴', '後鑒', '後鑑'], ['后项', '後項', '後項'], ['后顾', '後顧', '後顧'], ['喉干', '喉乾', '喉乾'], ['好干', '好幹', '好幹'], ['好准', '好準', '好準'], ['好象', '好像', '好像'], ['好斗', '好鬥', '好闘'], ['好发', '好發', '好発'], ['宏基', '宏碁', '宏碁'], ['工面', '工面', '工面'], ['工余', '工餘', '工余'], ['巧干', '巧幹', '巧幹'], ['幸幸', '倖幸', '倖幸'], ['幸存', '倖存', '倖存'], ['幸免', '倖免', '倖免'], ['康愈', '康癒', '康癒'], ['康历', '康曆', '康暦'], ['抗御', '抗禦', '抗御'], ['抗斗', '抗鬥', '抗闘'], ['控制', '控制', '控制'], ['江浦草发', '江浦草髮', '江浦草髪'], ['皇系', '皇系', '皇系'], ['皇后', '皇后', '皇后'], ['劫余', '劫餘', '劫余'], ['合眼', '闔眼', '闔眼'], ['合第', '闔第', '闔第'], ['合斗', '合鬥', '合闘'], ['合府', '闔府', '闔府'], ['合併', '合併', '合併'], ['合伙', '合夥', '合夥'], ['克期', '剋期', '剋期'], ['克苦', '刻苦', '刻苦'], ['克死', '剋死', '剋死'], ['克星', '剋星', '剋星'], ['克日', '剋日', '剋日'], ['克薄', '剋薄', '剋薄'], ['克夫', '剋夫', '剋夫'], ['克扣', '剋扣', '剋扣'], ['刻象', '刻像', '刻像'], ['国家', '國家', '国家'], ['国里', '國里', '国里'], ['忽松', '忽鬆', '忽鬆'], ['困意', '睏意', '睏意'], ['困倦', '睏倦', '睏倦'], ['困乏', '睏乏', '睏乏'], ['坤范', '坤範', '坤範'], ['根系', '根系', '根系'], ['混系', '混系', '混系'], ['些象', '些像', '些像'], ['差里', '差裏', '差裏'], ['座象', '座像', '座像'], ['座面', '座面', '座面'], ['座标系', '座標系', '座標系'], ['再干', '再幹', '再幹'], ['再松', '再鬆', '再鬆'], ['再象', '再像', '再像'], ['再制', '再製', '再製'], ['再斗', '再鬥', '再闘'], ['再卷', '再捲', '再巻'], ['再发', '再發', '再発'], ['再开发', '再開發', '再開発'], ['最后', '最後', '最後'], ['彩衣', '綵衣', '綵衣'], ['彩球', '綵球', '綵球'], ['彩裳', '綵裳', '綵裳'], ['彩牌', '綵牌', '綵牌'], ['才干', '才幹', '才幹'], ['才象', '才像', '才像'], ['才气煥发', '才氣煥發', '才気煥発'], ['采火', '採火', '採火'], ['采花', '採花', '採花'], ['采金', '採金', '採金'], ['采掘', '採掘', '採掘'], ['采桑', '採桑', '採桑'], ['采血', '採血', '採血'], ['采光', '採光', '採光'], ['采算', '採算', '採算'], ['采取', '採取', '採取'], ['采集', '採集', '採集'], ['采薪', '採薪', '採薪'], ['采寸', '採寸', '採寸'], ['采石', '採石', '採石'], ['采草', '採草', '採草'], ['采択', '採択', '採択'], ['采炭', '採炭', '採炭'], ['采点', '採點', '採点'], ['采尿', '採尿', '採尿'], ['采伐', '採伐', '採伐'], ['采番', '採番', '採番'], ['采否', '採否', '採否'], ['采物', '採物', '採物'], ['采便', '採便', '採便'], ['采捕', '採捕', '採捕'], ['采油', '採油', '採油'], ['采用', '採用', '採用'], ['采卵', '採卵', '採卵'], ['采决', '採決', '採決'], ['采椽', '採椽', '採椽'], ['采鑛', '採鑛', '採鉱'], ['采录', '採録', '採録'], ['采种', '採種', '採種'], ['采纳', '採納', '採納'], ['采药', '採藥', '採薬'], ['采访', '採訪', '採訪'], ['采证', '採證', '採証'], ['采谱', '採譜', '採譜'], ['采女', '采女', '采女'], ['采色', '采色', '采色'], ['采薪', '采薪', '采薪'], ['采地', '采地', '采地'], ['采配', '采配', '采配'], ['采柄', '采柄', '采柄'], ['采邑', '采邑', '采邑'], ['采六', '采六', '采六'], ['采椽', '采椽', '采椽'], ['采头', '采頭', '采頭'], ['采币', '采幣', '采幣'], ['采诗', '采詩', '采詩'], ['咲面', '咲面', '咲面'], ['作准', '作準', '作準'], ['作崇', '作祟', '作祟'], ['刷了', '刷了', '刷了'], ['三后', '三后', '三后'], ['三周', '三週', '三週'], ['三畳系', '三畳系', '三畳系'], ['三只', '三隻', '三隻'], ['三谷', '三谷', '三谷'], ['三面', '三面', '三面'], ['三里', '三里', '三里'], ['参赞', '參贊', '参賛'], ['山系', '山系', '山系'], ['山谷', '山谷', '山谷'], ['散伙', '散夥', '散夥'], ['散发屋', '散髮屋', '散髪屋'], ['伺奉', '侍奉', '侍奉'], ['刺准', '刺準', '刺準'], ['四只', '四隻', '四隻'], ['四谷', '四谷', '四谷'], ['四方发', '四方髮', '四方髪'], ['四面楚歌', '四面楚歌', '四面楚歌'], ['四里', '四里', '四里'], ['四舍', '四捨', '四舎'], ['始发', '始發', '始発'], ['子姜', '子薑', '子姜'], ['市制', '市制', '市制'], ['市谷', '市谷', '市谷'], ['志哀', '誌哀', '誌哀'], ['志喜', '誌喜', '誌喜'], ['支系', '支系', '支系'], ['死准', '死準', '死準'], ['死面', '死面', '死面'], ['私制', '私製', '私製'], ['事干', '事幹', '事幹'], ['事历', '事歷', '事歴'], ['字面', '字面', '字面'], ['治历', '治曆', '治暦'], ['自家制', '自家製', '自家製'], ['自了', '自了', '自了'], ['自发', '自發', '自発'], ['七只', '七隻', '七隻'], ['七里', '七里', '七里'], ['失准', '失準', '失準'], ['射准', '射準', '射準'], ['射面', '射面', '射面'], ['射雕', '射鵰', '射鵰'], ['斜面', '斜面', '斜面'], ['社历', '社歷', '社歴'], ['借以', '藉以', '藉以'], ['借故', '藉故', '藉故'], ['借口', '藉口', '藉口'], ['借托', '借託', '借託'], ['借着', '藉著', '藉著'], ['借著', '藉著', '藉著'], ['尺余', '尺餘', '尺余'], ['弱干', '弱幹', '弱幹'], ['主干', '主幹', '主幹'], ['取余', '取餘', '取余'], ['取舍', '取捨', '取舎'], ['取发', '取髮', '取髪'], ['守御', '守禦', '守御'], ['守谷', '守谷', '守谷'], ['手采', '手採', '手採'], ['手松', '手鬆', '手鬆'], ['手制', '手製', '手製'], ['手表', '手錶', '手錶'], ['酒托', '酒托', '酒托'], ['首里', '首里', '首里'], ['受雇', '受僱', '受僱'], ['受托', '受託', '受託'], ['寿采', '壽采', '寿采'], ['周一', '週一', '週一'], ['周刊', '週刊', '週刊'], ['周期', '週期', '週期'], ['周休', '週休', '週休'], ['周五', '週五', '週五'], ['周三', '週三', '週三'], ['周四', '週四', '週四'], ['周薪', '週薪', '週薪'], ['周遭', '週遭', '週遭'], ['周息', '週息', '週息'], ['周二', '週二', '週二'], ['周日', '週日', '週日'], ['周年', '週年', '週年'], ['周波', '週波', '週波'], ['周末', '週末', '週末'], ['周六', '週六', '週六'], ['周游', '周遊', '周遊'], ['宗制', '宗制', '宗制'], ['宗谷', '宗谷', '宗谷'], ['就象', '就像', '就像'], ['就范', '就範', '就範'], ['修制', '修整', '修整'], ['修了', '修了', '修了'], ['修浚', '修濬', '修濬'], ['愁郁', '愁鬱', '愁鬱'], ['什幺', '什麼', '什麼'], ['住扎', '住紮', '住紮'], ['十周', '十週', '十週'], ['十只', '十隻', '十隻'], ['十余', '十餘', '十余'], ['十里', '十里', '十里'], ['祝发', '祝髮', '祝髪'], ['出会系', '出會系', '出会系'], ['出征', '出征', '出征'], ['出面', '出面', '出面'], ['出游', '出遊', '出遊'], ['出发', '出發', '出発'], ['瞬发力', '瞬發力', '瞬発力'], ['准后', '准后', '准后'], ['准些', '準些', '準些'], ['准准', '準準', '準準'], ['准是', '準是', '準是'], ['准星', '準星', '準星'], ['准知', '準知', '準知'], ['准直', '準直', '準直'], ['准定', '準定', '準定'], ['准度', '準度', '準度'], ['准到', '準到', '準到'], ['准得', '準得', '準得'], ['准能', '準能', '準能'], ['准被', '準被', '準被'], ['准有', '準有', '準有'], ['准要', '準要', '準要'], ['循环系', '循環系', '循環系'], ['巡回', '巡迴', '巡迴'], ['巡游', '巡遊', '巡遊'], ['巡历', '巡歷', '巡歴'], ['初斗', '初鬥', '初闘'], ['初愈', '初癒', '初癒'], ['初里', '初裏', '初裏'], ['初历', '初曆', '初暦'], ['初发', '初發', '初発'], ['所干', '所幹', '所幹'], ['所系', '所繫', '所繫'], ['所余', '所餘', '所余'], ['女系', '女系', '女系'], ['女面', '女面', '女面'], ['升官', '陞官', '陞官'], ['升泰', '昇泰', '昇泰'], ['升平', '昇平', '昇平'], ['升汞', '昇汞', '昇汞'], ['唱游', '唱遊', '唱遊'], ['小丑', '小丑', '小丑'], ['小面', '小面', '小面'], ['小伙', '小夥', '小夥'], ['少干', '少幹', '少幹'], ['尚余', '尚餘', '尚余'], ['床席', '床蓆', '床蓆'], ['床第', '床笫', '床笫'], ['承制', '承製', '承製'], ['承了', '承了', '承了'], ['承历', '承曆', '承暦'], ['晶系', '晶系', '晶系'], ['称制', '稱制', '称制'], ['象赞', '像贊', '像賛'], ['上周', '上週', '上週'], ['上准', '上準', '上準'], ['上折', '上摺', '上摺'], ['上面', '上面', '上面'], ['上里', '上裏', '上裏'], ['上梁', '上樑', '上樑'], ['丈余', '丈餘', '丈余'], ['冗余', '冗餘', '冗余'], ['常干', '常幹', '常幹'], ['情欲', '情慾', '情慾'], ['条里', '條里', '条里'], ['蒸发', '蒸發', '蒸発'], ['植发', '植髮', '植髪'], ['色里', '色里', '色里'], ['触发', '觸發', '触発'], ['伸卷', '伸捲', '伸巻'], ['伸发', '伸發', '伸発'], ['信托', '信託', '信託'], ['侵范', '侵範', '侵範'], ['心系', '心繫', '心繫'], ['心脏', '心臟', '心臓'], ['新制', '新制', '新制'], ['新谷', '新穀', '新穀'], ['新历', '新曆', '新暦'], ['新发田', '新發田', '新発田'], ['深谷', '深谷', '深谷'], ['神采', '神采', '神采'], ['神经系', '神經系', '神経系'], ['身体发肤', '身體髮膚', '身体髪膚'], ['辛丑', '辛丑', '辛丑'], ['人干', '人幹', '人幹'], ['人象', '人像', '人像'], ['人面', '人面', '人面'], ['人里', '人里', '人里'], ['人游', '人遊', '人遊'], ['尽快', '儘快', '儘快'], ['吹干', '吹乾', '吹乾'], ['吹胡', '吹鬍', '吹胡'], ['吹卷', '吹捲', '吹巻'], ['垂范', '垂範', '垂範'], ['垂发', '垂髮', '垂髪'], ['水管系', '水管系', '水管系'], ['水系', '水系', '水系'], ['水制', '水制', '水制'], ['水谷', '水谷', '水谷'], ['水面', '水面', '水面'], ['水发', '水髮', '水髪'], ['裾里', '裾裏', '裾裏'], ['寸余', '寸餘', '寸余'], ['世系', '世系', '世系'], ['制衣', '製衣', '製衣'], ['制可', '制可', '制可'], ['制外', '制外', '制外'], ['制革', '製革', '製革'], ['制汗', '制汗', '制汗'], ['制器', '製器', '製器'], ['制球', '制球', '制球'], ['制禁', '制禁', '制禁'], ['制形', '整形', '整形'], ['制件', '製件', '製件'], ['制限', '制限', '制限'], ['制合', '整合', '整合'], ['制骨', '整骨', '整骨'], ['制裁', '制裁', '制裁'], ['制材', '製材', '製材'], ['制作', '製作', '製作'], ['制札', '制札', '制札'], ['制枝', '整枝', '整枝'], ['制止', '制止', '制止'], ['制式', '制式', '制式'], ['制出', '製出', '製出'], ['制序', '整序', '整序'], ['制除', '整除', '整除'], ['制商', '整商', '整商'], ['制数', '整數', '整数'], ['制成', '製成', '製成'], ['制正', '整正', '整正'], ['制然', '整然', '整然'], ['制造', '製造', '製造'], ['制体', '整體', '整体'], ['制丹', '製丹', '製丹'], ['制地', '整地', '整地'], ['制定', '制定', '制定'], ['制程', '製程', '製程'], ['制度', '制度', '制度'], ['制糖', '製糖', '製糖'], ['制毒', '製毒', '製毒'], ['制播', '製播', '製播'], ['制版', '整版', '整版'], ['制版', '製版', '製版'], ['制氷', '整氷', '整氷'], ['制表', '製表', '製表'], ['制品', '製品', '製品'], ['制服', '制服', '制服'], ['制片', '製片', '製片'], ['制法', '製法', '製法'], ['制帽', '制帽', '制帽'], ['制面', '製麵', '製麺'], ['制容', '整容', '整容'], ['制理', '整理', '整理'], ['制流', '整流', '整流'], ['制粒', '整粒', '整粒'], ['制冷', '製冷', '製冷'], ['制列', '整列', '整列'], ['制做', '製做', '製做'], ['制冰', '製冰', '製冰'], ['制霸', '制霸', '制覇'], ['制醋', '製醋', '製醋'], ['制鞋', '製鞋', '製鞋'], ['制动', '制動', '制動'], ['制压', '制壓', '制圧'], ['制发', '整髮', '整髪'], ['制备', '整備', '整備'], ['制复', '整復', '整復'], ['制宪', '制憲', '制憲'], ['制敎', '制敎', '制教'], ['制约', '制約', '制約'], ['制经', '整經', '整経'], ['制缚', '制縛', '制縛'], ['制肃', '整肅', '整粛'], ['制肠', '整腸', '整腸'], ['制胜', '制勝', '制勝'], ['制规', '制規', '制規'], ['制词', '制詞', '制詞'], ['制调', '整調', '整調'], ['制贩', '製販', '製販'], ['制顿', '整頓', '整頓'], ['制齐', '整齊', '整斉'], ['征引', '徵引', '徴引'], ['征管', '徵管', '徴管'], ['征求', '徵求', '徴求'], ['征去', '徵去', '徴去'], ['征候', '徵候', '徴候'], ['征稿', '徵稿', '徴稿'], ['征婚', '徵婚', '徴婚'], ['征取', '徵取', '徴取'], ['征集', '徵集', '徴集'], ['征召', '徵召', '徴召'], ['征象', '徵象', '徴象'], ['征信', '徵信', '徴信'], ['征人', '徵人', '徴人'], ['征地', '徵地', '徴地'], ['征逐', '徵逐', '徴逐'], ['征兆', '徵兆', '徴兆'], ['征得', '徵得', '徴得'], ['征入', '徵入', '徴入'], ['征文', '徵文', '徴文'], ['征兵', '徵兵', '徴兵'], ['征片', '徵片', '徴片'], ['征募', '徵募', '徴募'], ['征友', '徵友', '徴友'], ['征用', '徵用', '徴用'], ['征了', '徵了', '徴了'], ['征收', '徵收', '徴収'], ['征聘', '徵聘', '徴聘'], ['征发', '徵發', '徴発'], ['性征', '性徵', '性徴'], ['性欲', '性慾', '性慾'], ['正系', '正系', '正系'], ['正面', '正面', '正面'], ['正历', '正曆', '正暦'], ['生面', '生面', '生面'], ['生态系', '生態系', '生態系'], ['精制', '精製', '精製'], ['精谷', '精穀', '精穀'], ['西岳', '西嶽', '西嶽'], ['西征', '西征', '西征'], ['西面', '西面', '西面'], ['西历', '西曆', '西暦'], ['青山一发', '青山一髮', '青山一髪'], ['税制', '税制', '税制'], ['席子', '蓆子', '蓆子'], ['席卷', '席捲', '席巻'], ['戚然', '慼然', '慼然'], ['戚里', '戚里', '戚里'], ['戚嗟', '慼嗟', '慼嗟'], ['昔历', '昔曆', '昔暦'], ['石炭系', '石炭系', '石炭系'], ['赤面', '赤面', '赤面'], ['切面', '切面', '切面'], ['切发', '切髮', '切髪'], ['折痕', '摺痕', '摺痕'], ['折子', '摺子', '摺子'], ['折扇', '摺扇', '摺扇'], ['折裙', '摺裙', '摺裙'], ['雪面', '雪面', '雪面'], ['仙游', '仙遊', '仙遊'], ['仙范', '仙範', '仙範'], ['先制', '先制', '先制'], ['先奸', '先姦', '先姦'], ['先发', '先發', '先発'], ['千只', '千隻', '千隻'], ['千余', '千餘', '千余'], ['千里', '千里', '千里'], ['宣布', '宣佈', '宣佈'], ['宣赞', '宣贊', '宣賛'], ['川面', '川面', '川面'], ['洗面', '洗面', '洗面'], ['洗发', '洗髮', '洗髪'], ['染发', '染髮', '染髪'], ['前后', '前後', '前後'], ['前面', '前面', '前面'], ['前历', '前歷', '前歴'], ['前发', '前髮', '前髪'], ['善斗', '善鬥', '善闘'], ['全象', '全像', '全像'], ['全面', '全面', '全面'], ['塑象', '塑像', '塑像'], ['祖谷', '祖谷', '祖谷'], ['粗面', '粗面', '粗面'], ['素面', '素面', '素面'], ['双发', '雙發', '双発'], ['双发机', '雙發機', '双発機'], ['奏折', '奏摺', '奏摺'], ['想干', '想幹', '想幹'], ['想象', '想像', '想像'], ['想斗', '想鬥', '想闘'], ['早发', '早發', '早発'], ['相制', '相制', '相制'], ['葬制', '葬制', '葬制'], ['霜发', '霜髮', '霜髪'], ['像征', '象徵', '象徴'], ['像赞', '像贊', '像賛'], ['束发', '束髮', '束髪'], ['速了', '速了', '速了'], ['俗了', '俗了', '俗了'], ['卒原发', '卒原發', '卒原発'], ['袖里', '袖裏', '袖裏'], ['其余', '其餘', '其余'], ['存折', '存摺', '存摺'], ['尊范', '尊範', '尊範'], ['村里', '村里', '村里'], ['他干', '他幹', '他幹'], ['他象', '他像', '他像'], ['多余', '多餘', '多余'], ['多发', '多發', '多発'], ['多发机', '多發機', '多発機'], ['太干', '太乾', '太乾'], ['太后', '太后', '太后'], ['太准', '太準', '太準'], ['太松', '太鬆', '太鬆'], ['太象', '太像', '太像'], ['太阳系', '太陽系', '太陽系'], ['惰性系', '惰性系', '惰性系'], ['打制', '打製', '打製'], ['打谷', '打穀', '打穀'], ['打斗', '打鬥', '打闘'], ['体系', '體系', '体系'], ['体制', '體制', '体制'], ['体面', '體面', '体面'], ['戴表', '戴錶', '戴錶'], ['代数系', '代數系', '代数系'], ['代征', '代徵', '代徴'], ['台干', '台幹', '台幹'], ['台子', '檯子', '檯子'], ['台制', '台製', '台製'], ['台布', '檯布', '檯布'], ['台面', '檯面', '檯面'], ['台凳', '檯凳', '檯凳'], ['台风', '颱風', '台風'], ['大系', '大系', '大系'], ['大后', '大后', '大后'], ['大只', '大隻', '大隻'], ['大谷', '大谷', '大谷'], ['大斗', '大鬥', '大闘'], ['大面', '大面', '大面'], ['大伙', '大夥', '大夥'], ['大发', '大發', '大発'], ['大发会', '大發會', '大発会'], ['第三系', '第三系', '第三系'], ['第四系', '第四系', '第四系'], ['托管', '託管', '託管'], ['托言', '託言', '託言'], ['托古', '託古', '託古'], ['托孤', '託孤', '託孤'], ['托故', '託故', '託故'], ['托交', '託交', '託交'], ['托事', '託事', '託事'], ['托疾', '託疾', '託疾'], ['托身', '託身', '託身'], ['托人', '託人', '託人'], ['托大', '託大', '託大'], ['托病', '託病', '託病'], ['托付', '託付', '託付'], ['托名', '託名', '託名'], ['托了', '託了', '託了'], ['托咎', '託咎', '託咎'], ['只影', '隻影', '隻影'], ['只眼', '隻眼', '隻眼'], ['只鬼', '隻鬼', '隻鬼'], ['只牛', '隻牛', '隻牛'], ['只狗', '隻狗', '隻狗'], ['只犬', '隻犬', '隻犬'], ['只虎', '隻虎', '隻虎'], ['只字', '隻字', '隻字'], ['只鹿', '隻鹿', '隻鹿'], ['只手', '隻手', '隻手'], ['只身', '隻身', '隻身'], ['只只', '隻隻', '只只'], ['只蛋', '隻蛋', '隻蛋'], ['只有', '隻有', '只有'], ['只余', '只餘', '只余'], ['只羊', '隻羊', '隻羊'], ['只狼', '隻狼', '隻狼'], ['只兔', '隻兔', '隻兔'], ['只猴', '隻猴', '隻猴'], ['脱原发', '脱原發', '脱原発'], ['脱谷', '脱穀', '脱穀'], ['谷雨', '穀雨', '穀雨'], ['谷屋', '穀屋', '穀屋'], ['谷果', '穀果', '穀果'], ['谷我', '穀我', '穀我'], ['谷蛾', '穀蛾', '穀蛾'], ['谷勤', '谷勤', '谷勤'], ['谷口', '谷口', '谷口'], ['谷行', '谷行', '谷行'], ['谷崎', '谷崎', '谷崎'], ['谷遵', '谷遵', '谷遵'], ['谷象', '穀象', '穀象'], ['谷食', '穀食', '穀食'], ['谷深', '谷深', '谷深'], ['谷折', '谷折', '谷折'], ['谷川', '谷川', '谷川'], ['谷足', '谷足', '谷足'], ['谷泰', '谷泰', '谷泰'], ['谷地', '谷地', '谷地'], ['谷中', '谷中', '谷中'], ['谷町', '谷町', '谷町'], ['谷底', '谷底', '谷底'], ['谷盗', '穀盗', '穀盗'], ['谷物', '穀物', '穀物'], ['谷粉', '穀粉', '穀粉'], ['谷偏', '谷偏', '谷偏'], ['谷流', '谷流', '谷流'], ['谷粒', '穀粒', '穀粒'], ['谷菽', '穀菽', '穀菽'], ['谷蟇', '谷蟇', '谷蟇'], ['谷丰', '谷豐', '谷豊'], ['谷仓', '穀倉', '穀倉'], ['谷启', '谷啓', '谷啓'], ['谷头', '谷頭', '谷頭'], ['谷宫', '谷宮', '谷宮'], ['谷怀', '谷懷', '谷懐'], ['谷灵', '穀靈', '穀霊'], ['谷类', '穀類', '穀類'], ['谷间', '谷間', '谷間'], ['谷风', '谷風', '谷風'], ['丹前立发', '丹前立髮', '丹前立髪'], ['短发', '短髮', '短髪'], ['端制', '端整', '端整'], ['断发', '斷髮', '断髪'], ['男系', '男系', '男系'], ['知里', '知里', '知里'], ['地志', '地誌', '地誌'], ['地卷', '地捲', '地巻'], ['地历', '地歷', '地歴'], ['地发', '地髮', '地髪'], ['秩父系', '秩父系', '秩父系'], ['茶发', '茶髮', '茶髪'], ['着干', '著幹', '著幹'], ['着历', '着歷', '着歴'], ['着发', '着發', '着発'], ['中岳', '中嶽', '中嶽'], ['中里', '中里', '中里'], ['抽干', '抽乾', '抽乾'], ['柱历', '柱曆', '柱暦'], ['著干', '著幹', '著幹'], ['丁丑', '丁丑', '丁丑'], ['挑拨', '挑撥', '挑発'], ['町制', '町制', '町制'], ['直系', '直系', '直系'], ['吊慰', '弔慰', '弔慰'], ['吊影', '弔影', '弔影'], ['吊客', '弔客', '弔客'], ['吊古', '弔古', '弔古'], ['吊孝', '弔孝', '弔孝'], ['吊祭', '弔祭', '弔祭'], ['吊信', '弔信', '弔信'], ['吊念', '弔念', '弔念'], ['吊文', '弔文', '弔文'], ['吊民', '弔民', '弔民'], ['吊奠', '弔奠', '弔奠'], ['吊唁', '弔唁', '弔唁'], ['低迥', '低迴', '低迴'], ['停制', '停製', '停製'], ['停征', '停徵', '停徴'], ['剃发染衣', '剃髮染衣', '剃髪染衣'], ['定干', '定幹', '定幹'], ['定制', '定製', '定製'], ['抵御', '抵禦', '抵御'], ['摘採', '摘採', '摘採'], ['摘发', '摘發', '摘発'], ['典范', '典範', '典範'], ['天佑', '天祐', '天祐'], ['天历', '天曆', '天暦'], ['店伙', '店夥', '店夥'], ['添发', '添髮', '添髪'], ['点发', '點發', '点発'], ['田制', '田制', '田制'], ['吐干', '吐乾', '吐乾'], ['握发', '握髮', '握髪'], ['徒托', '徒託', '徒託'], ['斗魁', '斗魁', '斗魁'], ['斗牛', '鬥牛', '闘牛'], ['斗犬', '鬥犬', '闘犬'], ['斗魂', '鬥魂', '闘魂'], ['斗士', '鬥士', '闘士'], ['斗志', '鬥志', '闘志'], ['斗杓', '斗杓', '斗杓'], ['斗酒', '斗酒', '斗酒'], ['斗升', '斗升', '斗升'], ['斗将', '鬥將', '闘将'], ['斗食', '斗食', '斗食'], ['斗胆', '斗膽', '斗胆'], ['斗着', '鬥著', '闘著'], ['斗著', '鬥著', '闘著'], ['斗南', '斗南', '斗南'], ['斗入', '斗入', '斗入'], ['斗柄', '斗柄', '斗柄'], ['斗米', '斗米', '斗米'], ['斗量', '斗量', '斗量'], ['斗禄', '斗禄', '斗禄'], ['斗拱', '斗拱', '斗拱'], ['斗斛', '斗斛', '斗斛'], ['斗粮', '斗糧', '斗糧'], ['斗极', '斗極', '斗極'], ['斗鸡', '鬥鷄', '闘鶏'], ['都制', '都制', '都制'], ['土制', '土製', '土製'], ['土剉', '土銼', '土銼'], ['倒象', '倒像', '倒像'], ['倒卷', '倒捲', '倒巻'], ['冬台', '冬颱', '冬颱'], ['唐制', '唐制', '唐制'], ['投准', '投準', '投準'], ['投了', '投了', '投了'], ['東面', '東面', '東面'], ['盗採', '盗採', '盗採'], ['当托', '當托', '当托'], ['到了', '到了', '到了'], ['同系', '同系', '同系'], ['同游', '同遊', '同遊'], ['同伙', '同夥', '同夥'], ['胴里', '胴裏', '胴裏'], ['道了', '道了', '道了'], ['得准', '得準', '得準'], ['得象', '得像', '得像'], ['特发', '特發', '特発'], ['突发', '突發', '突発'], ['屯扎', '屯紮', '屯紮'], ['内里', '內裏', '内裏'], ['内发', '內發', '内発'], ['内脏', '內臟', '内臓'], ['南回', '南迴', '南迴'], ['南岳', '南嶽', '南嶽'], ['南征', '南征', '南征'], ['南面', '南面', '南面'], ['南游', '南遊', '南遊'], ['二只', '二隻', '二隻'], ['二里', '二里', '二里'], ['廿余', '廿餘', '廿余'], ['日系', '日系', '日系'], ['日历', '日曆', '日暦'], ['日发', '日發', '日発'], ['入谷', '入谷', '入谷'], ['入伙', '入夥', '入夥'], ['年余', '年餘', '年余'], ['年历', '年曆', '年暦'], ['念完', '唸完', '唸完'], ['念好', '唸好', '唸好'], ['念作', '唸作', '唸作'], ['念成', '唸成', '唸成'], ['念着', '唸著', '唸著'], ['念著', '唸著', '唸著'], ['念到', '唸到', '唸到'], ['念得', '唸得', '唸得'], ['念念', '唸唸', '唸唸'], ['念法', '唸法', '唸法'], ['念佛', '唸佛', '唸仏'], ['念咒', '唸咒', '唸咒'], ['之准', '之準', '之準'], ['之余', '之餘', '之余'], ['之游', '之遊', '之遊'], ['把姜', '把薑', '把姜'], ['婆娑罗发', '婆娑羅髮', '婆娑羅髪'], ['背后', '背後', '背後'], ['肺脏', '肺臟', '肺臓'], ['倍余', '倍餘', '倍余'], ['梅历', '梅曆', '梅暦'], ['博斗', '博鬥', '博闘'], ['白亚系', '白亞系', '白亜系'], ['白发', '白髮', '白髪'], ['爆发', '爆發', '爆発'], ['函意', '涵意', '涵意'], ['函管', '涵管', '涵管'], ['函蓄', '涵蓄', '涵蓄'], ['函洞', '涵洞', '涵洞'], ['函濡', '涵濡', '涵濡'], ['函容', '涵容', '涵容'], ['函煦', '涵煦', '涵煦'], ['八周', '八週', '八週'], ['八只', '八隻', '八隻'], ['八谷', '八穀', '八穀'], ['醗酵', '醗酵', '発酵'], ['伴游', '伴遊', '伴遊'], ['伴伙', '伴夥', '伴夥'], ['半干', '半乾', '半乾'], ['半只', '半隻', '半隻'], ['半里', '半里', '半里'], ['半发', '半髮', '半髪'], ['反卷', '反捲', '反巻'], ['板剉', '板銼', '板銼'], ['藩制', '藩制', '藩制'], ['匪干', '匪幹', '匪幹'], ['悲郁', '悲鬱', '悲鬱'], ['悲戚', '悲慼', '悲慼'], ['悲泯', '悲憫', '悲憫'], ['批注', '批註', '批註'], ['批斗', '批鬥', '批闘'], ['微松', '微鬆', '微鬆'], ['必游', '必遊', '必遊'], ['百谷', '百穀', '百穀'], ['百里', '百里', '百里'], ['表面', '表面', '表面'], ['表里', '表裏', '表裏'], ['病历', '病歷', '病歴'], ['不系', '不繫', '不繫'], ['不采', '不採', '不採'], ['不象', '不像', '不像'], ['不制', '不整', '不整'], ['不斗', '不鬥', '不闘'], ['不愈', '不癒', '不癒'], ['不余', '不餘', '不余'], ['不舍', '不捨', '不舎'], ['付托', '付託', '付託'], ['夫役', '伕役', '伕役'], ['夫奸', '夫姦', '夫姦'], ['富余', '富餘', '富余'], ['富里', '富里', '富里'], ['布局', '佈局', '佈局'], ['布景', '佈景', '佈景'], ['布告', '佈告', '佈告'], ['布施', '佈施', '佈施'], ['布署', '佈署', '佈署'], ['布谷', '布穀', '布穀'], ['布置', '佈置', '佈置'], ['布着', '佈著', '佈著'], ['布著', '佈著', '佈著'], ['布伏', '佈伏', '佈伏'], ['布兵', '佈兵', '佈兵'], ['布防', '佈防', '佈防'], ['布雷', '佈雷', '佈雷'], ['怖栗', '怖慄', '怖慄'], ['扶余', '扶餘', '扶余'], ['父系', '父系', '父系'], ['父系制', '父系制', '父系制'], ['武后', '武后', '武后'], ['副丑', '副丑', '副丑'], ['服制', '服制', '服制'], ['分象', '分像', '分像'], ['分布', '分佈', '分佈'], ['分量', '份量', '份量'], ['分伙', '分夥', '分夥'], ['扮象', '扮像', '扮像'], ['文系', '文系', '文系'], ['文采', '文采', '文采'], ['文历', '文曆', '文暦'], ['併映', '併映', '併映'], ['併科', '併科', '併科'], ['併起', '併起', '併起'], ['併行', '併行', '併行'], ['併合', '併合', '併合'], ['併出', '併出', '併出'], ['併称', '併稱', '併称'], ['併走', '併走', '併走'], ['併存', '併存', '併存'], ['併託', '併託', '併託'], ['併置', '併置', '併置'], ['併任', '併任', '併任'], ['併有', '併有', '併有'], ['併用', '併用', '併用'], ['併愿', '併願', '併願'], ['併发', '併發', '併発'], ['併吞', '併吞', '併呑'], ['併杀', '併殺', '併殺'], ['併结', '併結', '併結'], ['併记', '併記', '併記'], ['併设', '併設', '併設'], ['併读', '併讀', '併読'], ['併进', '併進', '併進'], ['兵制', '兵制', '兵制'], ['平准', '平準', '平準'], ['米谷', '米穀', '米穀'], ['壁面', '壁面', '壁面'], ['碧咸', '碧咸', '碧咸'], ['便松', '便鬆', '便鬆'], ['便象', '便像', '便像'], ['便于', '便於', '便於'], ['保准', '保準', '保準'], ['保谷', '保谷', '保谷'], ['墓志', '墓誌', '墓誌'], ['墓制', '墓制', '墓制'], ['母系', '母系', '母系'], ['母后', '母后', '母后'], ['包准', '包準', '包準'], ['包谷', '包穀', '包穀'], ['包函', '包涵', '包涵'], ['包卷', '包捲', '包巻'], ['包扎', '包紮', '包紮'], ['宝历', '寶曆', '宝暦'], ['峰回', '峰迴', '峰迴'], ['方里', '方里', '方里'], ['法系', '法系', '法系'], ['法制', '法制', '法制'], ['傍系', '傍系', '傍系'], ['傍徨', '徬徨', '徬徨'], ['北回', '北迴', '北迴'], ['北岳', '北嶽', '北嶽'], ['北征', '北征', '北征'], ['北面', '北面', '北面'], ['北游', '北遊', '北遊'], ['没了', '沒了', '没了'], ['本系', '本系', '本系'], ['本历', '本曆', '本暦'], ['麻里', '麻裏', '麻裏'], ['又干', '又幹', '又幹'], ['又松', '又鬆', '又鬆'], ['又象', '又像', '又像'], ['又斗', '又鬥', '又闘'], ['抹干', '抹乾', '抹乾'], ['抹台', '抹檯', '抹檯'], ['万里', '萬里', '万里'], ['万历', '萬曆', '万暦'], ['慢咽', '慢嚥', '慢嚥'], ['未了', '未了', '未了'], ['密折', '密摺', '密摺'], ['密致', '密緻', '密緻'], ['密布', '密佈', '密佈'], ['脈管系', '脈管系', '脈管系'], ['民族系', '民族系', '民族系'], ['名里', '名裏', '名裏'], ['明了', '明瞭', '明瞭'], ['明历', '明曆', '明暦'], ['免征', '免徵', '免徴'], ['面影', '面影', '面影'], ['面詰', '面詰', '面詰'], ['面魂', '面魂', '面魂'], ['面子', '面子', '面子'], ['面識', '面識', '面識'], ['面積', '面積', '面積'], ['面接', '面接', '面接'], ['面前', '面前', '面前'], ['面相', '面相', '面相'], ['面舵', '面舵', '面舵'], ['面談', '面談', '面談'], ['面倒', '面倒', '面倒'], ['面罵', '面罵', '面罵'], ['面皮', '面皮', '面皮'], ['面壁', '面壁', '面壁'], ['面貌', '面貌', '面貌'], ['面面', '面面', '面面'], ['面目', '面目', '面目'], ['面妖', '面妖', '面妖'], ['面容', '面容', '面容'], ['面會', '面會', '面会'], ['面從', '面從', '面従'], ['毛里', '毛裏', '毛裏'], ['盲历', '盲曆', '盲暦'], ['木里', '木裏', '木裏'], ['尤疑', '猶疑', '猶疑'], ['尤如', '猶如', '猶如'], ['尤豫', '猶豫', '猶予'], ['也象', '也像', '也像'], ['冶游', '冶遊', '冶遊'], ['夜游', '夜遊', '夜遊'], ['愈合', '癒合', '癒合'], ['愈象', '愈像', '愈像'], ['愈卷', '愈捲', '愈巻'], ['勇斗', '勇鬥', '勇闘'], ['幽郁', '幽鬱', '幽鬱'], ['幽谷', '幽谷', '幽谷'], ['悠游', '悠遊', '悠遊'], ['遊里', '遊里', '遊里'], ['遊历', '遊歷', '遊歴'], ['余位', '餘位', '余位'], ['余威', '餘威', '余威'], ['余桶', '餘桶', '余桶'], ['余音', '餘音', '余音'], ['余下', '餘下', '余下'], ['余暇', '餘暇', '余暇'], ['余款', '餘款', '余款'], ['余月', '餘月', '余月'], ['余弦', '餘弦', '余弦'], ['余光', '餘光', '余光'], ['余杭', '餘杭', '余杭'], ['余香', '餘香', '余香'], ['余恨', '餘恨', '余恨'], ['余座', '餘座', '余座'], ['余子', '餘子', '余子'], ['余枝', '餘枝', '余枝'], ['余事', '餘事', '余事'], ['余字', '餘字', '余字'], ['余次', '餘次', '余次'], ['余者', '餘者', '余者'], ['余尺', '餘尺', '余尺'], ['余丈', '餘丈', '余丈'], ['余情', '餘情', '余情'], ['余震', '餘震', '余震'], ['余人', '餘人', '余人'], ['余刃', '餘刃', '余刃'], ['余寸', '餘寸', '余寸'], ['余生', '餘生', '余生'], ['余僧', '餘僧', '余僧'], ['余息', '餘息', '余息'], ['余存', '餘存', '余存'], ['余只', '餘隻', '余隻'], ['余地', '餘地', '余地'], ['余低', '餘低', '余低'], ['余天', '餘天', '余天'], ['余怒', '餘怒', '余怒'], ['余毒', '餘毒', '余毒'], ['余日', '餘日', '余日'], ['余年', '餘年', '余年'], ['余波', '餘波', '余波'], ['余匪', '餘匪', '余匪'], ['余匹', '餘匹', '余匹'], ['余物', '餘物', '余物'], ['余味', '餘味', '余味'], ['余名', '餘名', '余名'], ['余勇', '餘勇', '余勇'], ['余裕', '餘裕', '余裕'], ['余利', '餘利', '余利'], ['余力', '餘力', '余力'], ['余烈', '餘烈', '余烈'], ['余路', '餘路', '余路'], ['余漏', '餘漏', '余漏'], ['余剩', '餘剩', '余剰'], ['余姚', '餘姚', '余姚'], ['余悸', '餘悸', '余悸'], ['余殃', '餘殃', '余殃'], ['余缺', '餘缺', '余欠'], ['余羹', '餘羹', '余羹'], ['余辜', '餘辜', '余辜'], ['余孽', '餘孽', '余孽'], ['容范', '容範', '容範'], ['抑郁', '抑鬱', '抑鬱'], ['利欲', '利慾', '利慾'], ['理系', '理系', '理系'], ['里衣', '裏衣', '裏衣'], ['里芋', '里芋', '里芋'], ['里印', '裏印', '裏印'], ['里屋', '裏屋', '裏屋'], ['里回', '里回', '里回'], ['里廻', '里廻', '里廻'], ['里技', '裏技', '裏技'], ['里菊', '裏菊', '裏菊'], ['里居', '里居', '里居'], ['里曲', '里曲', '里曲'], ['里金', '裏金', '裏金'], ['里罫', '裏罫', '裏罫'], ['里犬', '里犬', '里犬'], ['里口', '裏口', '裏口'], ['里甲', '裏甲', '裏甲'], ['里腰', '裏腰', '裏腰'], ['里差', '裏差', '裏差'], ['里作', '裏作', '裏作'], ['里子', '里子', '里子'], ['里尺', '裏尺', '裏尺'], ['里主', '里主', '里主'], ['里手', '裏手', '裏手'], ['里旬', '裏旬', '裏旬'], ['里心', '里心', '里心'], ['里人', '里人', '里人'], ['里数', '里數', '里数'], ['里雀', '里雀', '里雀'], ['里正', '里正', '里正'], ['里声', '裏聲', '裏声'], ['里雪', '里雪', '里雪'], ['里窓', '裏窓', '裏窓'], ['里俗', '里俗', '里俗'], ['里袖', '裏袖', '裏袖'], ['里村', '里村', '里村'], ['里地', '裏地', '裏地'], ['里町', '裏町', '裏町'], ['里庭', '裏庭', '裏庭'], ['里程', '里程', '里程'], ['里店', '裏店', '裏店'], ['里童', '里童', '里童'], ['里年', '裏年', '裏年'], ['里梅', '裏梅', '裏梅'], ['里白', '裏白', '裏白'], ['里箔', '裏箔', '裏箔'], ['里判', '裏判', '裏判'], ['里板', '裏闆', '裏板'], ['里表', '裏表', '裏表'], ['里封', '裏封', '裏封'], ['里腹', '裏腹', '裏腹'], ['里偏', '里偏', '里偏'], ['里方', '裏方', '裏方'], ['里坊', '里坊', '里坊'], ['里盆', '裏盆', '裏盆'], ['里余', '里餘', '里余'], ['里謡', '里謡', '里謡'], ['里落', '里落', '里落'], ['里书', '裏書', '裏書'], ['里亲', '里親', '里親'], ['里侧', '裏側', '裏側'], ['里宫', '里宮', '里宮'], ['里栈', '裏棧', '裏桟'], ['里樱', '里櫻', '里桜'], ['里烧', '裏燒', '裏焼'], ['里纸', '裏紙', '裏紙'], ['里组', '裏組', '裏組'], ['里艺', '裏藝', '裏芸'], ['里邻', '里鄰', '里隣'], ['里钉', '裏釘', '裏釘'], ['里铭', '裏銘', '裏銘'], ['里长', '里長', '里長'], ['立后', '立后', '立后'], ['略历', '略曆', '略暦'], ['了意', '了意', '了意'], ['了解', '了解', '了解'], ['了海', '了海', '了海'], ['了慧', '了慧', '了慧'], ['了月', '了月', '了月'], ['了源', '了源', '了源'], ['了悟', '了悟', '了悟'], ['了光', '了光', '了光'], ['了察', '了察', '了察'], ['了承', '了承', '了承'], ['了性', '了性', '了性'], ['了然', '瞭然', '瞭然'], ['了知', '了知', '了知'], ['了智', '了智', '了智'], ['了的', '了的', '了的'], ['了得', '了得', '了得'], ['了入', '了入', '了入'], ['了派', '了派', '了派'], ['了遍', '了遍', '了遍'], ['了望', '瞭望', '瞭望'], ['了了', '了了', '了了'], ['了实', '了實', '了実'], ['了硕', '了碩', '了碩'], ['了简', '了簡', '了簡'], ['了见', '了見', '了見'], ['了达', '了達', '了達'], ['了风', '了風', '了風'], ['力干', '力幹', '力幹'], ['力斗', '力鬥', '力闘'], ['力拼', '力拚', '力拚'], ['林了', '林了', '林了'], ['令媛', '令嬡', '令嬡'], ['伶敏', '靈敏', '霊敏'], ['例范', '例範', '例範'], ['劣后', '劣後', '劣後'], ['呂后', '呂后', '呂后'], ['弄干', '弄乾', '弄乾'], ['弄松', '弄鬆', '弄鬆'], ['六周', '六週', '六週'], ['六只', '六隻', '六隻'], ['六谷', '六穀', '六穀'], ['六欲', '六慾', '六慾'], ['六里', '六里', '六里'], ['六历', '六曆', '六暦'], ['和制', '和製', '和製'], ['和了', '和了', '和了'], ['和历', '和曆', '和暦'], ['仍象', '仍像', '仍像'], ['仍斗', '仍鬥', '仍闘'], ['佛象', '佛像', '仏像'], ['假面', '假面', '仮面'], ['假发', '假髮', '仮髪'], ['冲口发', '衝口發', '衝口発'], ['冲着', '衝著', '衝著'], ['冲著', '衝著', '衝著'], ['刮起', '颳起', '颳起'], ['刮胡', '刮鬍', '刮胡'], ['刮倒', '颳倒', '颳倒'], ['剪彩', '剪綵', '剪綵'], ['剪除', '翦除', '翦除'], ['剩肴', '剩餚', '剰餚'], ['卅余', '卅餘', '卅余'], ['卷往', '捲往', '巻往'], ['卷回', '捲回', '巻回'], ['卷款', '捲款', '巻款'], ['卷起', '捲起', '巻起'], ['卷去', '捲去', '巻去'], ['卷向', '捲向', '巻向'], ['卷至', '捲至', '巻至'], ['卷住', '捲住', '巻住'], ['卷出', '捲出', '巻出'], ['卷上', '捲上', '巻上'], ['卷身', '捲身', '巻身'], ['卷成', '捲成', '巻成'], ['卷舌', '捲舌', '巻舌'], ['卷走', '捲走', '巻走'], ['卷袖', '捲袖', '巻袖'], ['卷着', '捲著', '巻著'], ['卷著', '捲著', '巻著'], ['卷土', '捲土', '巻土'], ['卷到', '捲到', '巻到'], ['卷逃', '捲逃', '巻逃'], ['卷得', '捲得', '巻得'], ['卷入', '捲入', '巻入'], ['卷毛', '捲毛', '巻毛'], ['卷了', '捲了', '巻了'], ['卷浪', '捲浪', '巻浪'], ['卷拂', '捲拂', '巻払'], ['卷碎', '捲碎', '巻砕'], ['卷裹', '捲裹', '巻裹'], ['卷发', '捲髮', '巻髪'], ['吮干', '吮乾', '吮乾'], ['咎征', '咎徵', '咎徴'], ['呷干', '呷乾', '呷乾'], ['咀咽', '咀嚥', '咀嚥'], ['咸宜', '咸宜', '咸宜'], ['咸五', '咸五', '咸五'], ['咸池', '咸池', '咸池'], ['咸和', '咸和', '咸和'], ['咸丰', '咸豐', '咸豊'], ['咸阳', '咸陽', '咸陽'], ['咨商', '諮商', '諮商'], ['嘴干', '嘴乾', '嘴乾'], ['圈谷', '圈谷', '圏谷'], ['圈梁', '圈樑', '圏樑'], ['圈发', '圈發', '圏発'], ['奸淫', '姦淫', '姦淫'], ['奸拐', '姦拐', '姦拐'], ['奸凶', '姦凶', '姦凶'], ['奸情', '姦情', '姦情'], ['奸通', '姦通', '姦通'], ['奸夫', '姦夫', '姦夫'], ['奸污', '姦污', '姦汚'], ['姜花', '薑花', '姜花'], ['姜汁', '薑汁', '姜汁'], ['姜是', '薑是', '姜是'], ['姜茶', '薑茶', '姜茶'], ['姜糖', '薑糖', '姜糖'], ['姜片', '薑片', '姜片'], ['姜末', '薑末', '姜末'], ['姜油', '薑油', '姜油'], ['姜醋', '薑醋', '姜醋'], ['娉亭', '娉婷', '娉婷'], ['婀挪', '婀娜', '婀娜'], ['嬖幸', '嬖倖', '嬖倖'], ['它象', '它像', '它像'], ['宦游', '宦遊', '宦遊'], ['宸游', '宸遊', '宸遊'], ['巫咸', '巫咸', '巫咸'], ['已松', '已鬆', '已鬆'], ['已象', '已像', '已像'], ['已愈', '已癒', '已癒'], ['已余', '已餘', '已余'], ['彭咸', '彭咸', '彭咸'], ['彷佛', '彷彿', '彷彿'], ['彷徨', '徬徨', '徬徨'], ['很干', '很乾', '很乾'], ['很准', '很準', '很準'], ['很松', '很鬆', '很鬆'], ['很象', '很像', '很像'], ['徨恐', '惶恐', '惶恐'], ['怎幺', '怎麼', '怎麼'], ['恂栗', '恂慄', '恂慄'], ['悚栗', '悚慄', '悚慄'], ['悒郁', '悒鬱', '悒鬱'], ['悸栗', '悸慄', '悸慄'], ['惶栗', '惶慄', '惶慄'], ['惴栗', '惴慄', '惴慄'], ['惺松', '惺忪', '惺忪'], ['懊郁', '懊鬱', '懊鬱'], ['懈松', '懈鬆', '懈鬆'], ['懿范', '懿範', '懿範'], ['扁剉', '扁銼', '扁銼'], ['扎起', '紮起', '紮起'], ['扎彩', '紮彩', '紮彩'], ['扎住', '紮住', '紮住'], ['扎上', '紮上', '紮上'], ['扎成', '紮成', '紮成'], ['扎着', '紮著', '紮著'], ['扎著', '紮著', '紮著'], ['扎囮', '紮囮', '紮囮'], ['扎寨', '紮寨', '紮寨'], ['扎裹', '紮裹', '紮裹'], ['扣准', '扣準', '扣準'], ['扛丸', '摃丸', '摃丸'], ['找准', '找準', '找準'], ['抓准', '抓準', '抓準'], ['抓斗', '抓鬥', '抓闘'], ['抓奸', '抓姦', '抓姦'], ['拆斗', '拆鬥', '拆闘'], ['拆伙', '拆夥', '拆夥'], ['拌面', '拌麵', '拌麺'], ['拉面', '拉麵', '拉麺'], ['抬扛', '抬摃', '抬摃'], ['溪谷', '溪谷', '渓谷'], ['倏松', '倏鬆', '倏鬆'], ['癸丑', '癸丑', '癸丑'], ['眞里', '眞裏', '真裏'], ['眞了', '眞了', '真了'], ['眞发成村', '眞髮成村', '真髪成村'], ['翊赞', '翊贊', '翊賛'], ['胄子', '胄子', '胄子'], ['胄裔', '胄裔', '胄裔'], ['脾脏', '脾臟', '脾臓'], ['腑脏', '腑臟', '腑臓'], ['裔胄', '裔胄', '裔胄'], ['谿谷', '谿谷', '谿谷'], ['遐胄', '遐胄', '遐胄'], ['阮咸', '阮咸', '阮咸'], ['髫发少女', '髫髮少女', '髫髪少女'], ['业历', '業歷', '業歴'], ['东岳', '東嶽', '東嶽'], ['东征', '東征', '東征'], ['丝面', '絲面', '糸面'], ['乌帽子发', '烏帽子髮', '烏帽子髪'], ['乐面', '樂面', '楽面'], ['乐发', '樂髮', '楽髪'], ['书面', '書面', '書面'], ['产制', '產制', '産制'], ['亲系', '親系', '親系'], ['亲征', '親征', '親征'], ['亲里', '親里', '親里'], ['仿制', '仿製', '仿製'], ['仿佛', '彷彿', '彷彿'], ['仿徨', '徬徨', '徬徨'], ['仿效', '倣傚', '倣傚'], ['仿徉', '彷徉', '彷徉'], ['伙同', '夥同', '夥同'], ['伙伴', '夥伴', '夥伴'], ['伙夫', '伙伕', '伙伕'], ['传赞', '傳贊', '伝賛'], ['你干', '你幹', '你幹'], ['你象', '你像', '你像'], ['俱象', '俱像', '俱像'], ['偷梁', '偷樑', '偷樑'], ['傒幸', '傒倖', '傒倖'], ['儆效', '儆傚', '儆傚'], ['关系', '關係', '関係'], ['冈谷', '岡谷', '岡谷'], ['军制', '軍制', '軍制'], ['凤历', '鳳曆', '鳳暦'], ['创发', '創發', '創発'], ['刨花', '鉋花', '鉋花'], ['刨削', '鉋削', '鉋削'], ['刨子', '鉋子', '鉋子'], ['刨刀', '鉋刀', '鉋刀'], ['剉工', '銼工', '銼工'], ['剉刀', '銼刀', '銼刀'], ['剉平', '銼平', '銼平'], ['剉冰', '銼冰', '銼冰'], ['单位系', '單位系', '単位系'], ['单发', '單發', '単発'], ['单发机', '單發機', '単発機'], ['单发铳', '單發銃', '単発銃'], ['单馆系', '單館系', '単館系'], ['卽发', '卽發', '即発'], ['历る', '歷る', '歴る'], ['历学', '曆學', '暦学'], ['历叶', '歷葉', '歴葉'], ['历劫', '歷劫', '歴劫'], ['历山', '歷山', '歴山'], ['历仕', '歷仕', '歴仕'], ['历史', '歷史', '歴史'], ['历事', '歷事', '歴事'], ['历手', '曆手', '暦手'], ['历巡', '歷巡', '歴巡'], ['历女', '歷女', '歴女'], ['历象', '曆象', '暦象'], ['历仁', '曆仁', '暦仁'], ['历数', '曆數', '暦数'], ['历世', '歷世', '歴世'], ['历然', '歷然', '歴然'], ['历代', '歷代', '歴代'], ['历注', '曆注', '暦注'], ['历朝', '歷朝', '歴朝'], ['历程', '歷程', '歴程'], ['历道', '曆道', '暦道'], ['历日', '曆日', '暦日'], ['历任', '歷任', '歴任'], ['历年', '曆年', '暦年'], ['历博', '歷博', '歴博'], ['历法', '曆法', '暦法'], ['历遊', '歷遊', '歴遊'], ['历乱', '歷亂', '歴乱'], ['历拜', '歷拜', '歴拝'], ['历书', '曆書', '暦書'], ['历传', '歷傳', '歴伝'], ['历历', '曆曆', '暦暦'], ['历岁', '歷歲', '歴歳'], ['历应', '曆應', '暦応'], ['历战', '歷戰', '歴戦'], ['历术', '曆術', '暦術'], ['历览', '歷覽', '歴覧'], ['历访', '歷訪', '歴訪'], ['历运', '曆運', '暦運'], ['历阶', '歷階', '歴階'], ['压制', '壓制', '圧制'], ['发暗', '發暗', '発暗'], ['发案', '發案', '発案'], ['发威', '發威', '発威'], ['发意', '發意', '発意'], ['发育', '發育', '発育'], ['发引', '發引', '発引'], ['发煙', '發煙', '発煙'], ['发旺', '發旺', '発旺'], ['发横', '發横', '発横'], ['发横财', '發横財', '発横財'], ['发屋', '髮屋', '髪屋'], ['发音', '發音', '発音'], ['发家', '發家', '発家'], ['发火', '發火', '発火'], ['发花', '發花', '発花'], ['发芽', '發芽', '発芽'], ['发会', '發會', '発会'], ['发滑', '發滑', '発滑'], ['发冠', '髮冠', '髪冠'], ['发刊', '發刊', '発刊'], ['发干', '發乾', '発乾'], ['发汗', '發汗', '発汗'], ['发癌性', '發癌性', '発癌性'], ['发起人', '發起人', '発起人'], ['发急', '發急', '発急'], ['发球', '發球', '発球'], ['发狂', '發狂', '発狂'], ['发筋', '髮筋', '髪筋'], ['发句', '發句', '発句'], ['发苦', '發苦', '発苦'], ['发掘', '發掘', '発掘'], ['发型', '髮型', '髪型'], ['发遣', '發遣', '発遣'], ['发言力', '發言力', '発言力'], ['发言权', '發言權', '発言権'], ['发光', '發光', '発光'], ['发光器', '發光器', '発光器'], ['发光菌', '發光菌', '発光菌'], ['发光素', '發光素', '発光素'], ['发光体', '發光體', '発光体'], ['发光强度', '發光強度', '発光強度'], ['发効', '發効', '発効'], ['发慌', '發慌', '発慌'], ['发稿', '發稿', '発稿'], ['发行', '發行', '発行'], ['发酵', '發酵', '発酵'], ['发号施令', '發號施令', '発号施令'], ['发困', '發睏', '発睏'], ['发恨', '發恨', '発恨'], ['发昏', '發昏', '発昏'], ['发座', '髮座', '髪座'], ['发妻', '髮妻', '髪妻'], ['发菜', '髮菜', '髪菜'], ['发作', '發作', '発作'], ['发刷', '髮刷', '髪刷'], ['发散', '發散', '発散'], ['发酸', '發酸', '発酸'], ['发指眦裂', '髮指眦裂', '髪指眦裂'], ['发事', '發事', '発事'], ['发式', '髮式', '髪式'], ['发射', '發射', '発射'], ['发酒疯', '發酒瘋', '発酒瘋'], ['发愁', '發愁', '発愁'], ['发出', '發出', '発出'], ['发床', '髮床', '髪床'], ['发祥', '發祥', '発祥'], ['发情', '發情', '発情'], ['发条', '發條', '発条'], ['发状', '髮狀', '髪状'], ['发信', '發信', '発信'], ['发心', '發心', '発心'], ['发疹', '發疹', '発疹'], ['发神经', '發神經', '発神経'], ['发身', '發身', '発身'], ['发人深思', '發人深思', '発人深思'], ['发人深省', '發人深省', '発人深省'], ['发人深醒', '發人深醒', '発人深醒'], ['发水', '發水', '発水'], ['发生', '發生', '発生'], ['发声', '發聲', '発声'], ['发誓', '發誓', '発誓'], ['发青', '發青', '発青'], ['发送', '發送', '発送'], ['发送机', '發送機', '発送機'], ['发束', '髮束', '髪束'], ['发足', '發足', '発足'], ['发短心长', '髮短心長', '髪短心長'], ['发端', '發端', '発端'], ['发痴', '發痴', '発痴'], ['发潮', '發潮', '発潮'], ['发展', '發展', '発展'], ['发堵', '發堵', '発堵'], ['发怒', '發怒', '発怒'], ['发套', '髮套', '髪套'], ['发乳', '髮乳', '髪乳'], ['发破', '發破', '発破'], ['发排', '發排', '発排'], ['发配', '發配', '発配'], ['发白', '發白', '発白'], ['发票', '發票', '発票'], ['发表', '發表', '発表'], ['发病', '發病', '発病'], ['发不了', '發不瞭', '発不瞭'], ['发布', '發布', '発布'], ['发福', '發福', '発福'], ['发物', '發物', '発物'], ['发粉', '發粉', '発粉'], ['发文', '發文', '発文'], ['发兵', '發兵', '発兵'], ['发癖', '髮癖', '髪癖'], ['发包', '發包', '発包'], ['发呆', '發呆', '発呆'], ['发放', '發放', '発放'], ['发泡剂', '發泡劑', '発泡剤'], ['发麻', '發麻', '発麻'], ['发明', '發明', '発明'], ['发面', '發麵', '発麺'], ['发毛', '發毛', '発毛'], ['发蒙', '發蒙', '発蒙'], ['发蒙振落', '發蒙振落', '発蒙振落'], ['发木', '發木', '発木'], ['发油', '髮油', '髪油'], ['发落', '發落', '発落'], ['发利市', '發利市', '発利市'], ['发亮', '發亮', '発亮'], ['发令', '發令', '発令'], ['发冷', '發冷', '発冷'], ['发露', '發露', '発露'], ['发廊', '髮廊', '髪廊'], ['发牢骚', '發牢騷', '発牢騒'], ['发僵', '發僵', '発僵'], ['发售', '發售', '発售'], ['发喘', '發喘', '発喘'], ['发愿文', '發願文', '発願文'], ['发抒', '發抒', '発抒'], ['发抖', '發抖', '発抖'], ['发榜', '發榜', '発榜'], ['发气', '發氣', '発気'], ['发狠', '發狠', '発狠'], ['发窘', '發窘', '発窘'], ['发箍', '髮箍', '髪箍'], ['发网', '髮網', '髪網'], ['发胖', '發胖', '発胖'], ['发脾气', '發脾氣', '発脾気'], ['发迹', '發迹', '発迹'], ['发髻', '髮髻', '髪髻'], ['发黏', '發黏', '発黏'], ['发丧', '發喪', '発喪'], ['发傻', '發傻', '発傻'], ['发动', '發動', '発動'], ['发动机', '發動機', '発動機'], ['发单', '發單', '発単'], ['发卖', '發賣', '発売'], ['发卡', '髮卡', '髪卡'], ['发变', '發變', '発変'], ['发嗲', '發嗲', '発嗲'], ['发头', '髮頭', '髪頭'], ['发夹', '髮夾', '髪夾'], ['发奋', '發奮', '発奮'], ['发奶', '發奶', '発奶'], ['发带', '髮帶', '髪帯'], ['发态度', '發態度', '発態度'], ['发怵', '發怵', '発怵'], ['发恼', '發惱', '発悩'], ['发愣', '發愣', '発愣'], ['发愤', '發憤', '発憤'], ['发懒', '發懶', '発懶'], ['发报', '發報', '発報'], ['发挥', '發揮', '発揮'], ['发标', '發標', '発標'], ['发沉', '發沉', '発沉'], ['发泼', '發潑', '発溌'], ['发浑', '發渾', '発渾'], ['发烦', '發煩', '発煩'], ['发烧', '發燒', '発焼'], ['发热', '發熱', '発熱'], ['发现', '發現', '発現'], ['发电', '發電', '発電'], ['发电机', '發電機', '発電機'], ['发疯', '發瘋', '発瘋'], ['发痧', '發痧', '発痧'], ['发瘆', '發瘮', '発瘮'], ['发盘', '發盤', '発盤'], ['发糕', '發糕', '発糕'], ['发紧', '發緊', '発緊'], ['发纲', '髮綱', '髪綱'], ['发结新三', '髮結新三', '髪結新三'], ['发聋振聩', '發聾振聵', '発聾振聵'], ['发胶', '髮膠', '髪膠'], ['发腻', '發膩', '発膩'], ['发舰', '發艦', '発艦'], ['发苶', '發苶', '発苶'], ['发荣', '發榮', '発栄'], ['发蓝', '發藍', '発藍'], ['发蔫', '發蔫', '発蔫'], ['发蜡', '髮蠟', '髪蝋'], ['发见', '發見', '発見'], ['发觉', '發覺', '発覚'], ['发话', '發話', '発話'], ['发财', '發財', '発財'], ['发货', '發貨', '発貨'], ['发赖', '發賴', '発頼'], ['发车', '發車', '発車'], ['发软', '發軟', '発軟'], ['发辫', '髮辮', '髪弁'], ['发达', '發達', '発達'], ['发还', '發還', '発還'], ['发长', '髮長', '髪長'], ['发问', '發問', '発問'], ['发闷', '發悶', '発悶'], ['发际', '髮際', '髪際'], ['发难', '發難', '発難'], ['发霉', '發黴', '発黴'], ['发颤', '發顫', '発顫'], ['发飘', '發飄', '発飄'], ['发饰', '髮飾', '髪飾'], ['发驾', '發駕', '発駕'], ['发驿', '發驛', '発駅'], ['发鬓', '髮鬢', '髪鬢'], ['发黑', '發黑', '発黒'], ['另辟', '另闢', '另闢'], ['吞咽', '吞嚥', '呑嚥'], ['吧台', '吧檯', '吧檯'], ['启发', '啓發', '啓発'], ['吵斗', '吵鬥', '吵闘'], ['吿发', '吿發', '告発'], ['哪象', '哪像', '哪像'], ['唁吊', '唁弔', '唁弔'], ['喂羊', '餵羊', '餵羊'], ['喂它', '餵牠', '餵牠'], ['嘹亮', '嘹喨', '嘹喨'], ['图面', '圖面', '図面'], ['增辟', '增闢', '増闢'], ['增发', '增發', '増発'], ['复杂', '複雜', '複雑'], ['复杂系', '複雜系', '複雑系'], ['头发', '頭髮', '頭髪'], ['她干', '她幹', '她幹'], ['她象', '她像', '她像'], ['妇系', '婦系', '婦系'], ['嬴余', '嬴餘', '嬴余'], ['实系', '實系', '実系'], ['实历', '實歷', '実歴'], ['对面', '對面', '対面'], ['币制', '幣制', '幣制'], ['乡里', '鄉里', '郷里'], ['应制', '應制', '応制'], ['开放系', '開放系', '開放系'], ['开发', '開發', '開発'], ['异系', '異系', '異系'], ['总里', '總裏', '総裏'], ['总发', '總髮', '総髪'], ['悬谷', '懸谷', '懸谷'], ['惕栗', '惕慄', '惕慄'], ['惯性系', '慣性系', '慣性系'], ['懰栗', '懰慄', '懰慄'], ['战斗', '戰鬥', '戦闘'], ['战历', '戰歷', '戦歴'], ['拟制', '擬制', '擬制'], ['挥发', '揮發', '揮発'], ['时系列', '時系列', '時系列'], ['时制', '時制', '時制'], ['杂谷', '雜穀', '雑穀'], ['汤谷', '湯谷', '湯谷'], ['涩面', '澀面', '渋面'], ['淸谷', '淸谷', '清谷'], ['淸里', '淸里', '清里'], ['满面', '滿面', '満面'], ['满了', '滿了', '満了'], ['濑谷', '瀨谷', '瀬谷'], ['热发', '熱發', '熱発'], ['现制', '現制', '現制'], ['电波系', '電波系', '電波系'], ['电发', '電髮', '電髪'], ['盐谷', '鹽谷', '塩谷'], ['盘谷', '盤谷', '盤谷'], ['签署', '簽署', '簽署'], ['红里', '紅裏', '紅裏'], ['纯系', '純系', '純系'], ['纳采', '納采', '納采'], ['纵谷', '縱谷', '縦谷'], ['细面', '細面', '細面'], ['终了', '終了', '終了'], ['终发', '終發', '終発'], ['经历', '經歷', '経歴'], ['结晶系', '結晶系', '結晶系'], ['结了', '結了', '結了'], ['结发', '結髮', '結髪'], ['绘历', '繪曆', '絵暦'], ['绝后', '絶後', '絶後'], ['统制', '統制', '統制'], ['续发', '續發', '続発'], ['编制', '編制', '編制'], ['缝制', '縫製', '縫製'], ['缩原发', '縮原發', '縮原発'], ['职制', '職制', '職制'], ['职历', '職歷', '職歴'], ['肠脏', '腸臟', '腸臓'], ['肾脏', '腎臟', '腎臓'], ['胰脏', '胰臟', '胰臓'], ['脏器', '臟器', '臓器'], ['脏腑', '臟腑', '臓腑'], ['脺脏', '脺臟', '脺臓'], ['艺里', '藝裏', '芸裏'], ['节制', '節制', '節制'], ['获取', '獲取', '獲取'], ['莺谷', '鶯谷', '鶯谷'], ['补制', '補整', '補整'], ['见面', '見面', '見面'], ['规制', '規制', '規制'], ['计里', '計里', '計里'], ['论赞', '論贊', '論賛'], ['译里', '譯里', '訳里'], ['译了', '譯了', '訳了'], ['读了', '讀了', '読了'], ['调制', '調整', '調整'], ['调发', '調髮', '調髪'], ['谨制', '謹製', '謹製'], ['责了', '責了', '責了'], ['质点系', '質點系', '質点系'], ['贵面', '貴面', '貴面'], ['赞助', '贊助', '賛助'], ['赞成', '贊成', '賛成'], ['赞善', '贊善', '賛善'], ['赞同', '贊同', '賛同'], ['赞普', '贊普', '賛普'], ['赞翼', '贊翼', '賛翼'], ['赞理', '贊理', '賛理'], ['赞礼', '贊禮', '賛礼'], ['赞拜', '贊拜', '賛拝'], ['辅赞', '輔贊', '輔賛'], ['还历', '還曆', '還暦'], ['进发', '進發', '進発'], ['连系', '連係', '連係'], ['迟发', '遲發', '遅発'], ['遗制', '遺制', '遺制'], ['遗发', '遺髮', '遺髪'], ['银河系', '銀河系', '銀河系'], ['银面', '銀面', '銀面'], ['银发', '銀髮', '銀髪'], ['长征', '長征', '長征'], ['长历', '長曆', '長暦'], ['长发', '長髮', '長髪'], ['闭锁系', '閉鎖系', '閉鎖系'], ['间一发', '間一髮', '間一髪'], ['阅历', '閱歷', '閲歴'], ['阳历', '陽曆', '陽暦'], ['阴历', '陰曆', '陰暦'], ['韦后', '韋后', '韋后'], ['颜面', '顔面', '顔面'], ['额面', '額面', '額面'], ['额里', '額裏', '額裏'], ['额发', '額髮', '額髪'], ['风采', '風采', '風采'], ['驿制', '驛制', '駅制'], ['鹤发', '鶴髮', '鶴髪'], ['黑谷', '黑谷', '黒谷'], ['齐制', '齊整', '斉整'], ['苏峻', '蘇峻', '蘇峻'], ['汇类', '彙類', '彙類'], ['山汇', '山彙', '山彙'], ['汇报', '匯報', '匯報'], ['汇编', '彙編', '彙編'], ['汇兑', '匯兌', '匯兌'], ['汇费', '匯費', '匯費'], ['汇合', '匯合', '匯合'], ['汇集', '匯集', '匯集'], ['汇价', '匯價', '匯価'], ['汇聚', '匯聚', '匯聚'], ['汇款', '匯款', '匯款'], ['汇流', '匯流', '匯流'], ['汇拢', '匯攏', '匯攏'], ['汇率', '匯率', '匯率'], ['汇票', '匯票', '匯票'], ['汇融', '匯融', '匯融'], ['汇演', '匯演', '匯演'], ['汇展', '匯展', '匯展'], ['汇注', '匯注', '匯注'], ['汇总', '匯總', '匯総'], ['语汇', '語彙', '語彙'], ['事汇', '事彙', '事彙'], ['字汇', '字彙', '字彙'], ['辞汇', '辭彙', '辞彙'], ['品汇', '品彙', '品彙'], ['汇报', '彙報', '彙報'], ['信汇', '信匯', '信匯'], ['侨汇', '僑匯', '僑匯'], ['创汇', '創匯', '創匯'], ['汇付', '匯付', '匯付'], ['汇信', '匯信', '匯信'], ['汇价', '匯價', '匯價'], ['汇市', '匯市', '匯市'], ['汇水', '匯水', '匯水'], ['汇编', '匯編', '匯編'], ['汇总', '匯總', '匯總'], ['汇银', '匯銀', '匯銀'], ['汇钱', '匯錢', '匯錢'], ['外汇', '外匯', '外匯'], ['套汇', '套匯', '套匯'], ['押汇', '押匯', '押匯'], ['换汇', '換匯', '換匯'], ['用汇', '用匯', '用匯'], ['票汇', '票匯', '票匯'], ['结汇', '結匯', '結匯'], ['总汇', '總匯', '總匯'], ['融汇', '融匯', '融匯'], ['邮汇', '郵匯', '郵匯'], ['电汇', '電匯', '電匯'], ['汇刊', '彙刊', '彙刊'], ['汇整', '彙整', '彙整'], ['词汇', '詞彙', '詞彙'], ['辞汇', '辭彙', '辭彙'], ['交汇', '交匯', '交匯'], ['着物', '着物', '着物'], ['爱着', '愛着', '愛着'], ['安着', '安着', '安着'], ['一着', '一着', '一着'], ['雨着', '雨着', '雨着'], ['延着', '延着', '延着'], ['横着', '横着', '横着'], ['夏着', '夏着', '夏着'], ['活着', '活着', '活着'], ['归着', '歸着', '帰着'], ['凝着', '凝着', '凝着'], ['巾着', '巾着', '巾着'], ['近着', '近着', '近着'], ['古着', '古着', '古着'], ['固着', '固着', '固着'], ['厚着', '厚着', '厚着'], ['降着', '降着', '降着'], ['合着', '合着', '合着'], ['参着', '參着', '参着'], ['试着', '試着', '試着'], ['执着', '執着', '執着'], ['失着', '失着', '失着'], ['实着', '實着', '実着'], ['借着', '借着', '借着'], ['收着', '收着', '収着'], ['终着', '終着', '終着'], ['祝着', '祝着', '祝着'], ['春着', '春着', '春着'], ['胜着', '勝着', '勝着'], ['蒸着', '蒸着', '蒸着'], ['新着', '新着', '新着'], ['水着', '水着', '水着'], ['裾着', '裾着', '裾着'], ['晴着', '晴着', '晴着'], ['正着', '正着', '正着'], ['接着', '接着', '接着'], ['先着', '先着', '先着'], ['染着', '染着', '染着'], ['早着', '早着', '早着'], ['装着', '裝着', '装着'], ['替着', '替着', '替着'], ['脱着', '脱着', '脱着'], ['弹着', '彈着', '弾着'], ['着压', '着壓', '着圧'], ['着意', '着意', '着意'], ['着衣', '着衣', '着衣'], ['着驿', '着驛', '着駅'], ['着果', '着果', '着果'], ['着火', '着火', '着火'], ['着荷', '着荷', '着荷'], ['着舰', '着艦', '着艦'], ['着岸', '着岸', '着岸'], ['着眼', '着眼', '着眼'], ['着京', '着京', '着京'], ['着金', '着金', '着金'], ['着剑', '着劍', '着剣'], ['着裤', '着褲', '着袴'], ['着御', '着禦', '着御'], ['着工', '着工', '着工'], ['着港', '着港', '着港'], ['着国', '着國', '着国'], ['着差', '着差', '着差'], ['遗著', '遺著', '遺著'], ['爱著', '愛著', '愛著'], ['快著', '快著', '快著'], ['较著', '較著', '較著'], ['贵著', '貴著', '貴著'], ['旧著', '舊著', '旧著'], ['共著', '共著', '共著'], ['近著', '近著', '近著'], ['显著', '顯著', '顕著'], ['原著', '原著', '原著'], ['好著', '好著', '好著'], ['高著', '高著', '高著'], ['杂著', '雜著', '雑著'], ['自著', '自著', '自著'], ['主著', '主著', '主著'], ['小著', '小著', '小著'], ['新著', '新著', '新著'], ['拙著', '拙著', '拙著'], ['前著', '前著', '前著'], ['大著', '大著', '大著'], ['单著', '單著', '単著'], ['著减', '著減', '著減'], ['著作', '著作', '著作'], ['著者', '著者', '著者'], ['著述', '著述', '著述'], ['著书', '著書', '著書'], ['著增', '著增', '著増'], ['著大', '著大', '著大'], ['著闻', '著聞', '著聞'], ['著名', '著名', '著名'], ['著明', '著明', '著明'], ['名著', '名著', '名著'], ['迷著', '迷著', '迷著'], ['论著', '論著', '論著'], ['著莪', '著莪', '著莪'], ['无著', '無著', '無著'], ['著录', '著録', '著録'], ['编著', '編著', '編著'], ['复活', '復活', '復活'], ['系过', '繫過', '繫過'], ['复交', '復交', '復交'], ['复仇', '復仇', '復仇'], ['复任', '復任', '復任'], ['复位', '復位', '復位'], ['复信', '復信', '復信'], ['复元', '復元', '復元'], ['复出', '復出', '復出'], ['复函', '復函', '復函'], ['复刊', '復刊', '復刊'], ['复原', '復原', '復原'], ['复古', '復古', '復古'], ['复名数', '復名數', '復名数'], ['复命', '復命', '復命'], ['复员', '復員', '復員'], ['复圆', '復圓', '復円'], ['复婚', '復婚', '復婚'], ['复学', '復學', '復学'], ['复工', '復工', '復工'], ['复市', '復市', '復市'], ['复明', '復明', '復明'], ['复会', '復會', '復会'], ['复核', '復核', '復核'], ['复业', '復業', '復業'], ['复归', '復歸', '復帰'], ['复现', '復現', '復現'], ['复生', '復生', '復生'], ['复苏', '復甦', '復甦'], ['复发', '復發', '復発'], ['复种', '復種', '復種'], ['复聪', '復聰', '復聡'], ['复职', '復職', '復職'], ['复兴', '復興', '復興'], ['复旧', '復舊', '復旧'], ['复课', '復課', '復課'], ['复议', '復議', '復議'], ['复蹈前辙', '復蹈前轍', '復蹈前轍'], ['复辟', '復辟', '復辟'], ['复电', '復電', '復電'], ['重复', '重複', '重複'], ['单复', '單複', '単複'], ['复盐', '複鹽', '複塩'], ['复果', '複果', '複果'], ['复眼', '複眼', '複眼'], ['复业', '複業', '複業'], ['复玉', '複玉', '複玉'], ['复号', '複號', '複号'], ['复合', '複合', '複合'], ['复婚', '複婚', '複婚'], ['复视', '複視', '複視'], ['复式', '複式', '複式'], ['复写', '複寫', '複写'], ['复胜', '複勝', '複勝'], ['复称', '複稱', '複称'], ['复数', '複數', '複数'], ['复姓', '複姓', '複姓'], ['复成', '複成', '複成'], ['复声', '複聲', '複声'], ['复制', '複製', '複製'], ['复線', '複線', '複線'], ['复层', '複層', '複層'], ['复相', '複相', '複相'], ['复比', '複比', '複比'], ['复文', '複文', '複文'], ['复方', '複方', '複方'], ['复本', '複本', '複本'], ['连复', '連複', '連複'], ['复座', '複座', '複座'], ['复道', '複道', '複道'], ['复坐', '複坐', '複坐'], ['复子', '複子', '複子'], ['复刻', '複刻', '複刻'], ['复叶', '複葉', '複葉'], ['复利', '複利', '複利'], ['往复', '往復', '往復'], ['快复', '快復', '快復'], ['改复', '改復', '改復'], ['敬复', '敬復', '敬復'], ['严复', '嚴復', '厳復'], ['克复', '克復', '克復'], ['尙复', '尙復', '尚復'], ['拜复', '拜復', '拝復'], ['反复', '反復', '反復'], ['复缘', '復緣', '復縁'], ['复启', '復啟', '復啓'], ['复权', '復權', '復権'], ['复校', '復校', '復校'], ['复航', '復航', '復航'], ['复号', '復號', '復号'], ['复氏', '復氏', '復氏'], ['复习', '復習', '復習'], ['复讐', '復讐', '復讐'], ['复饰', '復飾', '復飾'], ['复申', '復申', '復申'], ['复水', '復水', '復水'], ['复姓', '復姓', '復姓'], ['复席', '復席', '復席'], ['复籍', '復籍', '復籍'], ['复调', '復調', '復調'], ['复党', '復黨', '復党'], ['复答', '復答', '復答'], ['复读', '復讀', '復読'], ['复日', '復日', '復日'], ['复配', '復配', '復配'], ['复氷', '復氷', '復氷'], ['复文', '復文', '復文'], ['复报', '復報', '復報'], ['复路', '復路', '復路'], ['复祚', '復祚', '復祚'], ['平复', '平復', '平復'], ['报复', '報復', '報復'], ['本复', '本復', '本復'], ['来复', '來復', '来復'], ['回复', '回復', '回復'], ['修复', '修復', '修復'], ['复唱', '復唱', '復唱'], ['复奏', '復奏', '復奏'], ['隐覆', '隱覆', '隠覆'], ['手覆', '手覆', '手覆'], ['反覆', '反覆', '反覆'], ['被覆', '被覆', '被覆'], ['覆育', '覆育', '覆育'], ['覆载', '覆載', '覆載'], ['覆车', '覆車', '覆車'], ['覆审', '覆審', '覆審'], ['覆水', '覆水', '覆水'], ['覆辙', '覆轍', '覆轍'], ['覆土', '覆土', '覆土'], ['覆没', '覆沒', '覆没'], ['覆灭', '覆滅', '覆滅'], ['覆面', '覆面', '覆面'], ['地覆', '地覆', '地覆'], ['转覆', '轉覆', '転覆'], ['覆刻', '覆刻', '覆刻'], ['覆手', '覆手', '覆手'], ['覆轮', '覆輪', '覆輪'], ['仕覆', '仕覆', '仕覆'], ['修覆', '修覆', '修覆'], ['颠覆', '顛覆', '顛覆'], ['覆钵', '覆鉢', '覆鉢'], ['覆奏', '覆奏', '覆奏'], ['覆藏', '覆藏', '覆蔵'], ['倾覆', '傾覆', '傾覆']],
    findWordKArr = exports.findWordKArr = cjkWord.map(function (r) {
  return r[0];
}),
    findWordK = exports.findWordK = new RegExp('(' + findWordKArr.join('|') + ')', 'g'),
    findWordHArr = exports.findWordHArr = cjkWord.map(function (r) {
  return r[1];
}),
    findWordH = exports.findWordH = new RegExp('(' + findWordHArr.join('|') + ')', 'g'),
    findWordNArr = exports.findWordNArr = cjkWord.map(function (r) {
  return r[2];
}),
    findWordN = exports.findWordN = new RegExp('(' + findWordNArr.join('|') + ')', 'g');

},{}],2:[function(require,module,exports){
'use strict';

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* eslint */

// 各変数を各ファイルからインポート


var _other = require('./other');

var _japanese = require('./japanese');

var _cjk = require('./cjk');

var _pinyin = require('./pinyin');

// jQueryおよびbootstrap3をセット
window.$ = require('jquery');

window.jQuery = window.$;
require('bootstrap');

$(function () {
  var _this = this;

  var $ipt = $('#text-i'),
      $opt = $('#text-o'),
      $bt = $('.bt-control');

  var histArr = [{ ipt: '', opt: '' }],
      instArr = void 0,
      lastArr = void 0,
      tmp = void 0,
      tmpFlg = false;

  Array.prototype.getArrLast = function () {
    return this[this.length - 1];
  };
  Array.prototype.arrIndex = function (r) {
    instArr = [];
    for (var i = 0; i < this.length; i += 1) {
      if (this[i].indexOf(r) !== -1) instArr.push(i);
    }
    return instArr;
  };

  var
  // 出力処理
  output = function output(iStr, oStr) {
    lastArr = histArr.getArrLast();
    if (lastArr.opt !== oStr) {
      instArr = { ipt: iStr, opt: oStr };
      histArr.push(instArr);
      $ipt.val(iStr);
      $opt.val(oStr);

      if ($('.automove').prop('checked')) {
        instArr = { ipt: $opt.val(), opt: '' };
        $ipt.val($opt.val());
        $opt.val('');
        histArr.push(instArr);
      }
      $('#lengthDisp').html('ch/li:' + $ipt.val().length + '/' + $ipt.val().split(/\n/).length + '&gt;' + $opt.val().length + '/' + $opt.val().split(/\n/).length);
    } else {
      $opt.val(oStr);
    }
    return _this;
  },
      toRoman = function toRoman(r, num) {
    return _other.romanTh[r].replace(/(.)/g, function (n) {
      return num[parseInt(n, 10)];
    });
  },
      dupDelete = function dupDelete(str) {
    return str.split('').filter(function (x, i, self) {
      return self.indexOf(x) === i;
    }).join('');
  },

  // クリップボードコピー用
  $forCopyElm = $('#forCopy'),
      copyClip = function copyClip(str) {
    $forCopyElm.val(str);
    $forCopyElm.select();
    return document.execCommand('copy');
  };

  // 部分選択用
  $ipt.on('mouseup touchend keyup', function (e) {
    var elm = e.currentTarget,
        $selDisp = $('#selDisp');

    if (elm.selectionStart === elm.selectionEnd) {
      tmpFlg = false;
      $selDisp.text('');
    } else {
      tmpFlg = true;
      tmp = { start: elm.selectionStart, end: elm.selectionEnd };
      $selDisp.text('(select:' + (tmp.end - tmp.start) + 'characters)');
    }
  });

  // 変換処理
  $bt.on('click', function (e) {
    var ival = $(e.currentTarget).val();

    var iStr = $ipt.val(),
        instArr2 = '',
        instArr3 = '',
        pathArr = [],
        instStr = '',
        instStr2 = '',
        instStr3 = '',
        instNum = 0,
        oStr = '',
        find = '',
        flg = 'g',
        hi = void 0,
        lo = void 0,
        pathStep = 0,
        beforeStr = '',
        endStr = '',
        int = void 0,
        fract = void 0,
        seisuu = '',
        shousuu = '';
    instArr = [];

    if (tmpFlg) {
      beforeStr = iStr.slice(0, tmp.start);
      endStr = iStr.slice(tmp.end);
      iStr = iStr.slice(tmp.start, tmp.end);
    }
    switch (ival) {
      /* Code/Numerals */
      // Convert Case
      case 'case-title':
        oStr = iStr.replace(/\S\S*/g, function (txt) {
          return txt[0].toUpperCase() + txt.substr(1).toLowerCase();
        });
        break;
      case 'case-upper':
        oStr = iStr.toUpperCase();
        break;
      case 'case-lower':
        oStr = iStr.toLowerCase();
        break;
      case 'case-swap':
        oStr = iStr.replace(/[a-zA-Z]/g, function (r) {
          return r[/[a-z]/g.test(r) ? 'toUpperCase' : 'toLowerCase']();
        });
        break;
      case 'case-toDouble':
        oStr = iStr.replace(/'/g, '"');
        break;
      case 'case-toSingle':
        oStr = iStr.replace(/"/g, '\'');
        break;
      case 'case-hyphenToUnder':
        oStr = iStr.replace(/(\w+)-(?=(\w+))/g, '$1_');
        break;
      case 'case-underToHyphen':
        oStr = iStr.replace(/(\w+)_(?=(\w+))/g, '$1-');
        break;
      case 'case-camelToHyphen':
        oStr = iStr.replace(/(\w+)([A-Z])(?=(\w+))/g, function (r, r1, r2) {
          return r1 + '-' + r2.toLowerCase();
        });
        break;
      case 'case-hyphenToCamel':
        oStr = iStr.replace(/(\w+)-(\w)(?=(\w+))/g, function (r, r1, r2) {
          return r1 + r2.toUpperCase();
        });
        break;
      case 'case-latinNomalize':
        oStr = iStr.replace(_other.latin, function (r) {
          var _latinVariety$filter = _other.latinVariety.filter(function (s) {
            return s[1].join('').indexOf(r) !== -1;
          });

          var _latinVariety$filter2 = _slicedToArray(_latinVariety$filter, 1);

          var _latinVariety$filter3 = _slicedToArray(_latinVariety$filter2[0], 1);

          instStr = _latinVariety$filter3[0];

          return r === r.toLowerCase() ? instStr : instStr.toUpperCase();
        }).replace(/[\u0300-\u036F]/g, '');
        break;
      // Url / Base64
      case 'url-encodeS':
        oStr = encodeURI(iStr);
        break;
      case 'url-encodeM':
        oStr = encodeURIComponent(iStr);
        break;
      case 'url-encodeL':
        oStr = escape(iStr);
        break;
      case 'url-decode':
        oStr = decodeURIComponent(unescape(iStr));
        break;
      case 'b64-encode':
        oStr = btoa(unescape(encodeURIComponent(iStr)));
        break;
      case 'b64-decode':
        oStr = decodeURIComponent(escape(atob(iStr)));
        break;
      // Unicode
      case 'uni-escape':
        oStr = escape(iStr);
        break;
      case 'uni-unescape':
        oStr = unescape(iStr);
        break;
      case 'uniH-escapeM':
        oStr = iStr.replace(/([\uD800-\uDBFF][\uDC00-\uDFFF]|\W)/gi, function (r) {
          instNum = r.codePointAt(0);
          if (instNum <= 160) {
            return r;
          } else {
            return '&#x' + instNum.toString(16) + ';';
          }
        });
        break;
      case 'uniH-escapeL':
        oStr = iStr.replace(/./gi, function (r) {
          return '&#x' + instNum.toString(16) + ';';
        });
        break;
      case 'uniH-unescape':
        instStr = iStr.replace(/\&#(x[0-9a-f]{4,5}|[0-9]{4,6});/g, function (r, r1) {
          if (r1.charAt(0) === 'x') {
            instNum = parseInt(r1.slice(1),16);
          } else {
            instNum = parseInt(r1,10);
          }
          return String.fromCodePoint(instNum);
        });
        // instStr = instStr.replace(/&#(\d{4,5});/g, function (r, r1) {
        //   return '%u' + parseInt(r1, 10).toString(16);
        // });
        // instStr = instStr.replace(/(&#\x)([\da-f]{2};)/g, function (r, r1, r2) {
        //   return r1 + '00' + r2;
        // });
        // instStr = instStr.replace(/(&#\x)([\da-f]{3};)/g, function (r, r1, r2) {
        //   return r1 + '0' + r2;
        // });
        // instStr = instStr.replace(/&#\x([\da-f]{4,5});/g, '%u$1');
        oStr = unescape(instStr);
        break;
      case 'uni-escapeForHtml':
        oStr = iStr.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
        break;
      case 'uni-utf32to16':
        oStr = iStr.replace(/(&#x|%u)([12][\da-f]{4,4})(;{0,1})/gi, function (r, r1, r2, r3) {
          instNum = parseInt(r2, 16);
          hi = Math.floor((instNum - 0x10000) / 0x400) + 0xD800;
          lo = (instNum - 0x10000) % 0x400 + 0xDC00;
          return r1 + hi.toString(16) + r3 + r1 + lo.toString(16) + r3;
        });
        break;
      case 'uni-utf16to32':
        {
          var instReg = new RegExp('(&#x|%u)(d[89a-f][0-9a-f]{2,2})(;{0,1})(&#x|%u)(d[c-f][0-9a-f]{2,2})(;{0,1})', 'gi');
          oStr = iStr.replace(instReg, function (r, r1, r2, r3, r4, r5) {
            hi = parseInt(r2, 16);
            lo = parseInt(r5, 16);
            instNum = (0x10000 + (hi - 0xD800)) * 0x400 + (lo - 0xDC00);
            return r1 + instNum.toString(16) + r3;
          });
          break;
        }
      case 'js-escape':
        instStr = iStr;
        instStr = instStr.replace(/\\/g, '\\\\');
        instStr = instStr.replace(/\n/g, '\\n').replace(/\r/g, '\\r');
        instStr = instStr.replace(/\f/g, '\\f').replace(/\v/g, '\\v');
        instStr = instStr.replace(/\t/g, '\\t');
        oStr = instStr;
        break;
      case 'js-unescape':
        instStr = iStr;
        instStr = instStr.replace(/\\t/g, '\t');
        instStr = instStr.replace(/\\f/g, '\f').replace(/\\v/g, '\v');
        instStr = instStr.replace(/\\n/g, '\n').replace(/\\r/g, '\r');
        instStr = instStr.replace(/\\\\/g, '\\');
        oStr = instStr;
        break;
      // Numeric 1
      case 'num-10_2':
        oStr = iStr.replace(/([\d.]+)/g, function (n) {
          return parseInt(n, 10).toString(2);
        });
        break;
      case 'num-2_10':
        oStr = iStr.replace(/([01]+)/g, function (n) {
          return parseInt(n, 2).toString(10);
        });
        break;
      case 'num-10_16':
        oStr = iStr.replace(/([\d.]+)/g, function (n) {
          return parseInt(n, 10).toString(16);
        });
        break;
      case 'num-16_10':
        oStr = iStr.replace(/([\da-f]+)/g, function (n) {
          return parseInt(n, 16).toString(10);
        });
        break;
      case 'num-2_16':
        oStr = iStr.replace(/([01]+)/g, function (n) {
          return parseInt(n, 2).toString(16);
        });
        break;
      case 'num-16_2':
        oStr = iStr.replace(/([\da-f]+)/g, function (n) {
          return parseInt(n, 16).toString(2);
        });
        break;
      case 'num-comma':
        oStr = iStr.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,');
        break;
      case 'num-decomma':
        oStr = iStr.replace(/([\d,]+)/g, function (n) {
          return n.replace(/,/g, '');
        });
        break;
      case 'num-abs':
        oStr = iStr.replace(/([-+]?\d+.\d+|[-+]?\d)/g, function (n) {
          return Math.abs(parseFloat(n, 10));
        });
        break;
      case 'num-int':
        oStr = iStr.replace(/([-+]?\d+.\d+|[-+]?\d)/g, function (n) {
          return parseInt(n, 10);
        });
        break;
      case 'num-round':
        oStr = iStr.replace(/([-+]?\d+.\d+|[-+]?\d)/g, function (n) {
          return Math.round(parseFloat(n, 10));
        });
        break;
      case 'num-floor':
        oStr = iStr.replace(/([-+]?\d+.\d+|[-+]?\d)/g, function (n) {
          return Math.floor(parseFloat(n, 10));
        });
        break;
      case 'num-ceil':
        oStr = iStr.replace(/([-+]?\d+.\d+|[-+]?\d)/g, function (n) {
          return Math.ceil(parseFloat(n, 10));
        });
        break;
      /* StrControl */
      // Extract
      case 'extract':
        flg = 'gu';
        instStr = '[';
        $('.extract_reg:checked').each(function () {
          instStr += $(this).val();
        });
        instStr += ']';
        instStr = instStr.replace(/\[/g, '[^');
        find = new RegExp(instStr, flg);
        oStr = iStr.replace(find, '');
        break;
      case 'exclude':
        flg = 'gu';
        instStr = '[';
        $('.extract_reg:checked').each(function () {
          instStr += $(this).val();
        });
        instStr += ']';
        find = new RegExp(instStr, flg);
        oStr = iStr.replace(find, '');
        break;
      // Exclusion
      case 'newline':
        oStr = iStr.replace(/[\r\n]/g, '');
        break;
      case 'html':
        oStr = iStr.replace(/<[^>]*?>/g, '');
        break;
      case 'space':
        oStr = iStr.replace(/[\t 　]+/gm, ' ');
        oStr = oStr.replace(/^[\t 　]/gm, '');
        oStr = oStr.replace(/[\t 　]\n/gm, '\n');
        break;
      case 'margin':
        oStr = iStr.replace(/\r\n/g, '\n');
        oStr = oStr.replace(/^[\t 　]+$/gm, '');
        oStr = oStr.replace(/\n(?=\n)/g, '');
        oStr = oStr.replace(/^\n/g, '');
        break;
      case 'ex_dup1':
        instArr = iStr.split('');
        instArr = instArr.filter(function (x, i, self) {
          return (/\s/.test(x) || self.indexOf(x) === i
          );
        });
        oStr = instArr.join('');
        break;
      case 'ex_dup2':
        instArr = iStr.replace(/\r\n/g, '\n').split(/\n/);
        instArr = instArr.filter(function (x, i, self) {
          return self.indexOf(x) === i;
        });
        oStr = instArr.join('\n');
        break;
      case 'ex_dup3':
        instStr = iStr.replace(/\r\n/g, '\n');
        instArr = instStr.replace(/(\S+|\s+)/g, '$1|-|-|').split('|-|-|');
        instArr = instArr.filter(function (x, i, self) {
          return (/\s+/.test(x) || self.indexOf(x) === i
          );
        });
        oStr = instArr.join('');
        break;
      // Reverse/Sort
      case 'rev-chara':
        for (var i = iStr.length - 1; i >= 0; i -= 1) {
          instStr += iStr.charAt(i);
        }oStr = instStr;
        break;
      case 'rev-line':
        instArr = iStr.replace(/\r\n/g, '\n').split(/\n/);
        for (var _i = instArr.length - 1; _i >= 0; _i -= 1) {
          instStr += instArr[_i] + '\n';
        }oStr = instStr;
        break;
      case 'rev-line2':
        instArr = iStr.replace(/\r\n/g, '\n').split(/\n/);
        for (var _i2 = 0; _i2 < instArr.length; _i2 += 1) {
          instStr += instArr[_i2].split('').reverse().join('') + '\n';
        }
        oStr = instStr;
        break;
      case 'rev-word':
        instArr = iStr.replace(/\r\n/g, '\n').replace(/(\s)/g, '||||$1||||').split('||||');
        for (var _i3 = instArr.length - 1; _i3 >= 0; _i3 -= 1) {
          instStr += instArr[_i3];
        }oStr = instStr;
        break;
      case 'sort1':
        instArr = iStr.replace(/\r\n/g, '\n').split('\n');
        oStr = instArr.sort(function (a, b) {
          return (a > b) - (a < b);
        }).join('\n');
        break;
      case 'sort2':
        instArr = iStr.replace(/\r\n/g, '\n').split('\n');
        oStr = instArr.sort(function (a, b) {
          return (a < b) - (a > b);
        }).join('\n');
        break;
      case 'sort3':
        instArr = iStr.replace(/\r\n/g, '\n').split('');
        oStr = instArr.sort(function (a, b) {
          return (a > b) - (a < b);
        }).join('');
        break;
      case 'sort4':
        instArr = iStr.replace(/\r\n/g, '\n').split('');
        oStr = instArr.sort(function (a, b) {
          return (a < b) - (a > b);
        }).join('');
        break;
      case 'sort5':
        instArr = iStr.replace(/\r\n/g, '\n').split('\n');
        oStr = instArr.sort(function (a, b) {
          return (a.length > b.length) - (a.length < b.length);
        }).join('\n');
        break;
      case 'sort6':
        instArr = iStr.replace(/\r\n/g, '\n').split('\n');
        oStr = instArr.sort(function (a, b) {
          return (a.length < b.length) - (a.length > b.length);
        }).join('\n');
        break;
      // Duplication/matrix-change
      case 'dup1':
        oStr = iStr.split('').filter(function (x, i, self) {
          return self.indexOf(x) === i;
        }).join('');
        break;
      case 'dup2':
        oStr = iStr.split('').filter(function (x, i, self) {
          return self.indexOf(x) !== self.lastIndexOf(x);
        }).join('');
        break;
      case 'dup3':
        oStr = iStr.split('').filter(function (x, i, self) {
          return self.indexOf(x) === self.lastIndexOf(x);
        }).join('');
        break;
      case 'dup4':
        oStr = iStr.split('').filter(function (x, i, self) {
          return self.indexOf(x) === i && i !== self.lastIndexOf(x);
        }).join('');
        break;
      case 'matrix-change':
        {
          var trans = function trans(a) {
            return Object.keys(a[0]).map(function (c) {
              return a.map(function (r) {
                return r[c];
              });
            });
          };
          instArr = iStr.replace(/\r\n/g, '\n').split('\n');
          var splitter = $('.matrix:checked').val().replace('\\t', '\t').replace('\\,', ',');
          instArr2 = [];
          instArr = instArr.map(function (r) {
            return r.split(new RegExp(splitter, 'g'));
          });
          instStr = trans(instArr).map(function (r) {
            return r.join(splitter);
          }).join('\n');
          oStr = instStr;
          break;
        }
      // Tidy
      case 'tidy':
        {
          var tdAm = parseInt($('#td_amount').val(), 10),
              tdReg = new RegExp('(.{' + tdAm + ',' + tdAm + '})', 'g');
          instStr = iStr.replace(/[\n\r]/g, '');
          instStr = instStr.replace(tdReg, '$1\n');
          oStr = instStr;
          break;
        }
      case 'tidy2':
        {
          var td2Reg = $('#td2_reg').val().replace(/\\\\/g, '\\'),
              td2Reg2 = new RegExp('(.)(' + td2Reg + ')', 'g');
          instStr = iStr.replace(/[\n\r]/g, '');
          instStr = instStr.replace(td2Reg2, '$1\n$2');
          oStr = instStr;
          break;
        }
      case 'tidy3':
        {
          var td3Cb = Object.values($('.tidy3_cb').filter(':checked').map(function (index, elm) {
            return $(elm).val();
          }).get()).join(''),
              td3Cb1 = td3Cb.replace(/[「（]/g, ''),
              td3Cb2 = td3Cb.replace(/[^「（]/g, ''),
              td3Reg1 = new RegExp('([' + td3Cb1 + '])', 'g');
          instStr = iStr.replace(/[\n\r]/g, '');
          instStr = instStr.replace(td3Reg1, '$1\n');
          if (td3Cb2 !== '') {
            var td3Reg2 = new RegExp('([' + td3Cb2 + '])', 'g');
            instStr = instStr.replace(td3Reg2, '\n$1');
            instStr = instStr.replace(/([。、.,])(\n)([」）])/g, '$1$3');
            instStr = instStr.replace(/([。、.,])(\n\n)([「（])/g, '$1\n$3');
          }
          oStr = instStr;
          break;
        }
      case 'tree':
        {
          instArr = iStr.replace(/\r/g, '').split(/\n/g).map(function (n) {
            return n.split(/\//g);
          });
          instArr2 = {};
          var instIstr = void 0;
          for (var _i4 = 0; _i4 < instArr.length; _i4 += 1) {
            instIstr = instArr[_i4];
            if (instIstr.join('/').slice(-1) !== '/') {
              for (var j = 0; j < instIstr.length; j += 1) {
                if (!j) {
                  if (!(instIstr[j] in instArr2)) instArr2[instIstr[j]] = {};
                  pathArr = instArr2[instIstr[j]];
                } else {
                  if (!(instIstr[j] in pathArr)) pathArr[instIstr[j]] = {};
                  pathArr = pathArr[instIstr[j]];
                }
              }
            }
          }
          instStr = JSON.stringify(instArr2, null, '\t');
          instStr = instStr.replace(/(: [[{])$/gm, '/');
          instStr = instStr.replace(/^(\t+)"(.*?)"([/]?)([: {},[\]]*?)$/gm, '$1$2$3');
          instStr = instStr.replace(/^([\t [\]{},]+)$/gm, '');
          instStr = instStr.replace(/\n+/g, '\n').replace(/^\t/gm, '').replace(/^\n/g, '');
          oStr = instStr;
          break;
        }
      case 'path':
        instArr = iStr.replace(/\r/g, '').split(/\n/g);
        instArr2 = instArr.map(function (n) {
          return n.split(/\t/g).length - 1;
        });
        instArr = instArr.map(function (n) {
          return n.replace(/\t/g, '');
        });
        for (var _i5 = 0; _i5 < instArr.length; _i5 += 1) {
          if (instArr[_i5].slice(-1) === '/') {
            var _instArr$_i5$split = instArr[_i5].split('/');

            var _instArr$_i5$split2 = _slicedToArray(_instArr$_i5$split, 1);

            instStr3 = _instArr$_i5$split2[0];

            if (instArr2[_i5] > pathStep - 1 || pathStep === 0) {
              pathArr.push(instStr3);
            } else if (instArr2[_i5] <= pathStep - 1) {
              pathArr = pathArr.slice(0, instArr2[_i5]);
              pathArr.push(instStr3);
            }
            pathStep = pathArr.length;
          } else if (instArr[_i5] !== '') {
            instStr += pathArr.join('') + '/' + instArr[_i5] + '\n';
          }
        }
        oStr = instStr;
        break;
      case 'jsonTidy':
        {
          var jsonTab = '';
          instStr = iStr;
          instStr = instStr.replace(/(\{.+\}|\[.+\])/g, function (r) {
            instStr2 = r;
            instStr2 = instStr2.replace(/([^"])(true|false|null)([^"])/g, '$1"toStr:::$2:::/toStr"$3');
            instStr2 = instStr2.replace(/([^"\d])(-?\d+(\.\d*)?([eE][+-]?\d+)?)([^"\d])/g, '$1"toStr:::$2:::/toStr"$5');
            instStr2 = instStr2.replace(/([^"]+)($|".*?[^//]")/g, function (s, s1, s2) {
              return s1.replace(/[^{}[\]:,]/g, '').replace(/([[\]{},])/g, '$1$1$1') + s2;
            });
            instStr2 = instStr2.replace(/":([^ ])/g, '": $1');
            instStr2 = instStr2.replace(/([{[,]{3})/g, '$1\n');
            instStr2 = instStr2.replace(/([}\]]{3})/g, '\n$1');
            instArr = instStr2.split(/\n/g);
            jsonTab = 0;
            for (var _i6 = 0; _i6 < instArr.length; _i6 += 1) {
              if (/[\]}]{3}/.test(instArr[_i6])) jsonTab -= 1;
              instArr[_i6] = Array(jsonTab + 1).join('\t') + instArr[_i6];
              if (/[[{]{3}/.test(instArr[_i6])) jsonTab += 1;
            }
            instStr2 = instArr.join('\n');
            instStr2 = instStr2.replace(/([[\]{},])\1\1/g, '$1').replace(/("toStr:::|:::\/toStr")/g, '');
            return instStr2;
          });
          oStr = instStr;
          break;
        }
      // replace
      case 'replacement':
        flg = $('#caps').prop('checked') ? 'g' : 'gi';
        find = new RegExp($('#rep_find').val(), flg);
        instStr2 = $('#rep_rep').val();
        instStr2 = instStr2.replace(/\\n/g, '\n').replace(/\\t/g, '\t').replace(/\\r/g, '\r');
        oStr = iStr.replace(find, instStr2);
        break;
      // merge
      case 'merge1':
        oStr = iStr + '\n' + $opt.val();
        break;
      case 'merge2':
        {
          instArr = iStr.split(/\n/g);
          instArr2 = $opt.val().split(/\n/g);
          var mg2Length = instArr.length <= instArr2.length ? instArr2.length : instArr.length;
          for (var _i7 = 0; _i7 < mg2Length; _i7 += 1) {
            if (instArr[_i7]) instStr += instArr[_i7];
            if (instArr2[_i7]) instStr += instArr2[_i7];
            instStr += '\n';
          }
          oStr = instStr;
          break;
        }
      case 'merge3':
        {
          instArr = iStr.split('');
          instArr2 = $opt.val().split('');
          var mg3Length = instArr.length <= instArr2.length ? instArr2.length : instArr.length;
          for (var _i8 = 0; _i8 < mg3Length; _i8 += 1) {
            if (instArr[_i8]) instStr += instArr[_i8];
            if (instArr2[_i8]) instStr += instArr2[_i8];
          }
          oStr = instStr;
          break;
        }
      case 'merge4':
        instArr = $ipt.val().split('');
        instArr2 = $opt.val().split('');
        instArr3 = [];
        for (var _i9 = 0; _i9 < instArr.length; _i9 += 1) {
          for (var _j = 0; _j < instArr2.length; _j += 1) {
            if (instArr[_i9] === instArr2[_j]) {
              instArr3.push(instArr[_i9]);
              break;
            }
          }
        }
        instArr = instArr.filter(function (r) {
          return instArr3.indexOf(r) === -1;
        });
        instArr2 = instArr2.filter(function (r) {
          return instArr3.indexOf(r) === -1;
        });
        iStr = instArr.join('');
        oStr = instArr2.join('');
        break;
      /* Language */
      // Numeric 2
      case 'num-toJpL':
        oStr = iStr.replace(/([\d,.]+)/g, function (n) {
          instNum = n.replace(/,/g, '');
          instNum.match(/(\d+)(?:\.(\d+))?/i);
          int = RegExp.$1;
          fract = RegExp.$2;
          seisuu = '';
          for (var _i10 = int.length - 1; _i10 >= 0; _i10 -= 1) {
            seisuu += _other.zero2nine[parseInt(int[int.length - _i10 - 1], 10)];
            if (_i10 % 4 === 0) {
              seisuu += _other.suffices[Math.floor(_i10 / 4)];
            } else {
              seisuu += _other.ten2thou[_i10 % 4];
            }
          }
          seisuu = seisuu.replace(/〇[十百千]/g, '');
          seisuu = seisuu.replace(/一([十百千])/g, '$1');
          seisuu = seisuu.replace(/〇/g, '');
          seisuu = seisuu.replace(/([万億兆京垓穣溝澗正載極]|禾予|恒河沙|阿僧祇|那由他|不可思議|無量大数)([万億兆京垓穣溝澗正載極]|禾予|恒河沙|阿僧祇|那由他|不可思議|無量大数)/g, '$1');
          seisuu = seisuu.replace('禾予', '%uD855%uDF71');
          seisuu = unescape(seisuu);
          if (seisuu === '') seisuu = _other.zero;
          if (fract) shousuu = _other.point + fract.replace(/(.)/g, function (r) {
            return _other.zero2nine[parseInt(r, 10)];
          });
          return seisuu + shousuu;
        });
        break;
      case 'num-toJpM':
        oStr = iStr.replace(/([\d,.]+)/g, function (n) {
          instStr = n.replace(/(\d)/g, function (r) {
            return _other.zero2nine[parseInt(r, 10)];
          });
          return instStr.replace(',', '').replace('.', '点');
        });
        break;
      case 'num-toArabic':
        {
          var kTen1 = new RegExp('(([\u96F6\u70B9\u3007\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u5341\u767E\u5343\u4E07\u5104\u5146\u4EAC\u5793\u7A63\u6E9D\u6F97\u6B63\u8F09\u6975]|\uD855\uDF71|\u6052\u6CB3\u6C99|\u963F\u50E7\u7947|\u90A3\u7531\u4ED6|\u4E0D\u53EF\u601D\u8B70|\u7121\u91CF\u5927\u6570)+)', 'gu');
          oStr = iStr.replace(kTen1, function (r) {
            var kTen2 = new RegExp('(\uD855\uDF71|\u25771)', 'gu');
            instStr = r.replace(kTen2, '禾予');

            var _instStr$split = instStr.split('点');

            var _instStr$split2 = _slicedToArray(_instStr$split, 2);

            int = _instStr$split2[0];
            fract = _instStr$split2[1];

            var nowKeta = void 0;
            if (int === '零') {
              seisuu = '0';
            } else {
              instArr = int.split(/([万億兆京垓穣溝澗正載極]|禾予|恒河沙|阿僧祇|那由他|不可思議|無量大数)/);
              for (var _i11 = 0; _i11 < instArr.length; _i11 += 1) {
                if (instArr[_i11].match(/([万億兆京垓穣溝澗正載極]|禾予|恒河沙|阿僧祇|那由他|不可思議|無量大数)/) !== null) {
                  nowKeta = _other.suffices.indexOf(RegExp.$1);
                  if (instArr[_i11 + 2] !== _other.suffices[nowKeta - 1] && nowKeta > 1) instArr.splice(_i11 + 1, 0, '〇千〇百〇十〇', _other.suffices[nowKeta - 1]);
                } else {
                  instArr[_i11] = instArr[_i11].replace(/([十百千]|^)([十百千])/g, '$1一$2');
                  if (instArr[_i11].indexOf('千') === -1) instArr[_i11] = '\u3007\u5343' + instArr[_i11];
                  if (instArr[_i11].indexOf('百') === -1) instArr[_i11] = instArr[_i11].slice(0, 2) + '\u3007\u767E' + instArr[_i11].slice(2, instArr[_i11].length);
                  if (instArr[_i11].indexOf('十') === -1) instArr[_i11] = instArr[_i11].slice(0, 4) + '\u3007\u5341' + instArr[_i11].slice(4, instArr[_i11].length);
                  if (instArr[_i11].charAt(instArr[_i11].length - 1) === '十') instArr[_i11] = instArr[_i11] + '\u3007';
                }
              }
              seisuu = instArr.join('').replace(/([十百千万億兆京垓穣禾予溝澗正載極恒河沙阿僧祇那由他不可思議無量大数])/g, '');
              seisuu = seisuu.replace(/(.)/g, function (n) {
                return _other.zero2nine.indexOf(n);
              });
              seisuu = seisuu.replace(/^0+/g, '');
            }
            if (fract) shousuu += '.' + fract.replace(/(.)/g, function (n) {
              return _other.zero2nine.indexOf(n);
            });
            return seisuu + shousuu;
          });
          break;
        }
      case 'num-arabicToRoman':
        oStr = iStr.replace(/(\d[\d.,]+|\d+)/g, function (n) {
          instNum = parseInt(n.replace(/,/g, '').split('.')[0], 10);
          var rom = '';
          if (instNum < 1 || instNum > 399999) {
            return instNum;
          } else if (instNum > 3999 && $('.roman_class:checked').val() === 'M') {
            return instNum;
          }
          // else paragraph
          if (instNum >= 100000) {
            instStr = Math.floor(instNum / 100000);
            rom += Array(instStr + 1).join(_other.roman[5]);
            instNum -= instStr * 100000;
          }
          if (instNum >= 10000) {
            instStr = Math.floor(instNum / 10000);
            rom += toRoman(instStr - 1, _other.roman[4]);
            instNum -= instStr * 10000;
          }
          if (instNum >= 1000) {
            instStr = Math.floor(instNum / 1000);
            rom += toRoman(instStr - 1, _other.roman[3]);
            instNum -= instStr * 1000;
          }
          if (instNum >= 100) {
            instStr = Math.floor(instNum / 100);
            rom += toRoman(instStr - 1, _other.roman[2]);
            instNum -= instStr * 100;
          }
          if (instNum >= 10) {
            instStr = Math.floor(instNum / 10);
            rom += toRoman(instStr - 1, _other.roman[1]);
            instNum -= instStr * 10;
          }
          if (instNum !== 0) {
            rom += toRoman(instNum - 1, _other.roman[0]);
          }
          var romanConv = new RegExp('[' + _other.romanStrBase.join('') + ']', 'g');
          if ($('.roman_class:checked').val() === 'C1') {
            rom = rom.replace(romanConv, function (r) {
              return _other.romanStr1[_other.romanStrBase.indexOf(r)];
            });
          } else if ($('.roman_class:checked').val() === 'C2') {
            rom = rom.replace(romanConv, function (r) {
              return _other.romanStr2[_other.romanStrBase.indexOf(r)];
            });
          }
          return rom;
        });
        break;
      case 'num-romanToArabic':
        oStr = iStr.replace(_other.findR, function (n) {
          instStr = n.replace(/[ↀↁↂↇↈ]/g, function (s) {
            return _other.romanStrBase[_other.romanStr1.indexOf(s)];
          });
          instNum = 0;
          instStr = instStr.replace(_other.findR2, function (r) {
            var unir = ('000' + r.charCodeAt().toString(16)).slice(-4);
            return _other.romanUni[_other.findR2Arr.indexOf(unir)][1];
          });
          instStr = instStr.replace(/CCCIↃↃↃ/g, 'Z').replace(/IↃↃↃ/g, 'F').replace(/CCIↃↃ/g, 'W').replace(/IↃↃ/g, 'P').replace(/CIↃ/g, 'M');
          instStr = instStr.replace(/^Z+/g, function (r) {
            instNum += r.length * 100000;
            return '';
          });
          instStr = instStr.replace(/^[WFZ]+/g, function (r) {
            instStr2 = r.replace(/W/g, '0').replace(/F/g, '1').replace(/Z/g, '2');
            instNum += (_other.romanTh.indexOf(instStr2) + 1) * 10000;
            return '';
          });
          instStr = instStr.replace(/^[MPW]+/g, function (r) {
            instStr2 = r.replace(/M/g, '0').replace(/P/g, '1').replace(/W/g, '2');
            instNum += (_other.romanTh.indexOf(instStr2) + 1) * 1000;
            return '';
          });
          instStr = instStr.replace(/^[CDM]+/g, function (r) {
            instStr2 = r.replace(/C/g, '0').replace(/D/g, '1').replace(/M/g, '2');
            instNum += (_other.romanTh.indexOf(instStr2) + 1) * 100;
            return '';
          });
          instStr = instStr.replace(/^[XLC]+/g, function (r) {
            instStr2 = r.replace(/X/g, '0').replace(/L/g, '1').replace(/C/g, '2');
            instNum += (_other.romanTh.indexOf(instStr2) + 1) * 10;
            return '';
          });
          instStr = instStr.replace(/^[IVX]+/g, function (r) {
            instStr2 = r.replace(/I/g, '0').replace(/V/g, '1').replace(/X/g, '2');
            instNum += _other.romanTh.indexOf(instStr2) + 1;
            return '';
          });
          return instNum;
        });
        break;
      // Jpn Characters
      case 'zhKana2zkKana':
        oStr = iStr.replace(/[\u3041-\u3096]/g, function (r) {
          return String.fromCharCode(r.charCodeAt(0) + 0x60);
        });
        break;
      case 'zkKana2zhKana':
        oStr = iStr.replace(/[\u30a1-\u30f6]/g, function (r) {
          return String.fromCharCode(r.charCodeAt(0) - 0x60);
        });
        break;
      case 'hkKana2zkKana':
        oStr = iStr.replace(_japanese.kana1, function (r) {
          return _japanese.kanaMap[_japanese.kana1arr.indexOf(r)][1];
        }).replace(/ﾞ/g, '゛').replace(/ﾟ/g, '゜');
        break;
      case 'zkKana2hkKana':
        oStr = iStr.replace(_japanese.kana2, function (r) {
          return _japanese.kanaMap[_japanese.kana2arr.indexOf(r)][0];
        });
        break;
      case 'hLatinNum2zLatinNum':
        oStr = iStr.replace(_japanese.alpha1, function (r) {
          return _japanese.kanaAlpha[_japanese.alpha1arr.indexOf(r)][1];
        }).replace(/ﾞ/g, '゛').replace(/ﾟ/g, '゜');
        break;
      case 'zLatinNum2hLatinNum':
        oStr = iStr.replace(_japanese.alpha2, function (r) {
          return _japanese.kanaAlpha[_japanese.alpha2arr.indexOf(r)][0];
        });
        break;
      case 'jpNew2OldM':
        instStr = iStr.replace(_japanese.cjk1, function (r) {
          return _japanese.shin2kyu[_japanese.cjk1arr.indexOf(r)][1];
        });
        oStr = instStr;
        break;
      case 'jpNew2OldL':
        instStr = iStr.replace(_japanese.cjk1, function (r) {
          return _japanese.shin2kyu[_japanese.cjk1arr.indexOf(r)][1];
        });
        instStr = instStr.replace(_japanese.shinSp1, function (r) {
          return unescape(_japanese.shinSpBase[_japanese.shinSp1arr.indexOf(r)][1]);
        });
        oStr = instStr;
        break;
      case 'jpOld2New':
        instStr = iStr.replace(_japanese.cjk2, function (r) {
          return _japanese.shin2kyu[_japanese.cjk2arr.indexOf(r)][0];
        });
        instStr = instStr.replace(_japanese.cjk1add, function (r) {
          return _japanese.kyu2shinAdd[_japanese.cjk1addArr.indexOf(r)][1];
        });
        instStr = escape(instStr).replace(/(%uFE00|%uDB40%uDD[01][0-9a-fA-F])/g, '');
        oStr = unescape(instStr);
        break;
      case 'jpKansu2Daiji':
        oStr = iStr.replace(_japanese.findDK, function (r) {
          return _japanese.daizi.dai[_japanese.daizi.kan.indexOf(r)];
        });
        break;
      case 'jpDaiji2Kansu':
        oStr = iStr.replace(_japanese.findDD, function (r) {
          return _japanese.daizi.kan[_japanese.daizi.dai.indexOf(r)];
        });
        break;
      case 'zkKana2Kunre':
        instStr = iStr.replace(/ン([ヤユヨアイウエオ])/g, 'ン\'$1');
        instStr = instStr.replace(_japanese.kun1, function (r) {
          return _japanese.kunre[_japanese.kun1arr.indexOf(r)][1];
        });
        instStr = instStr.replace(/ッ([kstnhmyrgzjpbd])/g, '$1$1').replace(/ッ/g, '\'');
        instStr = instStr.replace(/o[uo]/g, 'ô').replace(/uu/g, 'û').replace(/ii/g, 'î');
        instStr = instStr.replace(/([aiueo])ー/g, function (r, r1) {
          return 'âîûêô'['aiueo'.indexOf(r1)];
        });
        oStr = instStr;
        break;
      case 'zkKana2Hebon':
        instStr = iStr.replace(/ン([ヤユヨアイウエオ])/g, 'ン\'$1');
        instStr = instStr.replace(_japanese.heb1, function (r) {
          return _japanese.hebon[_japanese.heb1arr.indexOf(r)][1];
        });
        instStr = instStr.replace(/n([bmp])/g, 'm$1');
        instStr = instStr.replace(/ッch/g, 'tch').replace(/ッ([kstnhmyrgzjpbd])/g, '$1$1').replace(/ッ/g, '\'');
        instStr = instStr.replace(/ー/g, '').replace(/o[uo]/g, 'o').replace(/uu/g, 'u').replace(/ii/g, 'i');
        oStr = instStr;
        break;
      case 'hebon2zkKana':
        instStr = iStr.replace(/[nm]([^aiueoyw])/g, 'ン$1');
        instStr = iStr.replace(/([kstnhmyrgzjpbd])\1/g, 'ッ$1');
        instStr = instStr.replace(_japanese.kanaromaReg, function (r) {
          return _japanese.kanaroma[_japanese.kanaromaArr.indexOf(r)][1];
        });
        oStr = instStr;
        break;
      // CJK Characters
      case 'kanji2Kantai':
        oStr = iStr.replace(_cjk.findWordN, function (r) {
          return escape(_cjk.cjkWord[_cjk.findWordNArr.indexOf(r)][0]);
        });
        oStr = oStr.replace(_cjk.findN, function (r) {
          instArr = _cjk.findNArr.arrIndex(r);
          if (instArr.length === 1) {
            if (_cjk.findKArr[instArr[0]].length === 1) {
              instStr = _cjk.findKArr[instArr[0]];
            } else {
              instStr = '(' + dupDelete(_cjk.findKArr[instArr[0]]).split('').join('|') + ')';
            }
          } else {
            instStr2 = '';
            for (var _i12 = 0; _i12 < instArr.length; _i12 += 1) {
              instStr2 += _cjk.findKArr[instArr[_i12]];
            }
            instStr2 = dupDelete(instStr2);
            if (instStr2.length > 1) instStr = '(' + instStr2.split('').join('|') + ')';
          }
          return instStr;
        });
        oStr = unescape(oStr);
        break;
      case 'kanji2Hantai':
        oStr = iStr.replace(_cjk.findWordN, function (r) {
          return escape(_cjk.cjkWord[_cjk.findWordNArr.indexOf(r)][1]);
        });
        oStr = oStr.replace(_cjk.findN, function (r) {
          instArr = _cjk.findNArr.arrIndex(r);
          if (instArr.length === 1) {
            if (_cjk.findHArr[instArr[0]].length === 1) {
              instStr = _cjk.findHArr[instArr[0]];
            } else {
              instStr = '(' + dupDelete(_cjk.findHArr[instArr[0]]).split('').join('|') + ')';
            }
          } else {
            instStr2 = '';
            for (var _i13 = 0; _i13 < instArr.length; _i13 += 1) {
              instStr2 += _cjk.findHArr[instArr[_i13]];
            }
            instStr2 = dupDelete(instStr2);
            if (instStr2.length > 1) instStr = '(' + instStr2.split('').join('|') + ')';
          }
          return instStr;
        });
        oStr = unescape(oStr);
        break;
      case 'kantai2Kanji':
        oStr = iStr.replace(_cjk.findWordK, function (r) {
          return escape(_cjk.cjkWord[_cjk.findWordKArr.indexOf(r)][2]);
        });
        oStr = oStr.replace(_cjk.findK, function (r) {
          instArr = _cjk.findKArr.arrIndex(r);
          if (instArr.length === 1) {
            if (_cjk.findNArr[instArr[0]].length === 1) {
              instStr = _cjk.findNArr[instArr[0]];
            } else {
              instStr = '(' + dupDelete(_cjk.findNArr[instArr[0]]).split('').join('|') + ')';
            }
          } else {
            instStr2 = '';
            for (var _i14 = 0; _i14 < instArr.length; _i14 += 1) {
              instStr2 += _cjk.findNArr[instArr[_i14]];
            }
            instStr2 = dupDelete(instStr2);
            if (instStr2.length > 1) instStr = '(' + instStr2.split('').join('|') + ')';
          }
          return instStr;
        });
        oStr = unescape(oStr);
        break;
      case 'hantai2Kanji':
        oStr = iStr.replace(_cjk.findWordH, function (r) {
          return escape(_cjk.cjkWord[_cjk.findWordHArr.indexOf(r)][2]);
        });
        oStr = oStr.replace(_cjk.findH, function (r) {
          instArr = _cjk.findHArr.arrIndex(r);
          if (instArr.length === 1) {
            if (_cjk.findNArr[instArr[0]].length === 1) {
              instStr = _cjk.findNArr[instArr[0]];
            } else {
              instStr = '(' + dupDelete(_cjk.findNArr[instArr[0]]).split('').join('|') + ')';
            }
          } else {
            instStr2 = '';
            for (var _i15 = 0; _i15 < instArr.length; _i15 += 1) {
              instStr2 += _cjk.findNArr[instArr[_i15]];
            }
            instStr2 = dupDelete(instStr2);
            if (instStr2.length > 1) instStr = '(' + instStr2.split('').join('|') + ')';
          }
          return instStr;
        });
        oStr = unescape(oStr);
        break;
      case 'kantai2Hantai':
        oStr = iStr.replace(_cjk.findWordK, function (r) {
          return escape(_cjk.cjkWord[_cjk.findWordKArr.indexOf(r)][1]);
        });
        oStr = oStr.replace(_cjk.findK, function (r) {
          instArr = _cjk.findKArr.arrIndex(r);
          if (instArr.length === 1) {
            if (_cjk.findHArr[instArr[0]].length === 1) {
              instStr = _cjk.findHArr[instArr[0]];
            } else {
              instStr = '(' + dupDelete(_cjk.findHArr[instArr[0]]).split('').join('|') + ')';
            }
          } else {
            instStr2 = '';
            for (var _i16 = 0; _i16 < instArr.length; _i16 += 1) {
              instStr2 += _cjk.findHArr[instArr[_i16]];
            }
            instStr2 = dupDelete(instStr2);
            if (instStr2.length > 1) instStr = '(' + instStr2.split('').join('|') + ')';
          }
          return instStr;
        });
        oStr = unescape(oStr);
        break;
      case 'hantai2Kantai':
        oStr = iStr.replace(_cjk.findWordH, function (r) {
          return escape(_cjk.cjkWord[_cjk.findWordHArr.indexOf(r)][1]);
        });
        oStr = oStr.replace(_cjk.findH, function (r) {
          instArr = _cjk.findHArr.arrIndex(r);
          if (instArr.length === 1) {
            if (_cjk.findKArr[instArr[0]].length === 1) {
              instStr = _cjk.findKArr[instArr[0]];
            } else {
              instStr = '(' + dupDelete(_cjk.findKArr[instArr[0]]).split('').join('|') + ')';
            }
          } else {
            instStr2 = '';
            for (var _i17 = 0; _i17 < instArr.length; _i17 += 1) {
              instStr2 += _cjk.findKArr[instArr[_i17]];
            }
            instStr2 = dupDelete(instStr2);
            if (instStr2.length > 1) instStr = '(' + instStr2.split('').join('|') + ')';
          }
          return instStr;
        });
        oStr = unescape(oStr);
        break;
      case 'addPinyin':
        instStr = escape(iStr).replace(_pinyin.pin, function (r, r1) {
          return r1 in _pinyin.pinyin ? r + '[' + _pinyin.pinyin[r1] + ']' : r;
        });
        oStr = unescape(instStr);
        break;
      case 'addPinyin2':
        instStr = escape(iStr).replace(_pinyin.pin, function (r, r1) {
          return r1 in _pinyin.pinyin ? _pinyin.pinyin[r1] + ' ' : r;
        });
        oStr = unescape(instStr);
        break;
      // skt
      case 'sktDev2HK':
        oStr = iStr.replace(_other.sktS, function (r) {
          instStr = r.replace(_other.sktAddA, '$1a');
          instStr = instStr.replace(_other.sktS2, function (s) {
            var _sanskrit$filter = _other.sanskrit.filter(function (t) {
              return t[2].indexOf(s) !== -1;
            });

            var _sanskrit$filter2 = _slicedToArray(_sanskrit$filter, 1);

            var _sanskrit$filter2$ = _slicedToArray(_sanskrit$filter2[0], 1);

            var _sanskrit$filter2$$ = _slicedToArray(_sanskrit$filter2$[0], 1);

            instStr2 = _sanskrit$filter2$$[0];

            return instStr2;
          });
          instStr = instStr.replace(/-/g, '');
          return instStr;
        });
        break;
      case 'sktDev2IAST':
        oStr = iStr.replace(_other.sktS, function (r) {
          instStr = r.replace(_other.sktAddA, '$1a');
          instStr = instStr.replace(_other.sktS2, function (s) {
            var _sanskrit$filter3 = _other.sanskrit.filter(function (t) {
              return t[2].indexOf(s) !== -1;
            });

            var _sanskrit$filter4 = _slicedToArray(_sanskrit$filter3, 1);

            var _sanskrit$filter4$ = _slicedToArray(_sanskrit$filter4[0], 2);

            var _sanskrit$filter4$$ = _slicedToArray(_sanskrit$filter4$[1], 1);

            instStr2 = _sanskrit$filter4$$[0];

            return instStr2;
          });
          instStr = instStr.replace(/-/g, '');
          return instStr;
        });
        break;
      case 'sktHK2Dev':
        oStr = iStr.replace(_other.sktH, function (r) {
          flg = true;
          instStr = r.replace(_other.sktH2, function (s) {
            var _sanskrit$filter5 = _other.sanskrit.filter(function (t) {
              return t[0].indexOf(s) !== -1;
            });

            var _sanskrit$filter6 = _slicedToArray(_sanskrit$filter5, 1);

            var _sanskrit$filter6$ = _slicedToArray(_sanskrit$filter6[0], 3);

            instArr = _sanskrit$filter6$[2];

            instStr2 = flg && instArr.length === 2 ? instArr[1] : instArr[0];
            flg = false;
            return instStr2;
          });
          instStr = instStr.replace(_other.sktAddVirama, '$1्');
          instStr = instStr.replace(_other.sktRemoveA, '$1');
          return instStr;
        });
        break;
      case 'sktHK2IAST':
        oStr = iStr.replace(_other.sktH, function (r) {
          instStr = r.replace(_other.sktH2, function (s) {
            var _sanskrit$filter7 = _other.sanskrit.filter(function (t) {
              return t[0].indexOf(s) !== -1;
            });

            var _sanskrit$filter8 = _slicedToArray(_sanskrit$filter7, 1);

            var _sanskrit$filter8$ = _slicedToArray(_sanskrit$filter8[0], 2);

            var _sanskrit$filter8$$ = _slicedToArray(_sanskrit$filter8$[1], 1);

            instStr2 = _sanskrit$filter8$$[0];

            return instStr2;
          });
          return instStr;
        });
        break;
      case 'sktIAST2Dev':
        oStr = iStr.replace(_other.sktI, function (r) {
          flg = true;
          instStr = r.toLowerCase();
          instStr = instStr.replace(_other.sktI2, function (s) {
            var _sanskrit$filter9 = _other.sanskrit.filter(function (t) {
              return t[1].indexOf(s) !== -1;
            });

            var _sanskrit$filter10 = _slicedToArray(_sanskrit$filter9, 1);

            var _sanskrit$filter10$ = _slicedToArray(_sanskrit$filter10[0], 3);

            instArr = _sanskrit$filter10$[2];

            instStr2 = flg && instArr.length === 2 ? instArr[1] : instArr[0];
            flg = false;
            return instStr2;
          });
          instStr = instStr.replace(_other.sktAddVirama, '$1्');
          instStr = instStr.replace(_other.sktRemoveA, '$1');
          return instStr;
        });
        break;
      case 'sktIAST2HK':
        oStr = iStr.replace(_other.sktI, function (r) {
          instStr = r.toLowerCase();
          instStr = instStr.replace(_other.sktI2, function (s) {
            var _sanskrit$filter11 = _other.sanskrit.filter(function (t) {
              return t[1].indexOf(s) !== -1;
            });

            var _sanskrit$filter12 = _slicedToArray(_sanskrit$filter11, 1);

            var _sanskrit$filter12$ = _slicedToArray(_sanskrit$filter12[0], 1);

            var _sanskrit$filter12$$ = _slicedToArray(_sanskrit$filter12$[0], 1);

            instStr2 = _sanskrit$filter12$$[0];

            return instStr2;
          });
          return instStr;
        });
        break;
      /* StrMakeing */
      // repeat
      case 'repeat':
        {
          var rpStr = $('#rp_string').val(),
              rpTm = parseInt($('#rp_time').val(), 10),
              rpJn = $('#rp_join').val().replace(/\\n/g, '\n'),
              rpOf = $('#rp_of').prop('checked'),
              rpReg = $('#rp_reg').val(),
              rpJnReg = new RegExp(rpJn, 'g');

          instArr2 = iStr.split(rpJnReg);
          var rpLength = rpTm <= instArr2.length ? instArr2.length : rpTm;
          rpLength = !rpOf ? instArr2.length : rpLength;
          for (var _i18 = 0; _i18 < rpLength; _i18 += 1) {
            instStr2 = '';
            if (rpTm > _i18) {
              instStr2 += '___1___' + rpStr + '___1___';
            } else {
              instStr2 += '___1______1___';
            }
            if (instArr2.length > _i18) {
              instStr2 += '___2___' + instArr2[_i18] + '___2___';
            } else {
              instStr2 += '___2______2___';
            }
            instStr2 = instStr2.replace(/___1___(.*?)___1______2___(.*?)___2___/g, rpReg);
            instStr += instStr2 + rpJn;
          }
          oStr = instStr;
          break;
        }
      // numbering
      case 'numbering':
        {
          var mxSt = parseFloat($('#mx_start').val()),
              mxEd = parseFloat($('#mx_end').val()),
              mxSp = parseFloat($('#mx_step').val()),
              mxPd = parseInt($('#mx_padding').val(), 10),
              mxJn = $('#mx_join').val().replace(/\\n/g, '\n'),
              mxReg = $('#mx_reg').val(),
              mxOf = $('#mx_of').prop('checked'),
              mxJnReg = new RegExp(mxJn, 'g'),
              pd = Array(mxPd + 1).join('0'),
              mop = 10000;
          var instM = 0;

          if (mxSt > mxEd && mxSp > 0) {
            break;
          } else if (mxSp === 0 || mxSt === mxEd) {
            break;
          } else if (mxSt < mxEd && mxSp < 0) {
            break;
          }
          instArr = [];
          instStr = '';
          instStr2 = '';
          var padZeroLength = 0,
              padZero = '';
          if (Math.abs(mxSp) % 1 !== 0) {
            padZeroLength = Math.abs(mxSp).toString().length - 2;
            padZero = Array(padZeroLength + 1).join('0');
          }
          if (mxSt < mxEd) {
            for (var _i19 = mxSt; _i19 <= mxEd; _i19 = Math.round((_i19 + mxSp) * mop, 2) / mop) {
              instArr.push(_i19);
            }
          } else {
            for (var _i20 = mxSt; _i20 >= mxEd; _i20 = Math.round((_i20 + mxSp) * mop, 2) / mop) {
              instArr.push(_i20);
            }
          }
          instArr2 = iStr.split(mxJnReg);
          var mxLengthN = instArr.length <= instArr2.length ? instArr2.length : instArr.length;
          mxLengthN = !mxOf ? instArr2.length : mxLengthN;
          for (var _j2 = 0; _j2 < mxLengthN; _j2 += 1) {
            instStr2 = '';
            if (instArr.length > _j2) {
              instStr3 = Math.floor(Math.abs(instArr[_j2]));
              if (instStr3.toString(10).length <= mxPd) {
                instStr3 = (pd + instStr3).slice(-mxPd);
              }
              if (instArr[_j2] < 0) {
                instStr3 = '-' + instStr3;
              }
              if (Math.abs(mxSp) % 1 !== 0) {
                instM = Math.round(instArr[_j2] % 1 * mop) / mop;
                instM = instM ? instM.toString(10).split('.')[1] : 0;
                instM = (instM + padZero).substr(0, padZeroLength);
                instStr3 = instStr3 + '.' + instM;
              }
              instStr2 += '___1___' + instStr3 + '___1___';
            } else {
              instStr2 += '___1______1___';
            }
            if (instArr2.length > _j2) {
              instStr2 += '___2___' + instArr2[_j2] + '___2___';
            } else {
              instStr2 += '___2______2___';
            }
            instStr2 = instStr2.replace(/___1___(.*?)___1______2___(.*?)___2___/g, mxReg);
            instStr += instStr2 + mxJn;
          }
          oStr = instStr;
          break;
        }
      // numbering16
      case 'numbering16':
        {
          var mx16St = parseInt('0x' + $('#mx16_start').val(), 16),
              mx16Ed = parseInt('0x' + $('#mx16_end').val(), 16),
              mx16Sp = parseInt('0x' + $('#mx16_step').val(), 16),
              mx16Pd = parseInt($('#mx16_padding').val(), 10),
              mx16Jn = $('#mx16_join').val().replace(/\\n/g, '\n'),
              mx16Reg = $('#mx16_reg').val(),
              mx16Of = $('#mx16_of').prop('checked'),
              mx16JnReg = new RegExp(mx16Jn, 'g'),
              pd16 = Array(mx16Pd + 1).join('0');
          if (mx16St > mx16Ed && mx16Sp > 0) {
            break;
          } else if (mx16Sp === 0 || mx16St === mx16Ed) {
            break;
          } else if (mx16St < mx16Ed && mx16Sp < 0) {
            break;
          }
          instArr = [];
          instStr = '';
          instStr2 = '';

          if (mx16St < mx16Ed) {
            for (var _i21 = mx16St; _i21 <= mx16Ed; _i21 += mx16Sp) {
              instArr.push(_i21);
            }
          } else {
            var _i22 = mx16St;
            while (_i22 >= mx16Ed) {
              instArr.push(_i22);
              _i22 += mx16Sp;
            }
          }
          instArr2 = iStr.split(mx16JnReg);
          var mxLengthN2 = instArr.length <= instArr2.length ? instArr2.length : instArr.length;
          mxLengthN2 = !mx16Of ? instArr2.length : mxLengthN2;
          for (var _j3 = 0; _j3 < mxLengthN2; _j3 += 1) {
            instStr2 = '';
            if (instArr.length > _j3) {
              instStr3 = Math.floor(Math.abs(instArr[_j3]));
              if (instStr3.toString(16).length <= mx16Pd) {
                instStr3 = (pd16 + instStr3.toString(16)).slice(-mx16Pd);
              } else {
                instStr3 = instStr3.toString(16);
              }
              if (instArr[_j3] < 0) {
                instStr3 = '-' + instStr3;
              }
              instStr2 += '___1___' + instStr3 + '___1___';
            } else {
              instStr2 += '___1______1___';
            }
            if (instArr2.length > _j3) {
              instStr2 += '___2___' + instArr2[_j3] + '___2___';
            } else {
              instStr2 += '___2______2___';
            }
            instStr2 = instStr2.replace(/___1___(.*?)___1______2___(.*?)___2___/g, mx16Reg);
            instStr += instStr2 + mx16Jn;
          }
          oStr = instStr;
          break;
        }
      // dating
      case 'dating':
        {
          var _ret = function () {
            var dtSt = new Date($('#dt_start').val()),
                dtEd = new Date($('#dt_end').val()),
                dtSp = parseInt($('#dt_step').val(), 10) * 60 * 60 * 24 * 1000,
                dtJn = $('#dt_join').val().replace(/\\n/g, '\n'),
                dtOf = $('#dt_of').prop('checked'),
                dtReg = $('#dt_reg').val(),
                dtReg2 = $('#dt_reg2').val(),
                dtJnReg = new RegExp(dtJn, 'g');
            var YYYY = void 0,
                YY = void 0,
                MM = void 0,
                M = void 0,
                DD = void 0,
                D = void 0,
                d = void 0,
                d1 = void 0,
                d2 = void 0,
                d3 = void 0,
                d4 = void 0,
                d5 = void 0,
                m1 = void 0,
                m2 = void 0,
                m3 = void 0,
                m4 = void 0,
                dateTypeAll = {};
            var dtStTime = dtSt.getTime(),
                dtEdTime = dtEd.getTime();
            instArr = [];
            if (dtSp < 0) {
              var x = dtStTime;
              while (x >= dtEdTime) {
                instArr.push(x);
                x += dtSp;
              }
            } else if (dtSp > 0) {
              for (var _x = dtStTime; _x <= dtEdTime; _x += dtSp) {
                instArr.push(_x);
              }
            }
            instArr2 = iStr.split(dtJnReg);
            var dtLengthN3 = instArr.length <= instArr2.length ? instArr2.length : instArr.length;
            dtLengthN3 = !dtOf ? instArr2.length : dtLengthN3;
            for (var _j4 = 0; _j4 < dtLengthN3; _j4 += 1) {
              instStr2 = '';
              if (instArr.length > _j4) {
                var nDate = new Date(instArr[_j4]);
                YYYY = nDate.getFullYear();
                YY = YYYY.toString(10).slice(-2);
                M = nDate.getMonth() + 1;
                MM = ('0' + M).slice(-2);
                D = nDate.getDate();
                DD = ('0' + D).slice(-2);
                d = nDate.getDay();

                var _DayArr$d = _slicedToArray(_other.DayArr[d], 5);

                d1 = _DayArr$d[0];
                d2 = _DayArr$d[1];
                d3 = _DayArr$d[2];
                d4 = _DayArr$d[3];
                d5 = _DayArr$d[4];

                var _MonthArr = _slicedToArray(_other.MonthArr[M - 1], 4);

                m1 = _MonthArr[0];
                m2 = _MonthArr[1];
                m3 = _MonthArr[2];
                m4 = _MonthArr[3];

                dateTypeAll = {
                  YYYY: YYYY,
                  YY: YY,
                  MM: MM,
                  M: M,
                  DD: DD,
                  D: D,
                  d1: d1,
                  d2: d2,
                  d3: d3,
                  d4: d4,
                  d5: d5,
                  m1: m1,
                  m2: m2,
                  m3: m3,
                  m4: m4
                };
                instStr3 = dtReg;
                var dateTypeReg = new RegExp('(' + Object.keys(dateTypeAll).join('|') + ')', 'g');
                instStr3 = instStr3.replace(dateTypeReg, function (r, r1) {
                  return dateTypeAll[r1];
                });

                instStr2 += '___1___' + instStr3 + '___1___';
              } else {
                instStr2 += '___1______1___';
              }
              if (instArr2.length > _j4) {
                instStr2 += '___2___' + instArr2[_j4] + '___2___';
              } else {
                instStr2 += '___2______2___';
              }
              instStr2 = instStr2.replace(/___1___(.*?)___1______2___(.*?)___2___/g, dtReg2);
              instStr += instStr2 + dtJn;
            }
            oStr = instStr;
            return 'break';
          }();

          if (_ret === 'break') break;
        }
      // listing
      case 'listing':
        {
          var rzType = _other.serialData[$('[name=rz_type]').val()],
              rzSp = parseInt($('#rz_step').val(), 10),
              rzAm = parseInt($('#rz_amount').val(), 10),
              rzJn = $('#rz_join').val().replace(/\\n/g, '\n'),
              rzOf = $('#rz_of').prop('checked'),
              rzReg = $('#rz_reg').val(),
              rzJnReg = new RegExp(rzJn, 'g');
          instArr = [];
          for (var _i23 = 0; _i23 < rzSp * rzAm; _i23 += rzSp) {
            instArr.push(rzType[_i23 % rzType.length]);
          }
          instArr2 = iStr.split(rzJnReg);
          var rzLength = instArr.length <= instArr2.length ? instArr2.length : instArr.length;
          rzLength = !rzOf ? instArr2.length : rzLength;
          for (var _j5 = 0; _j5 < rzLength; _j5 += 1) {
            instStr2 = '';
            if (instArr.length > _j5) {
              instStr2 += '___1___' + instArr[_j5] + '___1___';
            } else {
              instStr2 += '___1______1___';
            }
            if (instArr2.length > _j5) {
              instStr2 += '___2___' + instArr2[_j5] + '___2___';
            } else {
              instStr2 += '___2______2___';
            }
            instStr2 = instStr2.replace(/___1___(.*?)___1______2___(.*?)___2___/g, rzReg);
            instStr += instStr2 + rzJn;
          }
          oStr = instStr;
          break;
        }
      // accent
      case 'accent':
        oStr = iStr + $('#alphaDisp').text();
        $('#alphaDisp').html('');
        $('#accent').modal('hide');
        break;
      // ligature
      case 'ligature':
        oStr = iStr + $('#ligatDisp').text();
        $('#ligatDisp').html('');
        $('#ligat').modal('hide');
        break;
      // pinyin
      case 'pinyin2':
        oStr = iStr + $('#pyinDisp').text();
        $('#pyinDisp').html('');
        $('#pyin').modal('hide');
        break;
      // uni2
      case 'uni2':
        oStr = iStr + $('#uniDisp').text();
        $('#uniDisp').html('');
        $('#uni').modal('hide');
        break;
      // other
      case 'copy':
        instStr = $opt.val();
        copyClip(instStr);
        break;
      case 'move':
        iStr = $opt.val();
        oStr = '';
        break;
      case 'undo':
        if (histArr.length > 1) {
          lastArr = histArr.getArrLast();
          iStr = lastArr.ipt;
          oStr = lastArr.opt;
          $ipt.val(iStr);
          $opt.val(oStr);
          histArr.pop();
        }
        break;
      case 'delete':
        $ipt.val('');
        $opt.val('');
        histArr = [{
          ipt: '',
          opt: ''
        }];
        break;
      case 'change':
        iStr = $ipt.val();
        oStr = $opt.val();
        $ipt.val(oStr);
        $opt.val(iStr);
        break;
      default:
        break;
    }
    if (ival !== 'undo' && ival !== 'copy' && ival !== 'delete' && ival !== 'change') {
      if (tmpFlg) {
        iStr = beforeStr + iStr + endStr;
        oStr = beforeStr + oStr + endStr;
        $ipt.focus();
        $ipt.get(0).setSelectionRange(tmp.start, tmp.end);
      }
      output(iStr, oStr);
    }
  });
  output($ipt.val(), $opt.val());

  // タブ操作
  var $ctGroupRd = $('[name = ctGroupRd]'),
      $tabBtn = $('.ctLabel').children('.btn');
  $ctGroupRd.on('change', function () {
    var ival = $ctGroupRd.filter(':checked').attr('id');
    $tabBtn.addClass('btn-info').removeClass('btn-primary');
    $tabBtn.filter('[for=' + ival + ']').addClass('btn-primary').removeClass('btn-info');
  });
  if ($ctGroupRd.filter(':checked').length === 0) {
    $tabBtn.eq(0).click();
  } else {
    $ctGroupRd.change();
  }

  // ヘルプリンク
  var $helpModal = $('#help'),
      iconArr = {
    COPY: '<i class="fa fa-clipboard"></i>',
    DELETE: '<i class="glyphicon glyphicon-remove"></i>',
    UNDO: '<i class="glyphicon glyphicon-undo"></i>',
    MOVE: '<i class="glyphicon glyphicon-chevron-left"></i>',
    REPLACE: '<i class="fa fa-exchange"></i>',
    help: '<i class="fa fa-question-circle"></i>',
    settings: '<i class="glyphicon glyphicon-cog" aria-hidden="true"></i>'
  };
  var tex = void 0,
      vid = void 0;
  $('.info').find('h4').each(function (r) {
    tex = $(this).text();
    vid = 'help_' + (r + 1);
    $(this).attr({ id: vid });
    $('[data-target="' + tex + '"]').attr('data-href', vid);
  });
  $('.info').find('strong').each(function () {
    var keyText = $(this).text();
    if (keyText in iconArr) {
      $(this).html(iconArr[keyText] + ' ' + keyText);
    }
  });
  $('.linkHelp').on('click', function () {
    vid = $(this).attr('data-href');
    $helpModal.modal('show');
    $helpModal.one('shown.bs.modal', function () {
      window.location.hash = vid;
    });
  });
  $helpModal.on('click', function () {
    $helpModal.modal('hide');
  }).on('hidden.bs.modal', function () {
    window.location.hash = 'header';
  });

  // settings
  var $settings = $('#settings'),
      $pts = $('#text-i,#text-o');
  $settings.find('input').on('change', function () {
    var tName = $(this).attr('name'),
        $target = $('[name=' + tName + ']:checked'),
        tVal = $target.val();
    if (tName === 'areaHeight') {
      $pts.removeClass('s m l');
      $pts.addClass(tVal);
    } else if (tVal === 'Noto Sans') {
      $pts.css({ fontFamily: "'Noto Sans', 'Noto Sans JP'" });
    } else {
      $pts.css(tName, tVal);
    }
  });
  $settings.find('[name=font-size]').trigger('change');
  $settings.find('[name=font-family]').trigger('change');
  $settings.find('[name=areaHeight]').trigger('change');

  // IME
  var $btnAlphaGroup = $('.btn-group-alpha'),
      $btnAlphaControl = $btnAlphaGroup.find('.btn-control'),
      $btnAlpha = $btnAlphaGroup.find('.btn-alpha'),
      $alphaOpt = $('#alpha_opt'),
      $alphaDisp = $('#alphaDisp'),
      cassArr = ['toUpperCase', 'toLowerCase'];
  var alphaCase = 0,
      alphaVal = void 0;

  $btnAlphaControl.on('click', function () {
    $btnAlpha.each(function () {
      var str = $(this).val(),
          str2 = str[cassArr[alphaCase]]();
      $(this).text(str2);
      $(this).val(str2);
    });
    alphaCase = (alphaCase + 1) % 2;
  });
  $btnAlpha.on('click', function () {
    alphaVal = $(this).val();
    var alphaArr = _other.latinVariety2[alphaVal.toLowerCase()];
    alphaArr = alphaArr.map(function (n) {
      return n.charAt(alphaCase);
    });
    $alphaOpt.html('');
    for (var i = 0; i < alphaArr.length; i += 1) {
      $alphaOpt.append('<button class="btn btn-primary" type="button" value="' + alphaArr[i] + '">' + alphaArr[i] + '</button>');
    }
  });
  $alphaOpt.on('click', '.btn', function () {
    $alphaDisp.append($(this).val());
  });

  var $btnLigatGroup = $('.btn-group-ligat'),
      $btnLigat = $btnLigatGroup.find('.btn-ligat'),
      $ligatOpt = $('#ligat_opt'),
      $ligatDisp = $('#ligatDisp');
  $btnLigat.on('click', function () {
    var ligatVal = $(this).val();
    $ligatOpt.html('');
    for (var i = 0; i < _other.latinVariety3[ligatVal].length; i += 1) {
      $ligatOpt.append('<button class="btn btn-primary" type="button" value="' + _other.latinVariety3[ligatVal][i] + '">' + _other.latinVariety3[ligatVal][i] + '</button>');
    }
  });
  $ligatOpt.on('click', '.btn', function () {
    $ligatDisp.append($(this).val());
  });

  var $btnPyinGroup = $('.btn-group-pyin'),
      $btnPyin = $btnPyinGroup.find('.btn-pyin'),
      $pyinOpt = $('#pyin_opt'),
      $pyinOpt2 = $('#pyin_opt2'),
      $pyinDisp = $('#pyinDisp');
  var nowParentAlpha = '';
  $btnPyin.on('click', function () {
    var pyinVal = $(this).val();
    $pyinOpt.html('');
    nowParentAlpha = pyinVal;
    Object.keys(_pinyin.pinyin2[pyinVal]).forEach(function (r) {
      return $pyinOpt.append('<button class="btn btn-primary" type="button" value="' + r + '">' + r + '</button>');
    });
  });
  $pyinOpt.on('click', '.btn', function () {
    var pyinVal2 = $(this).val();
    var pyinStr = '';
    $pyinOpt2.html('');
    for (var i = 0; i < _pinyin.pinyin2[nowParentAlpha][pyinVal2].length; i += 1) {
      pyinStr = '&#x' + _pinyin.pinyin2[nowParentAlpha][pyinVal2][i] + ';';
      $pyinOpt2.append('<button class="btn btn-primary" type="button" value="' + pyinStr + '">' + pyinStr + '</button>');
    }
  });
  $pyinOpt2.on('click', '.btn', function () {
    $pyinDisp.append($(this).val());
  });

  var $uniSelect = $('#uniSelect'),
      $uniDisp = $('#uniDisp'),
      $uniOpt = $('#uni_opt');
  $uniSelect.on('change', function () {
    var iVal = $(this).val();
    if (iVal !== '') {
      $uniOpt.html('');
      var uniSt = parseInt('0x' + iVal.split('-')[0], 16),
          uniEd = parseInt('0x' + iVal.split('-')[1], 16);
      var uniHex = '0000',
          uniStr = '';
      for (var i = uniSt; i <= uniEd; i += 1) {
        uniHex = ('000' + i.toString(16)).slice(-4).toUpperCase();
        if (i === 0 || i % 16 === 0) {
          $uniOpt.append('<label class="btn btn-default">' + uniHex.slice(0, 2) + '<br>' + uniHex.slice(-2) + '</label>');
        }
        uniStr = '&#x' + uniHex + ';';
        $uniOpt.append('<button class="btn btn-primary" type="button" value="' + uniStr + '">' + uniStr + '</button>');
      }
    }
  });
  $uniOpt.on('click', '.btn', function () {
    $uniDisp.append($(this).val());
  });
});

},{"./cjk":1,"./japanese":3,"./other":4,"./pinyin":5,"bootstrap":6,"jquery":19}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/* eslint no-unused-vars: 0 */
var
// export const
// 新字体、旧字体の対応（基本）
shin2kyu = exports.shin2kyu = ['亜亞', '悪惡', '圧壓', '囲圍', '為爲', '医醫', '壱壹', '稲稻', '飲飮', '隠隱', '営營', '栄榮', '衛衞', '駅驛', '悦悅', '円圓', '艶艷', '塩鹽', '奥奧', '応應', '横橫', '欧歐', '殴毆', '穏穩', '仮假', '価價', '画畫', '会會', '回囘', '懐懷', '絵繪', '拡擴', '殻殼', '覚覺', '学學', '岳嶽', '楽樂', '勧勸', '巻卷', '寛寬', '歓歡', '缶罐', '観觀', '間閒', '関關', '陥陷', '巌巖', '顔顏', '帰歸', '気氣', '亀龜', '偽僞', '戯戲', '犠犧', '却卻', '糾糺', '旧舊', '拠據', '挙擧', '峡峽', '挟挾', '教敎', '狭狹', '郷鄕', '尭堯', '暁曉', '区區', '駆驅', '勲勳', '薫薰', '群羣', '径徑', '恵惠', '携攜', '渓溪', '経經', '継繼', '茎莖', '蛍螢', '軽輕', '鶏鷄', '芸藝', '欠缺', '倹儉', '剣劍', '圏圈', '検檢', '権權', '献獻', '県縣', '険險', '顕顯', '験驗', '厳嚴', '効效', '広廣', '恒恆', '鉱鑛', '号號', '国國', '黒黑', '済濟', '砕碎', '斎齋', '剤劑', '冴冱', '桜櫻', '冊册', '雑雜', '参參', '惨慘', '桟棧', '蚕蠶', '賛贊', '残殘', '糸絲', '歯齒', '児兒', '辞辭', '湿濕', '実實', '舎舍', '写寫', '釈釋', '寿壽', '収收', '従從', '渋澁', '獣獸', '縦縱', '粛肅', '処處', '緒緖', '叙敍', '奨奬', '将將', '床牀', '焼燒', '称稱', '証證', '乗乘', '剰剩', '壌壤', '嬢孃', '条條', '浄淨', '畳疊', '穣穰', '譲讓', '醸釀', '嘱囑', '触觸', '寝寢', '慎愼', '晋晉', '真眞', '刃刄', '尽盡', '図圖', '粋粹', '酔醉', '随隨', '髄髓', '数數', '枢樞', '瀬瀨', '清淸', '青靑', '声聲', '静靜', '斉齊', '跡蹟', '摂攝', '窃竊', '専專', '戦戰', '浅淺', '潜潛', '繊纖', '践踐', '銭錢', '禅禪', '曽曾', '双雙', '壮壯', '捜搜', '挿插', '争爭', '窓窗', '総總', '聡聰', '荘莊', '装裝', '騒騷', '増增', '臓臟', '蔵藏', '属屬', '続續', '堕墮', '体體', '対對', '帯帶', '滞滯', '台臺', '滝瀧', '択擇', '沢澤', '単單', '担擔', '胆膽', '団團', '弾彈', '断斷', '痴癡', '遅遲', '昼晝', '虫蟲', '鋳鑄', '庁廳', '聴聽', '勅敕', '鎮鎭', '逓遞', '鉄鐵', '転轉', '点點', '伝傳', '党黨', '盗盜', '灯燈', '当當', '闘鬪', '徳德', '独獨', '読讀', '届屆', '縄繩', '弐貳', '妊姙', '粘黏', '悩惱', '脳腦', '覇霸', '廃廢', '拝拜', '売賣', '麦麥', '発發', '髪髮', '抜拔', '蛮蠻', '秘祕', '浜濱', '瓶甁', '払拂', '仏佛', '並竝', '変變', '辺邊', '弁辨', '舗舖', '穂穗', '隷隸', '霊靈', '齢齡', '宝寶', '萌萠', '褒襃', '豊豐', '没沒', '翻飜', '槙槇', '万萬', '満滿', '黙默', '餅餠', '弥彌', '薬藥', '訳譯', '薮藪', '予豫', '余餘', '与與', '誉譽', '揺搖', '様樣', '謡謠', '遥遙', '瑶瑤', '欲慾', '来來', '頼賴', '乱亂', '覧覽', '略畧', '竜龍', '両兩', '猟獵', '緑綠', '隣鄰', '凜凛', '塁壘', '励勵', '礼禮', '恋戀', '炉爐', '労勞', '楼樓', '郎郞', '禄祿', '亘亙', '湾灣', '説說', '既旣', '呉吳', '歳歲', '産產', '彦彥', '渇渴', '併倂', '概槪', '絶絕', '躯軀', '戻戾', '妍姸', '閲閱', '虚虛', '茲玆', '飢饑', '戸戶', '掲揭', '撃擊', '屏屛', '壊壞', '累纍', '歴歷', '娯娛', '即卽', '枦櫨', '黄黃', '迸逬', '衆眾', '毎每', '凄淒', '刹剎', '温溫', '税稅', '研硏', '状狀', '噛嚙', '麺麵', '屡屢', '告吿', '歩步', '録錄', '鋭銳', '莱萊', '厘釐', '尚尙', '錬鍊', '姫姬', '陰隂', '呑吞', '徴徵', '暦曆', '厠廁', '涙淚', '痩瘦', '脱脫', '強强', '姉姊', '縁緣', '巣巢', '鎌鐮', '渉涉', '着著', '晩晚', '益益', '羽羽', '館館', '飼飼', '諸諸', '祥祥', '神神', '晴晴', '精精', '猪猪', '塚塚', '都都', '飯飯', '福福', '隆隆', '朗朗', '琢琢', '渚渚', '禎禎', '祐祐', '島嶋', '頻頻', '撹攪', '掴摑', '箪簞', '涜瀆', '侭儘', '薮藪'],
    cjk1arr = exports.cjk1arr = shin2kyu.map(function (r) {
  return r[0];
}),
    cjk1 = exports.cjk1 = new RegExp('(' + cjk1arr.join('|') + ')', 'g'),
    cjk2arr = exports.cjk2arr = shin2kyu.map(function (r) {
  return r[1];
}),
    cjk2 = exports.cjk2 = new RegExp('(' + cjk2arr.join('|') + ')', 'g'),

// 新字体、旧字体の対応（不可逆変換対応）
kyu2shinAdd = exports.kyu2shinAdd = ['嶌島', '廰庁', '辯弁', '辧弁', '瓣弁', '既既', '鬭闘', '邉辺'],
    cjk1addArr = exports.cjk1addArr = kyu2shinAdd.map(function (r) {
  return r[0];
}),
    cjk1add = exports.cjk1add = new RegExp('(' + cjk1addArr.join('|') + ')', 'g'),

// 新字体、旧字体の対応（異体字対応）
shinSpBase = exports.shinSpBase = [['類', '%u985E%uDB40%uDD00'], ['海', '%u6D77%uDB40%uDD00'], ['視', '%u8996%uDB40%uDD01'], ['贈', '%u8D08%uDB40%uDD01'], ['層', '%u5C64%uDB40%uDD01'], ['僧', '%u50E7%uDB40%uDD01'], ['突', '%u7A81%uDB40%uDD01'], ['難', '%u96E3%uDB40%uDD00'], ['免', '%u514D%uDB40%uDD03'], ['漢', '%u6F22%uDB40%uDD01'], ['慨', '%u6168%uDB40%uDD01'], ['祖', '%u7956%uDB40%uDD01'], ['著', '%u8457%uDB40%uDD01'], ['練', '%u7DF4%uDB40%uDD00'], ['曜', '%u66DC%uDB40%uDD01'], ['勤', '%u52E4%uDB40%uDD01'], ['憎', '%u618E%uDB40%uDD00'], ['嘆', '%u5606%uDB40%uDD00'], ['敏', '%u654F%uDB40%uDD00'], ['遂', '%u9042%uDB40%uDD02'], ['賓', '%u8CD3%uDB40%uDD00'], ['逸', '%u9038%uDB40%uDD01'], ['煮', '%u716E%uDB40%uDD00'], ['臭', '%u81ED%uDB40%uDD01'], ['禍', '%u798D%uDB40%uDD00'], ['祈', '%u7948%uDB40%uDD00'], ['褐', '%u8910%uDB40%uDD01'], ['暑', '%u6691%uDB40%uDD01'], ['梅', '%u6885%uDB40%uDD00'], ['侮', '%u4FAE%uDB40%uDD01'], ['靖', '%u9756%uDB40%uDD01'], ['喝', '%u559D%uDB40%uDD01'], ['署', '%u7F72%uDB40%uDD00'], ['虜', '%u865C%uDB40%uDD00'], ['穀', '%u7A40%uDB40%uDD00'], ['卑', '%u5351%uDB40%uDD00'], ['節', '%u7BC0%uDB40%uDD01'], ['塀', '%u5840%uDB40%uDD01'], ['響', '%u97FF%uDB40%uDD01'], ['謹', '%u8B39%uDB40%uDD00'], ['祉', '%u7949%uDB40%uDD01'], ['者', '%u8005%uDB40%uDD01'], ['勉', '%u52C9%uDB40%uDD02'], ['碑', '%u7891%uDB40%uDD00'], ['廊', '%u5ECA%uDB40%uDD01'], ['悔', '%u6094%uDB40%uDD00'], ['欄', '%u6B04%uDB40%uDD00'], ['社', '%u793E%uDB40%uDD01'], ['繁', '%u7E41%uDB40%uDD01'], ['器', '%u5668%uDB40%uDD01'], ['契', '%u5951%uDB40%uDD01'], ['旅', '%u65C5%uDB40%uDD01'], ['廉', '%u5EC9%uDB40%uDD00'], ['謁', '%u8B01%uDB40%uDD00'], ['殺', '%u6BBA%uDB40%uDD00'], ['祝', '%u795D%uDB40%uDD00'], ['懲', '%u61F2%uDB40%uDD01'], ['墨', '%u58A8%uDB40%uDD00'], ['城', '%u57CE%uDB40%uDD00'], ['媛', '%u5A9B%uDB40%uDD01'], ['尊', '%u5C0A%uDB40%uDD01'], ['麻', '%u9EBB%uDB40%uDD01'], ['摩', '%u6469%uDB40%uDD01'], ['忍', '%u5FCD%uDB40%uDD01'], ['乳', '%u4E73%uDB40%uDD01'], ['半', '%u534a%uDB40%uDD01'], ['平', '%u5e73%uDB40%uDD03'], ['肖', '%u8096%uDB40%uDD01'], ['煙', '%u7159%uDB40%uDD01'], ['棄', '%u68C4%uDB40%uDD02'], ['起', '%u8D77%uDB40%uDD03'], ['慧', '%u6167%uDB40%uDD01'], ['券', '%u5238%uDB40%uDD01'], ['酷', '%u9177%uDB40%uDD01'], ['侵', '%u4FB5%uDB40%uDD01'], ['浸', '%u6D78%uDB40%uDD01'], ['述', '%u8FF0%uDB40%uDD01'], ['聖', '%u8056%uDB40%uDD01'], ['掃', '%u6383%uDB40%uDD01'], ['隊', '%u968A%uDB40%uDD01'], ['釣', '%u91E3%uDB40%uDD01'], ['呈', '%u5448%uDB40%uDD03'], ['程', '%u7A0B%uDB40%uDD01'], ['那', '%u90A3%uDB40%uDD01'], ['鼻', '%u9F3B%uDB40%uDD01'], ['婦', '%u5A66%uDB40%uDD01'], ['文', '%u6587%uDB40%uDD01'], ['簿', '%u7C3F%uDB40%uDD03'], ['冒', '%u5192%uDB40%uDD03'], ['帽', '%u5E3D%uDB40%uDD01']],
    shinSp1arr = exports.shinSp1arr = shinSpBase.map(function (r) {
  return r[0];
}),
    shinSp1 = exports.shinSp1 = new RegExp('[' + shinSp1arr.join('') + ']', 'g'),
    shinSp2arr = exports.shinSp2arr = shinSpBase.map(function (r) {
  return r[1];
}),
    shinSp2 = exports.shinSp2 = new RegExp('(' + shinSp2arr.join('|') + ')', 'g'),

// 訓令式ローマ字用
kunre = exports.kunre = [['ディ', 'di'], ['ドゥ', 'du'], ['デャ', 'dya'], ['デュ', 'dyu'], ['デョ', 'dyo'], ['ヴァ', 'va'], ['ヴャ', 'vya'], ['ヴュ', 'vy'], ['ヴョ', 'vyo'], ['ヴィ', 'vi'], ['ヴェ', 've'], ['ヴォ', 'vo'], ['プォ', 'pwo'], ['プェ', 'pwe'], ['プィ', 'pwi'], ['プァ', 'pwa'], ['ピェ', 'pye'], ['ブォ', 'bwo'], ['ブェ', 'bwe'], ['ブィ', 'bwi'], ['ブァ', 'bwa'], ['ビェ', 'bye'], ['ヅォ', 'zwo'], ['ヅェ', 'zwe'], ['ヅィ', 'zwi'], ['ヅァ', 'zwa'], ['ヂェ', 'zye'], ['ズォ', 'zwo'], ['ズェ', 'zwe'], ['ズィ', 'zwi'], ['ズァ', 'zwa'], ['ジェ', 'zye'], ['グォ', 'gwo'], ['グェ', 'gwe'], ['グィ', 'gwi'], ['グァ', 'gwa'], ['ギェ', 'gye'], ['ルォ', 'rwo'], ['ルェ', 'rwe'], ['ルィ', 'rwi'], ['ルァ', 'rwa'], ['リェ', 'rye'], ['ムォ', 'mwo'], ['ムェ', 'mwe'], ['ムィ', 'mwi'], ['ムァ', 'mwa'], ['ミェ', 'mye'], ['フォ', 'fuo'], ['フェ', 'fue'], ['フィ', 'fui'], ['ファ', 'fua'], ['ヒェ', 'hye'], ['ヌォ', 'nwo'], ['ヌェ', 'nwe'], ['ヌィ', 'nwi'], ['ヌァ', 'nwa'], ['ニェ', 'nye'], ['ツォ', 'two'], ['ツェ', 'twe'], ['ツィ', 'twi'], ['ツァ', 'twa'], ['チェ', 'tye'], ['スォ', 'swo'], ['スェ', 'swe'], ['スィ', 'swi'], ['スァ', 'swa'], ['シェ', 'sye'], ['クォ', 'kwo'], ['クェ', 'kwe'], ['クィ', 'kwi'], ['クァ', 'kwa'], ['キェ', 'kye'], ['ウォ', 'wo'], ['ウェ', 'we'], ['ウィ', 'wi'], ['イェ', 'ye'], ['ピョ', 'pyo'], ['ピュ', 'pyu'], ['ピャ', 'pya'], ['ビョ', 'byo'], ['ビュ', 'byu'], ['ビャ', 'bya'], ['ジョ', 'zyo'], ['ジュ', 'zyu'], ['ジャ', 'zya'], ['ギョ', 'gyo'], ['ギュ', 'gyu'], ['ギャ', 'gya'], ['ヂョ', 'zyo'], ['ヂュ', 'zyu'], ['ヂャ', 'zya'], ['リョ', 'ryo'], ['リュ', 'ryu'], ['リャ', 'rya'], ['ミョ', 'myo'], ['ミュ', 'myu'], ['ミャ', 'mya'], ['ヒョ', 'hyo'], ['ヒュ', 'hyu'], ['ヒャ', 'hya'], ['ニョ', 'nyo'], ['ニュ', 'nyu'], ['ニャ', 'nya'], ['チョ', 'tyo'], ['チュ', 'tyu'], ['チャ', 'tya'], ['ショ', 'sho'], ['シュ', 'shu'], ['シャ', 'sha'], ['キョ', 'kyo'], ['キュ', 'kyu'], ['キャ', 'kya'], ['ポ', 'po'], ['ペ', 'pe'], ['プ', 'pu'], ['ピ', 'pi'], ['パ', 'pa'], ['ボ', 'bo'], ['ベ', 'be'], ['ブ', 'bu'], ['ビ', 'bi'], ['バ', 'ba'], ['ド', 'do'], ['デ', 'de'], ['ヅ', 'zu'], ['ヂ', 'zi'], ['ダ', 'da'], ['ゾ', 'zo'], ['ゼ', 'ze'], ['ズ', 'zu'], ['ジ', 'zi'], ['ザ', 'za'], ['ゴ', 'go'], ['ゲ', 'ge'], ['グ', 'gu'], ['ギ', 'gi'], ['ガ', 'ga'], ['ワ', 'wa'], ['ロ', 'ro'], ['レ', 're'], ['ル', 'ru'], ['リ', 'ri'], ['ラ', 'ra'], ['ヨ', 'yo'], ['ユ', 'yu'], ['ヤ', 'ya'], ['モ', 'mo'], ['メ', 'me'], ['ム', 'mu'], ['ミ', 'mi'], ['マ', 'ma'], ['ホ', 'ho'], ['ヘ', 'he'], ['フ', 'fu'], ['ヒ', 'hi'], ['ハ', 'ha'], ['ノ', 'no'], ['ネ', 'ne'], ['ヌ', 'nu'], ['ニ', 'ni'], ['ナ', 'na'], ['ト', 'to'], ['テ', 'te'], ['ツ', 'tu'], ['チ', 'ti'], ['タ', 'ta'], ['ソ', 'so'], ['セ', 'se'], ['ス', 'su'], ['シ', 'si'], ['サ', 'sa'], ['コ', 'ko'], ['ケ', 'ke'], ['ク', 'ku'], ['キ', 'ki'], ['カ', 'ka'], ['オ', 'o'], ['エ', 'e'], ['ウ', 'u'], ['イ', 'i'], ['ア', 'a'], ['ン', 'n'], ['ヲ', 'o'], ['ヱ', 'e'], ['ヰ', 'i'], ['ヴ', 'vu']],
    kun1arr = exports.kun1arr = kunre.map(function (r) {
  return r[0];
}),
    kun1 = exports.kun1 = new RegExp('(' + kun1arr.join('|') + ')', 'g'),

// ヘボン式ローマ字用
hebon = exports.hebon = [['ドゥ', 'du'], ['ヴャ', 'vya'], ['ヴュ', 'vy'], ['ヴョ', 'vyo'], ['プォ', 'pwo'], ['プェ', 'pwe'], ['プィ', 'pwi'], ['プァ', 'pwa'], ['ピェ', 'pye'], ['ブォ', 'bwo'], ['ブェ', 'bwe'], ['ブィ', 'bwi'], ['ブァ', 'bwa'], ['ビェ', 'bye'], ['ヅォ', 'zwo'], ['ヅェ', 'zwe'], ['ヅィ', 'zwi'], ['ヅァ', 'zwa'], ['ヂェ', 'zye'], ['ズォ', 'zwo'], ['ズェ', 'zwe'], ['ズィ', 'zwi'], ['ズァ', 'zwa'], ['ムォ', 'mwo'], ['ムェ', 'mwe'], ['ムィ', 'mwi'], ['ムァ', 'mwa'], ['ミェ', 'mye'], ['ヒェ', 'hye'], ['ヌォ', 'nwo'], ['ヌェ', 'nwe'], ['ヌィ', 'nwi'], ['ヌァ', 'nwa'], ['ニェ', 'nye'], ['ツォ', 'two'], ['ツェ', 'twe'], ['ツィ', 'twi'], ['ツァ', 'twa'], ['スォ', 'swo'], ['スェ', 'swe'], ['スィ', 'swi'], ['スァ', 'swa'], ['シェ', 'sye'], ['クォ', 'kwo'], ['クェ', 'kwe'], ['クィ', 'kwi'], ['クァ', 'kwa'], ['キェ', 'kye'], ['グォ', 'gwo'], ['グェ', 'gwe'], ['グィ', 'gwi'], ['グァ', 'gwa'], ['ギェ', 'gye'], ['ルォ', 'rwo'], ['ルェ', 'rwe'], ['ルィ', 'rwi'], ['ルァ', 'rwa'], ['リェ', 'rye'], ['ムォ', 'mwo'], ['ムェ', 'mwe'], ['ムィ', 'mwi'], ['ムァ', 'mwa'], ['ミェ', 'mye'], ['ヴォ', 'buo'], ['ヴェ', 'bue'], ['ヴィ', 'bui'], ['ヴァ', 'bua'], ['フォ', 'fuo'], ['フェ', 'fue'], ['フィ', 'fui'], ['ファ', 'fua'], ['デュ', 'deyu'], ['ディ', 'dei'], ['ティ', 'tei'], ['チェ', 'chie'], ['ジェ', 'jie'], ['ピョ', 'pyo'], ['ピュ', 'pyu'], ['ピャ', 'pya'], ['ビョ', 'byo'], ['ビュ', 'byu'], ['ビャ', 'bya'], ['デョ', 'jo'], ['デュ', 'ju'], ['デャ', 'ja'], ['ジョ', 'jo'], ['ジュ', 'ju'], ['ジャ', 'ja'], ['ギョ', 'gyo'], ['ギュ', 'gyu'], ['ギャ', 'gya'], ['リョ', 'ryo'], ['リュ', 'ryu'], ['リャ', 'rya'], ['ミョ', 'myo'], ['ミュ', 'myu'], ['ミャ', 'mya'], ['ヒョ', 'hyo'], ['ヒュ', 'hyu'], ['ヒャ', 'hya'], ['ニョ', 'nyo'], ['ニュ', 'nyu'], ['ニャ', 'nya'], ['チョ', 'cho'], ['チュ', 'chu'], ['チャ', 'cha'], ['ショ', 'sho'], ['シュ', 'shu'], ['シャ', 'sha'], ['キョ', 'kyo'], ['キュ', 'kyu'], ['キャ', 'kya'], ['ポ', 'po'], ['ペ', 'pe'], ['プ', 'pu'], ['ピ', 'pi'], ['パ', 'pa'], ['ボ', 'bo'], ['ベ', 'be'], ['ブ', 'bu'], ['ビ', 'bi'], ['バ', 'ba'], ['ド', 'do'], ['デ', 'de'], ['ヅ', 'zu'], ['ヂ', 'ji'], ['ダ', 'da'], ['ゾ', 'zo'], ['ゼ', 'ze'], ['ズ', 'zu'], ['ジ', 'ji'], ['ザ', 'za'], ['ゴ', 'go'], ['ゲ', 'ge'], ['グ', 'gu'], ['ギ', 'gi'], ['ガ', 'ga'], ['ワ', 'wa'], ['ロ', 'ro'], ['レ', 're'], ['ル', 'ru'], ['リ', 'ri'], ['ラ', 'ra'], ['ヨ', 'yo'], ['ユ', 'yu'], ['ヤ', 'ya'], ['モ', 'mo'], ['メ', 'me'], ['ム', 'mu'], ['ミ', 'mi'], ['マ', 'ma'], ['ホ', 'ho'], ['ヘ', 'he'], ['フ', 'fu'], ['ヒ', 'hi'], ['ハ', 'ha'], ['ノ', 'no'], ['ネ', 'ne'], ['ヌ', 'nu'], ['ニ', 'ni'], ['ナ', 'na'], ['ト', 'to'], ['テ', 'te'], ['ツ', 'tsu'], ['チ', 'chi'], ['タ', 'ta'], ['ソ', 'so'], ['セ', 'se'], ['ス', 'su'], ['シ', 'shi'], ['サ', 'sa'], ['コ', 'ko'], ['ケ', 'ke'], ['ク', 'ku'], ['キ', 'ki'], ['カ', 'ka'], ['オ', 'o'], ['エ', 'e'], ['ウ', 'u'], ['イ', 'i'], ['ア', 'a'], ['ン', 'n'], ['ヲ', 'o'], ['ヱ', 'e'], ['ヰ', 'i'], ['ヴ', 'bu']],
    heb1arr = exports.heb1arr = hebon.map(function (r) {
  return r[0];
}),
    heb1 = exports.heb1 = new RegExp('(' + heb1arr.join('|') + ')', 'g'),

// ローマ字→カナ変換用
kanaroma = exports.kanaroma = [['du', 'ドゥ'], ['vya', 'ヴャ'], ['vy', 'ヴュ'], ['vyo', 'ヴョ'], ['pwo', 'プォ'], ['pwe', 'プェ'], ['pwi', 'プィ'], ['pwa', 'プァ'], ['pye', 'ピェ'], ['bwo', 'ブォ'], ['bwe', 'ブェ'], ['bwi', 'ブィ'], ['bwa', 'ブァ'], ['bye', 'ビェ'], ['zwo', 'ヅォ'], ['zwe', 'ヅェ'], ['zwi', 'ヅィ'], ['zwa', 'ヅァ'], ['zye', 'ヂェ'], ['zwo', 'ズォ'], ['zwe', 'ズェ'], ['zwi', 'ズィ'], ['zwa', 'ズァ'], ['mwo', 'ムォ'], ['mwe', 'ムェ'], ['mwi', 'ムィ'], ['mwa', 'ムァ'], ['mye', 'ミェ'], ['hye', 'ヒェ'], ['nwo', 'ヌォ'], ['nwe', 'ヌェ'], ['nwi', 'ヌィ'], ['nwa', 'ヌァ'], ['nye', 'ニェ'], ['two', 'ツォ'], ['twe', 'ツェ'], ['twi', 'ツィ'], ['twa', 'ツァ'], ['swo', 'スォ'], ['swe', 'スェ'], ['swi', 'スィ'], ['swa', 'スァ'], ['sye', 'シェ'], ['kwo', 'クォ'], ['kwe', 'クェ'], ['kwi', 'クィ'], ['kwa', 'クァ'], ['kye', 'キェ'], ['gwo', 'グォ'], ['gwe', 'グェ'], ['gwi', 'グィ'], ['gwa', 'グァ'], ['gye', 'ギェ'], ['rwo', 'ルォ'], ['rwe', 'ルェ'], ['rwi', 'ルィ'], ['rwa', 'ルァ'], ['rye', 'リェ'], ['mwo', 'ムォ'], ['mwe', 'ムェ'], ['mwi', 'ムィ'], ['mwa', 'ムァ'], ['mye', 'ミェ'], ['buo', 'ブォ'], ['bue', 'ブェ'], ['bui', 'ブィ'], ['bua', 'ブァ'], ['fuo', 'フォ'], ['fue', 'フェ'], ['fui', 'フィ'], ['fua', 'ファ'], ['fo', 'フォ'], ['fe', 'フェ'], ['fi', 'フィ'], ['fa', 'ファ'], ['deyu', 'デュ'], ['dei', 'ディ'], ['tei', 'ティ'], ['chie', 'チェ'], ['jie', 'ジェ'], ['pyo', 'ピョ'], ['pyu', 'ピュ'], ['pya', 'ピャ'], ['byo', 'ビョ'], ['byu', 'ビュ'], ['bya', 'ビャ'], ['jo', 'ジョ'], ['ju', 'ジュ'], ['ja', 'ジャ'], ['gyo', 'ギョ'], ['gyu', 'ギュ'], ['gya', 'ギャ'], ['ryo', 'リョ'], ['ryu', 'リュ'], ['rya', 'リャ'], ['myo', 'ミョ'], ['myu', 'ミュ'], ['mya', 'ミャ'], ['hyo', 'ヒョ'], ['hyu', 'ヒュ'], ['hya', 'ヒャ'], ['nyo', 'ニョ'], ['nyu', 'ニュ'], ['nya', 'ニャ'], ['cho', 'チョ'], ['chu', 'チュ'], ['cha', 'チャ'], ['sho', 'ショ'], ['shu', 'シュ'], ['sha', 'シャ'], ['kyo', 'キョ'], ['kyu', 'キュ'], ['kya', 'キャ'], ['tya', 'チャ'], ['po', 'ポ'], ['pe', 'ペ'], ['pu', 'プ'], ['pi', 'ピ'], ['pa', 'パ'], ['bo', 'ボ'], ['be', 'ベ'], ['bu', 'ブ'], ['bi', 'ビ'], ['ba', 'バ'], ['do', 'ド'], ['de', 'デ'], ['zu', 'ヅ'], ['ji', 'ジ'], ['zi', 'ジ'], ['da', 'ダ'], ['zo', 'ゾ'], ['ze', 'ゼ'], ['zu', 'ズ'], ['ji', 'ジ'], ['za', 'ザ'], ['go', 'ゴ'], ['ge', 'ゲ'], ['gu', 'グ'], ['gi', 'ギ'], ['ga', 'ガ'], ['wa', 'ワ'], ['ro', 'ロ'], ['re', 'レ'], ['ru', 'ル'], ['ri', 'リ'], ['ra', 'ラ'], ['yo', 'ヨ'], ['yu', 'ユ'], ['ya', 'ヤ'], ['mo', 'モ'], ['me', 'メ'], ['mu', 'ム'], ['mi', 'ミ'], ['ma', 'マ'], ['ho', 'ホ'], ['he', 'ヘ'], ['fu', 'フ'], ['hi', 'ヒ'], ['ha', 'ハ'], ['no', 'ノ'], ['ne', 'ネ'], ['nu', 'ヌ'], ['ni', 'ニ'], ['na', 'ナ'], ['to', 'ト'], ['te', 'テ'], ['tsu', 'ツ'], ['chi', 'チ'], ['ta', 'タ'], ['so', 'ソ'], ['se', 'セ'], ['su', 'ス'], ['shi', 'シ'], ['sa', 'サ'], ['ko', 'コ'], ['ke', 'ケ'], ['ku', 'ク'], ['ki', 'キ'], ['ka', 'カ'], ['si', 'シ'], ['ci', 'チ'], ['tu', 'ツ'], ['ti', 'ティ'], ['wi', 'ウィ'], ['we', 'ウェ'], ['vo', 'ヴォ'], ['ve', 'ヴェ'], ['vu', 'ヴ'], ['vi', 'ヴィ'], ['va', 'ヴァ'], ['o', 'オ'], ['e', 'エ'], ['u', 'ウ'], ['i', 'イ'], ['a', 'ア'], ['n', 'ン'], ['o', 'ヲ'], ['e', 'ヱ'], ['i', 'ヰ']],
    kanaromaArr = exports.kanaromaArr = kanaroma.map(function (r) {
  return r[0];
}),
    kanaromaReg = exports.kanaromaReg = new RegExp('(' + kanaromaArr.join('|') + ')', 'g'),

// 半角カタカナ用
kanaMap = exports.kanaMap = [['ｶﾞ', 'ガ'], ['ｷﾞ', 'ギ'], ['ｸﾞ', 'グ'], ['ｹﾞ', 'ゲ'], ['ｺﾞ', 'ゴ'], ['ｻﾞ', 'ザ'], ['ｼﾞ', 'ジ'], ['ｽﾞ', 'ズ'], ['ｾﾞ', 'ゼ'], ['ｿﾞ', 'ゾ'], ['ﾀﾞ', 'ダ'], ['ﾁﾞ', 'ヂ'], ['ﾂﾞ', 'ヅ'], ['ﾃﾞ', 'デ'], ['ﾄﾞ', 'ド'], ['ﾊﾞ', 'バ'], ['ﾋﾞ', 'ビ'], ['ﾌﾞ', 'ブ'], ['ﾍﾞ', 'ベ'], ['ﾎﾞ', 'ボ'], ['ﾊﾟ', 'パ'], ['ﾋﾟ', 'ピ'], ['ﾌﾟ', 'プ'], ['ﾍﾟ', 'ペ'], ['ﾎﾟ', 'ポ'], ['ｳﾞ', 'ヴ'], ['ﾜﾞ', 'ヷ'], ['ｦﾞ', 'ヺ'], ['ｱ', 'ア'], ['ｲ', 'イ'], ['ｳ', 'ウ'], ['ｴ', 'エ'], ['ｵ', 'オ'], ['ｶ', 'カ'], ['ｷ', 'キ'], ['ｸ', 'ク'], ['ｹ', 'ケ'], ['ｺ', 'コ'], ['ｻ', 'サ'], ['ｼ', 'シ'], ['ｽ', 'ス'], ['ｾ', 'セ'], ['ｿ', 'ソ'], ['ﾀ', 'タ'], ['ﾁ', 'チ'], ['ﾂ', 'ツ'], ['ﾃ', 'テ'], ['ﾄ', 'ト'], ['ﾅ', 'ナ'], ['ﾆ', 'ニ'], ['ﾇ', 'ヌ'], ['ﾈ', 'ネ'], ['ﾉ', 'ノ'], ['ﾊ', 'ハ'], ['ﾋ', 'ヒ'], ['ﾌ', 'フ'], ['ﾍ', 'ヘ'], ['ﾎ', 'ホ'], ['ﾏ', 'マ'], ['ﾐ', 'ミ'], ['ﾑ', 'ム'], ['ﾒ', 'メ'], ['ﾓ', 'モ'], ['ﾗ', 'ラ'], ['ﾘ', 'リ'], ['ﾙ', 'ル'], ['ﾚ', 'レ'], ['ﾛ', 'ロ'], ['ﾔ', 'ヤ'], ['ﾕ', 'ユ'], ['ﾖ', 'ヨ'], ['ﾜ', 'ワ'], ['ｦ', 'ヲ'], ['ﾝ', 'ン'], ['ｧ', 'ァ'], ['ｨ', 'ィ'], ['ｩ', 'ゥ'], ['ｪ', 'ェ'], ['ｫ', 'ォ'], ['ｯ', 'ッ'], ['ｬ', 'ャ'], ['ｭ', 'ュ'], ['ｮ', 'ョ'], ['｡', '。'], ['､', '、'], ['ｰ', 'ー'], ['｢', '「'], ['｣', '」'], ['･', '・']],
    kana1arr = exports.kana1arr = kanaMap.map(function (r) {
  return r[0];
}),
    kana2arr = exports.kana2arr = kanaMap.map(function (r) {
  return r[1];
}),
    kana1 = exports.kana1 = new RegExp('(' + kana1arr.join('|') + ')', 'g'),
    kana2 = exports.kana2 = new RegExp('(' + kana2arr.join('|') + ')', 'g'),

// 全角英数字→半角英数字変換用
kanaAlpha = exports.kanaAlpha = [['a', 'ａ'], ['b', 'ｂ'], ['c', 'ｃ'], ['d', 'ｄ'], ['e', 'ｅ'], ['f', 'ｆ'], ['g', 'ｇ'], ['h', 'ｈ'], ['i', 'ｉ'], ['j', 'ｊ'], ['k', 'ｋ'], ['l', 'ｌ'], ['m', 'ｍ'], ['n', 'ｎ'], ['o', 'ｏ'], ['p', 'ｐ'], ['q', 'ｑ'], ['r', 'ｒ'], ['s', 'ｓ'], ['t', 'ｔ'], ['u', 'ｕ'], ['v', 'ｖ'], ['w', 'ｗ'], ['x', 'ｘ'], ['y', 'ｙ'], ['z', 'ｚ'], ['A', 'Ａ'], ['B', 'Ｂ'], ['C', 'Ｃ'], ['D', 'Ｄ'], ['E', 'Ｅ'], ['F', 'Ｆ'], ['G', 'Ｇ'], ['H', 'Ｈ'], ['I', 'Ｉ'], ['J', 'Ｊ'], ['K', 'Ｋ'], ['L', 'Ｌ'], ['M', 'Ｍ'], ['N', 'Ｎ'], ['O', 'Ｏ'], ['P', 'Ｐ'], ['Q', 'Ｑ'], ['R', 'Ｒ'], ['S', 'Ｓ'], ['T', 'Ｔ'], ['U', 'Ｕ'], ['V', 'Ｖ'], ['W', 'Ｗ'], ['X', 'Ｘ'], ['Y', 'Ｙ'], ['Z', 'Ｚ'], ['0', '０'], ['1', '１'], ['2', '２'], ['3', '３'], ['4', '４'], ['5', '５'], ['6', '６'], ['7', '７'], ['8', '８'], ['9', '９']],
    alpha1arr = exports.alpha1arr = kanaAlpha.map(function (r) {
  return r[0];
}),
    alpha2arr = exports.alpha2arr = kanaAlpha.map(function (r) {
  return r[1];
}),
    alpha1 = exports.alpha1 = new RegExp('(' + alpha1arr.join('|') + ')', 'g'),
    alpha2 = exports.alpha2 = new RegExp('(' + alpha2arr.join('|') + ')', 'g');

},{}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/* eslint no-unused-vars: 0, quote-props: 0 */

var
// export const
// 文字参照用
charaMap = exports.charaMap = {
  quot: '"',
  amp: '&',
  apos: '\'',
  lt: '<',
  gt: '>',
  nbsp: ' ',
  iexcl: '¡',
  cent: '¢',
  pound: '£',
  curren: '¤',
  yen: '¥',
  brvbar: '¦',
  sect: '§',
  uml: '¨',
  copy: '©',
  ordf: 'ª',
  laquo: '«',
  not: '¬',
  reg: '®',
  macr: '¯',
  deg: '°',
  plusmn: '±',
  sup2: '²',
  sup3: '³',
  acute: '´',
  micro: 'µ',
  para: '¶',
  middot: '·',
  cedil: '¸',
  sup1: '¹',
  ordm: 'º',
  raquo: '»',
  frac14: '¼',
  frac12: '½',
  frac34: '¾',
  iquest: '¿',
  Agrave: 'À',
  Aacute: 'Á',
  Acirc: 'Â',
  Atilde: 'Ã',
  Auml: 'Ä',
  Aring: 'Å',
  AElig: 'Æ',
  Ccedil: 'Ç',
  Egrave: 'È',
  Eacute: 'É',
  Ecirc: 'Ê',
  Euml: 'Ë',
  Igrave: 'Ì',
  Iacute: 'Í',
  Icirc: 'Î',
  Iuml: 'Ï',
  ETH: 'Ð',
  Ntilde: 'Ñ',
  Ograve: 'Ò',
  Oacute: 'Ó',
  Ocirc: 'Ô',
  Otilde: 'Õ',
  Ouml: 'Ö',
  times: '×',
  Oslash: 'Ø',
  Ugrave: 'Ù',
  Uacute: 'Ú',
  Ucirc: 'Û',
  Uuml: 'Ü',
  Yacute: 'Ý',
  THORN: 'Þ',
  szlig: 'ß',
  agrave: 'à',
  aacute: 'á',
  acirc: 'â',
  atilde: 'ã',
  auml: 'ä',
  aring: 'å',
  aelig: 'æ',
  ccedil: 'ç',
  egrave: 'è',
  eacute: 'é',
  ecirc: 'ê',
  euml: 'ë',
  igrave: 'ì',
  iacute: 'í',
  icirc: 'î',
  iuml: 'ï',
  eth: 'ð',
  ntilde: 'ñ',
  ograve: 'ò',
  oacute: 'ó',
  ocirc: 'ô',
  otilde: 'õ',
  ouml: 'ö',
  divide: '÷',
  oslash: 'ø',
  ugrave: 'ù',
  uacute: 'ú',
  ucirc: 'û',
  uuml: 'ü',
  yacute: 'ý',
  thorn: 'þ',
  yuml: 'ÿ',
  OElig: 'Œ',
  oelig: 'œ',
  Scaron: 'Š',
  scaron: 'š',
  Yuml: 'Ÿ',
  fnof: 'ƒ',
  circ: 'ˆ',
  tilde: '˜',
  Alpha: 'Α',
  Beta: 'Β',
  Gamma: 'Γ',
  Delta: 'Δ',
  Epsilon: 'Ε',
  Zeta: 'Ζ',
  Eta: 'Η',
  Theta: 'Θ',
  Iota: 'Ι',
  Kappa: 'Κ',
  Lambda: 'Λ',
  Mu: 'Μ',
  Nu: 'Ν',
  Xi: 'Ξ',
  Omicron: 'Ο',
  Pi: 'Π',
  Rho: 'Ρ',
  Sigma: 'Σ',
  Tau: 'Τ',
  Upsilon: 'Υ',
  Phi: 'Φ',
  Chi: 'Χ',
  Psi: 'Ψ',
  Omega: 'Ω',
  alpha: 'α',
  beta: 'β',
  gamma: 'γ',
  delta: 'δ',
  epsilon: 'ε',
  zeta: 'ζ',
  eta: 'η',
  theta: 'θ',
  iota: 'ι',
  kappa: 'κ',
  lambda: 'λ',
  mu: 'μ',
  nu: 'ν',
  xi: 'ξ',
  omicron: 'ο',
  pi: 'π',
  rho: 'ρ',
  sigmaf: 'ς',
  sigma: 'σ',
  tau: 'τ',
  upsilon: 'υ',
  phi: 'φ',
  chi: 'χ',
  psi: 'ψ',
  omega: 'ω',
  thetasym: 'ϑ',
  upsih: 'ϒ',
  piv: 'ϖ',
  ndash: '–',
  mdash: '—',
  lsquo: '‘',
  rsquo: '’',
  sbquo: '‚',
  ldquo: '“',
  rdquo: '”',
  bdquo: '„',
  dagger: '†',
  Dagger: '‡',
  bull: '•',
  hellip: '…',
  permil: '‰',
  prime: '′',
  Prime: '″',
  lsaquo: '‹',
  rsaquo: '›',
  oline: '‾',
  frasl: '⁄',
  euro: '€',
  image: 'ℑ',
  weierp: '℘',
  real: 'ℜ',
  trade: '™',
  alefsym: 'ℵ',
  larr: '←',
  uarr: '↑',
  rarr: '→',
  darr: '↓',
  harr: '↔',
  crarr: '↵',
  lArr: '⇐',
  uArr: '⇑',
  rArr: '⇒',
  dArr: '⇓',
  hArr: '⇔',
  forall: '∀',
  part: '∂',
  exist: '∃',
  empty: '∅',
  nabla: '∇',
  isin: '∈',
  notin: '∉',
  ni: '∋',
  prod: '∏',
  sum: '∑',
  minus: '−',
  lowast: '∗',
  radic: '√',
  prop: '∝',
  infin: '∞',
  ang: '∠',
  and: '∧',
  or: '∨',
  cap: '∩',
  cup: '∪',
  int: '∫',
  there4: '∴',
  sim: '∼',
  cong: '≅',
  asymp: '≈',
  ne: '≠',
  equiv: '≡',
  le: '≤',
  ge: '≥',
  sub: '⊂',
  sup: '⊃',
  nsub: '⊄',
  sube: '⊆',
  supe: '⊇',
  oplus: '⊕',
  otimes: '⊗',
  perp: '⊥',
  sdot: '⋅',
  lceil: '⌈',
  rceil: '⌉',
  lfloor: '⌊',
  rfloor: '⌋',
  lang: '〈',
  rang: '〉',
  loz: '◊',
  spades: '♠',
  clubs: '♣',
  hearts: '♥',
  diams: '♦'
},
    chara = exports.chara = new RegExp('&(' + Object.keys(charaMap).join('|') + ');', 'g'),

// ラテン符号付文字検索用
latinVariety = exports.latinVariety = [['a', ['àÀ', 'áÁ', 'âÂ', 'ãÃ', 'äÄ', 'åÅ', 'āĀ', 'ăĂ', 'ąĄ', 'ǎǍ', 'ǻǺ', 'ȁȀ', 'ȃȂ', 'ȧȦ', 'ạẠ', 'ảẢ', 'ấẤ', 'ầẦ', 'ẩẨ', 'ẫẪ', 'ậẬ', 'ắẮ', 'ằẰ', 'ẳẲ', 'ẵẴ', 'ặẶ', 'ḁḀ', 'ⱥȺ', 'ǡǠ', 'ǟǞ', 'ɑⱭ', 'ɐⱯ', 'ᵃᴬ', 'ẚ', 'ᴀ', 'ɒ', 'ᶏ']], ['b', ['ƀɃ', 'ɓƁ', 'ƃƂ', 'ƅƄ', 'ḃḂ', 'ḅḄ', 'ḇḆ', 'ꞗꞖ', 'ᵇᴮ', 'ᵬ', 'ᶀ', 'ᴃ']], ['c', ['çÇ', 'ćĆ', 'ĉĈ', 'ċĊ', 'čČ', 'ɔƆ', 'ƈƇ', 'ḉḈ', 'c̄C̄', 'ȼȻ', 'ɕ', 'Ꞓ']], ['d', ['ðᴆÐ', 'ďĎ', 'ɗƊ', 'ɖƉ', 'ƌƋ', 'ḋḊ', 'ḍḌ', 'ḏḎ', 'ḑḐ', 'ḓḒ', 'đĐ', 'ᵈᴰ', 'ȡ']], ['e', ['èÈ', 'éÉ', 'êÊ', 'ëË', 'ēĒ', 'ĕĔ', 'ėĖ', 'ęĘ', 'ěĚ', 'ǝƎ', 'əƏ', 'ȅȄ', 'ȇȆ', 'ȩȨ', 'ḕḔ', 'ḗḖ', 'ḙḘ', 'ḛḚ', 'ḝḜ', 'ẹẸ', 'ẻẺ', 'ẽẼ', 'ếẾ', 'ềỀ', 'ểỂ', 'ễỄ', 'ệỆ', 'ɇɆ', 'ᵉᴱ', 'ꬳꬳ']], ['f', ['ḟḞ', 'ƒƑ']], ['g', ['ĝĜ', 'ğĞ', 'ġĠ', 'ģĢ', 'ǥǤ', 'ǧǦ', 'ǵǴ', 'ḡḠ', 'ɠƓ', 'ᵍᴳ', 'ᶃ', 'ɢ']], ['h', ['ĥĤ', 'ħĦ', 'ȟȞ', 'ḣḢ', 'ḥḤ', 'ḧḦ', 'ḩḨ', 'ḫḪ', 'ⱨⱧ', 'ʰᴴ', 'ẖ', 'ɦ']], ['i', ['ìÌ', 'íÍ', 'îÎ', 'ïÏ', 'ĩĨ', 'īĪ', 'ĭĬ', 'įĮ', 'ıİ', 'ǐǏ', 'ȉȈ', 'ȋȊ', 'ḭḬ', 'ḯḮ', 'ỉỈ', 'ịỊ', 'ɨƗ', 'ⁱᴵ', 'ı', 'İ']], ['j', ['ĵĴ', 'ɉɈ', 'ʲᴶ', 'ǰ']], ['k', ['ķĶ', 'ǩǨ', 'ḱḰ', 'ḳḲ', 'ḵḴ', 'ƙƘ', 'ꝃꝂ', 'ꝁꝀ', 'ꝅꝄ', 'ᵏᴷ']], ['l', ['ĺĹ', 'ļĻ', 'ľĽ', 'ŀĿ', 'łŁ', 'ḷḶ', 'ḹḸ', 'ḻḺ', 'ḽḼ', 'ƚȽ', 'ⱡⱠ', 'ˡᴸ', 'ꝉꝈ', 'łᴌŁ']], ['m', ['ḿḾ', 'ṁṀ', 'ṃṂ', 'ᵐᴹ', 'ᶆ']], ['n', ['ñÑ', 'ńŃ', 'ņŅ', 'ňŇ', 'ǹǸ', 'ṅṄ', 'ṇṆ', 'ṉṈ', 'ṋṊ', 'ɲƝ', 'ƞȠ', 'ⁿᴺ', 'ᵰ', 'ᶇ', 'ɳ', 'ȵ', 'ɴ']], ['o', ['òÒ', 'óÓ', 'ôÔ', 'õÕ', 'öÖ', 'ōŌ', 'ŏŎ', 'őŐ', 'ǒǑ', 'ǫǪ', 'ǭǬ', 'ȍȌ', 'ȏȎ', 'ȫȪ', 'ȭȬ', 'ȯȮ', 'ȱȰ', 'ṍṌ', 'ṏṎ', 'ṑṐ', 'ṓṒ', 'ốỐ', 'ồỒ', 'ổỔ', 'ỗỖ', 'ộỘ', 'ớỚ', 'ờỜ', 'ởỞ', 'ỡỠ', 'ợỢ', 'ọỌ', 'ỏỎ', 'øØ', 'ǿǾ', 'ꝍꝌ', 'ᵒᴼ']], ['p', ['ṕṔ', 'ṗṖ', 'ƥƤ', 'ᵽⱣ', 'ꝑꝐ', 'ꝓꝒ', 'ᵖᴾ']], ['q', ['ɋɊ', 'ꝙꝘ', 'ʠ']], ['r', ['ŕŔ', 'ŗŖ', 'řŘ', 'ȑȐ', 'ȓȒ', 'ṙṘ', 'ṛṚ', 'ṝṜ', 'ṟṞ', 'ɍɌ', 'ɽⱤ', 'ᵲ', 'ᶉ', 'ɼ', 'ɾ', 'ᵳ', 'ʀ', 'ʳᴿ']], ['s', ['śŚ', 'ŝŜ', 'şŞ', 'šŠ', 'șȘ', 'ṡṠ', 'ṣṢ', 'ṥṤ', 'ṧṦ', 'ṩṨ', 'ſ', 'ᵴ', 'ᶊ', 'ʂ', 'ȿ']], ['t', ['ţŢ', 'ťŤ', 'ŧŦ', 'țȚ', 'ṫṪ', 'ṭṬ', 'ṯṮ', 'ṱṰ', 'ƭƬ', 'ⱦȾ', 'ᵗᵀ', 'ẗ']], ['u', ['ùÙ', 'úÚ', 'ûÛ', 'üÜ', 'ũŨ', 'ūŪ', 'ŭŬ', 'ůŮ', 'űŰ', 'ųŲ', 'ǔǓ', 'ǖǕ', 'ǘǗ', 'ǚǙ', 'ǜǛ', 'ȕȔ', 'ȗȖ', 'ṳṲ', 'ṵṴ', 'ṷṶ', 'ṹṸ', 'ṻṺ', 'ụỤ', 'ủỦ', 'ứỨ', 'ừỪ', 'ửỬ', 'ữỮ', 'ựỰ', 'ʋƲ', 'Ưư', 'Ʉʉ', 'ᵘᵁ', 'ᵾ', 'ᶙ', 'ᴜ']], ['v', ['ṽṼ', 'ṿṾ', 'ꝟꝞ', 'ᵛⱽ']], ['w', ['ŵŴ', 'ẁẀ', 'ẃẂ', 'ẅẄ', 'ẇẆ', 'ẉẈ', 'ⱳⱲ', 'ʷᵂ', 'ẘ', 'Ɯ']], ['x', ['ẋẊ', 'ẍẌ']], ['y', ['ýÝ', 'ÿŸ', 'ŷŶ', 'ȳȲ', 'ẏẎ', 'ỳỲ', 'ỵỴ', 'ỷỶ', 'ỹỸ', 'ƴƳ', 'ɏɎ', 'ẙ']], ['z', ['źŹ', 'żŻ', 'žŽ', 'ȥȤ', 'ẑẐ', 'ẓẒ', 'ẕẔ', 'ƶƵ', 'ⱬⱫ', 'ʒƷ', 'ƹƸ', 'ᵶ', 'ᶎ', 'ʐ', 'ʑ', 'ɀ', 'ᴢ', 'ƺ']], ['þ', ['þÞ']], ['ae', ['æÆ', 'ǣǢ', 'ǽǼ', 'ᴂᴁ', 'ᴭᵆ']], ['ao', ['ꜵꜴ']], ['au', ['ꜷꜶ']], ['av', ['ꜹꜸ', 'ꜻꜺ']], ['ay', ['ꜽꜼ']], ['db', ['ȸ']], ['dz', ['ǳǲǱ', 'ǆǅǄ']], ['ff', ['ﬀ']], ['ffi', ['ﬃ']], ['ffl', ['ﬄ']], ['fi', ['ﬁ']], ['fl', ['ﬂ']], ['ft', ['ﬅ']], ['ij', ['ĳĲ']], ['lb', ['℔']], ['lj', ['ǉǈǇ']], ['ng', ['ŋŊ']], ['nj', ['ǌǋǊ']], ['oe', ['œɶŒ']], ['oo', ['ꝏꝎ']], ['ou', ['ȣȢ']], ['qp', ['ȹ']], ['st', ['ﬅ', 'ﬆ']], ['sz', ['ßẞ']], ['ue', ['ᵫ']], ['vy', ['ꝡꝠ']]],
    latinArr = exports.latinArr = latinVariety.map(function (r) {
  return r[1].join('');
}),
    latin = exports.latin = new RegExp('[' + latinArr.join('') + ']', 'g'),

// 符号付文字入力用
latinVariety2 = exports.latinVariety2 = {
  a: ['àÀ', 'áÁ', 'âÂ', 'ãÃ', 'äÄ', 'åÅ', 'āĀ', 'ăĂ', 'ąĄ', 'ǎǍ', 'ǻǺ', 'ȁȀ', 'ȃȂ', 'ȧȦ', 'ạẠ', 'ảẢ', 'ấẤ', 'ầẦ', 'ẩẨ', 'ẫẪ', 'ậẬ', 'ắẮ', 'ằẰ', 'ẳẲ', 'ẵẴ', 'ặẶ', 'ḁḀ', 'ⱥȺ', 'ǡǠ', 'ǟǞ', 'ᵃᴬ'],
  b: ['ƀɃ', 'ɓƁ', 'ƃƂ', 'ƅƄ', 'ḃḂ', 'ḅḄ', 'ḇḆ', 'ꞗꞖ', 'ᵬᵬ', 'ᶀᶀ', 'ᵇᴮ'],
  c: ['çÇ', 'ćĆ', 'ĉĈ', 'ċĊ', 'čČ', 'ɔƆ', 'ƈƇ', 'ḉḈ', 'c̄C̄', 'ȼȻ', 'ɕɕ', 'ꞓꞒ'],
  d: ['ðÐ', 'ďĎ', 'ɗƊ', 'ɖƉ', 'ƌƋ', 'ḋḊ', 'ḍḌ', 'ḏḎ', 'ḑḐ', 'ḓḒ', 'ȡȡ', 'đĐ', 'ᵈᴰ'],
  e: ['èÈ', 'éÉ', 'êÊ', 'ëË', 'ēĒ', 'ĕĔ', 'ėĖ', 'ęĘ', 'ěĚ', 'ǝƎ', 'əƏ', 'ȅȄ', 'ȇȆ', 'ȩȨ', 'ḕḔ', 'ḗḖ', 'ḙḘ', 'ḛḚ', 'ḝḜ', 'ẹẸ', 'ẻẺ', 'ẽẼ', 'ếẾ', 'ềỀ', 'ểỂ', 'ễỄ', 'ệỆ', 'ɇɆ', 'ᵉᴱ', 'ꬳꬳ'],
  f: ['ḟḞ', 'ƒƑ'],
  g: ['ĝĜ', 'ğĞ', 'ġĠ', 'ģĢ', 'ǥǤ', 'ǧǦ', 'ǵǴ', 'ḡḠ', 'ɠƓ', 'ᵍᴳ', 'ᶃᶃ', 'ɢɢ'],
  h: ['ĥĤ', 'ħĦ', 'ȟȞ', 'ḣḢ', 'ḥḤ', 'ḧḦ', 'ḩḨ', 'ḫḪ', 'ⱨⱧ', 'ʰᴴ', 'ẖẖ', 'ɦɦ'],
  i: ['ìÌ', 'íÍ', 'îÎ', 'ïÏ', 'ĩĨ', 'īĪ', 'ĭĬ', 'įĮ', 'ıİ', 'ǐǏ', 'ȉȈ', 'ȋȊ', 'ḭḬ', 'ḯḮ', 'ỉỈ', 'ịỊ', 'ⁱᴵ', 'ıı', 'İİ', 'ɨƗ'],
  j: ['ĵĴ', 'ǰǰ', 'ɉɈ', 'ʲᴶ'],
  k: ['ķĶ', 'ǩǨ', 'ḱḰ', 'ḳḲ', 'ḵḴ', 'ƙƘ', 'ꝃꝂ', 'ꝁꝀ', 'ꝅꝄ', 'ᵏᴷ'],
  l: ['ĺĹ', 'ļĻ', 'ľĽ', 'ŀĿ', 'łŁ', 'ḷḶ', 'ḹḸ', 'ḻḺ', 'ḽḼ', 'ƚȽ', 'ⱡⱠ', 'ˡᴸ', 'ꝉꝈ', 'łŁ', 'ᴌᴌ'],
  m: ['ḿḾ', 'ṁṀ', 'ṃṂ', 'ᵐᴹ', 'ᶆᶆ'],
  n: ['ñÑ', 'ńŃ', 'ņŅ', 'ňŇ', 'ǹǸ', 'ṅṄ', 'ṇṆ', 'ṉṈ', 'ṋṊ', 'ɲƝ', 'ƞȠ', 'ⁿᴺ', 'ᵰᵰ', 'ᶇᶇ', 'ɳɳ', 'ȵȵ', 'ɴɴ'],
  o: ['òÒ', 'óÓ', 'ôÔ', 'õÕ', 'öÖ', 'ōŌ', 'ŏŎ', 'őŐ', 'ǒǑ', 'ǫǪ', 'ǭǬ', 'ȍȌ', 'ȏȎ', 'ȫȪ', 'ȭȬ', 'ȯȮ', 'ȱȰ', 'ṍṌ', 'ṏṎ', 'ṑṐ', 'ṓṒ', 'ốỐ', 'ồỒ', 'ổỔ', 'ỗỖ', 'ộỘ', 'ớỚ', 'ờỜ', 'ởỞ', 'ỡỠ', 'ợỢ', 'ọỌ', 'ỏỎ', 'øØ', 'ǿǾ', 'ꝍꝌ', 'ᵒᴼ'],
  p: ['ṕṔ', 'ṗṖ', 'ƥƤ', 'ᵽⱣ', 'ꝑꝐ', 'ꝓꝒ', 'ᵖᴾ'],
  q: ['ɋɊ', 'ʠʠ', 'ꝙꝘ'],
  r: ['ŕŔ', 'ŗŖ', 'řŘ', 'ȑȐ', 'ȓȒ', 'ṙṘ', 'ṛṚ', 'ṝṜ', 'ṟṞ', 'ɍɌ', 'ɽⱤ', 'ᵲᵲ', 'ᶉᶉ', 'ɼɼ', 'ɾɾ', 'ᵳᵳ', 'ʀʀ', 'ʳᴿ'],
  s: ['śŚ', 'ŝŜ', 'şŞ', 'šŠ', 'șȘ', 'ṡṠ', 'ṣṢ', 'ṥṤ', 'ṧṦ', 'ṩṨ', 'ſſ', 'ᵴᵴ', 'ᶊᶊ', 'ʂʂ', 'ȿȿ'],
  t: ['ţŢ', 'ťŤ', 'ŧŦ', 'țȚ', 'ṫṪ', 'ṭṬ', 'ṯṮ', 'ṱṰ', 'ƭƬ', 'ẗẗ', 'ⱦȾ', 'ᵗᵀ'],
  u: ['ùÙ', 'úÚ', 'ûÛ', 'üÜ', 'ũŨ', 'ūŪ', 'ŭŬ', 'ůŮ', 'űŰ', 'ųŲ', 'ǔǓ', 'ǖǕ', 'ǘǗ', 'ǚǙ', 'ǜǛ', 'ȕȔ', 'ȗȖ', 'ṳṲ', 'ṵṴ', 'ṷṶ', 'ṹṸ', 'ṻṺ', 'ụỤ', 'ủỦ', 'ứỨ', 'ừỪ', 'ửỬ', 'ữỮ', 'ựỰ', 'ʋƲ', 'Ưư', 'Ʉʉ', 'ᵘᵁ', 'ᵾᵾ', 'ᶙᶙ', 'ᴜᴜ'],
  v: ['ṽṼ', 'ṿṾ', 'ꝟꝞ', 'ᵛⱽ'],
  w: ['ŵŴ', 'ẁẀ', 'ẃẂ', 'ẅẄ', 'ẇẆ', 'ẉẈ', 'ⱳⱲ', 'ʷᵂ', 'ẘẘ', 'ƜƜ'],
  x: ['ẋẊ', 'ẍẌ'],
  y: ['ýÝ', 'ÿŸ', 'ŷŶ', 'ȳȲ', 'ẏẎ', 'ỳỲ', 'ỵỴ', 'ỷỶ', 'ỹỸ', 'ƴƳ', 'ẙẙ', 'ɏɎ'],
  z: ['źŹ', 'żŻ', 'žŽ', 'ȥȤ', 'ẑẐ', 'ẓẒ', 'ẕẔ', 'ƶƵ', 'ⱬⱫ', 'ʒƷ', 'ƹƸ', 'ᵶᵶ', 'ᶎᶎ', 'ʐʐ', 'ʑʑ', 'ɀɀ', 'ᴢᴢ', 'ƺƺ']
},
    latinVariety3 = exports.latinVariety3 = {
  ae: ['æ', 'Æ', 'ᴁ', 'ᴭ', 'Ǽ', 'ǽ', 'Ǣ', 'ǣ', 'ᴂ'],
  ao: ['ꜵ', 'Ꜵ'],
  au: ['ꜷ', 'Ꜷ'],
  av: ['ꜹ', 'Ꜹ', 'ꜻ', 'Ꜻ'],
  ay: ['ꜽ', 'Ꜽ'],
  db: ['ȸ'],
  dz: ['Ǳ', 'ǲ', 'ǳ', 'Ǆ', 'ǅ', 'ǆ'],
  ff: ['ﬀ', '␌'],
  ffi: ['ﬃ'],
  ffl: ['ﬄ'],
  fi: ['ﬁ'],
  fl: ['ﬂ'],
  ft: ['ﬅ'],
  ij: ['ĳ', 'Ĳ'],
  lb: ['℔'],
  lj: ['ǉ', 'ǈ', 'Ǉ'],
  ng: ['ŋ', 'Ŋ'],
  nj: ['ǌ', 'ǋ', 'Ǌ'],
  oe: ['œ', 'ɶ', 'Œ'],
  oo: ['ꝏ', 'Ꝏ'],
  ou: ['ȣ', 'Ȣ'],
  qp: ['ȹ'],
  st: ['ﬅ', 'ﬆ'],
  sz: ['ß', 'ẞ'],
  ue: ['ᵫ'],
  vy: ['ꝡ', 'Ꝡ']
},

// 漢数字→大字用
daizi = exports.daizi = {
  kan: ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '百', '千', '万'],
  dai: ['零', '壱', '弐', '参', '肆', '伍', '陸', '漆', '捌', '玖', '拾', '陌', '阡', '萬']
},
    findDK = exports.findDK = new RegExp('([' + daizi.kan.join('') + '])', 'g'),
    findDD = exports.findDD = new RegExp('([' + daizi.dai.join('') + '])', 'g'),
    zero = exports.zero = '零',
    point = exports.point = '点',
    zero2nine = exports.zero2nine = ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九'],
    ten2thou = exports.ten2thou = ['', '十', '百', '千'],
    suffices = exports.suffices = ['', '万', '億', '兆', '京', '垓', '禾予', '穣', '溝', '澗', '正', '載', '極', '恒河沙', '阿僧祇', '那由他', '不可思議', '無量大数'],
    // 𥝱(&#xD855;&#xDF71;)
// アラビア数字→ローマ数字用
roman = exports.roman = ['IVX', 'XLC', 'CDM', 'MPW', 'WFZ', 'Z'],
    romanTh = exports.romanTh = ['0', '00', '000', '01', '1', '10', '100', '1000', '02'],
    romanStrBase = exports.romanStrBase = ['M', 'P', 'W', 'F', 'Z'],
    romanStr1 = exports.romanStr1 = ['ↀ', 'ↁ', 'ↂ', 'ↇ', 'ↈ'],
    romanStr2 = exports.romanStr2 = ['CIↃ', 'IↃↃ', 'CCIↃↃ', 'IↃↃↃ', 'CCCIↃↃↃ'],
    romanUni = exports.romanUni = [['2160', 'I'], ['2161', 'II'], ['2162', 'III'], ['2163', 'IV'], ['2164', 'V'], ['2165', 'VI'], ['2166', 'VII'], ['2167', 'VIII'], ['2168', 'IX'], ['2169', 'X'], ['216a', 'XI'], ['216b', 'XII'], ['2170', 'I'], ['2171', 'II'], ['2172', 'III'], ['2173', 'IV'], ['2174', 'V'], ['2175', 'VI'], ['2176', 'VII'], ['2177', 'VIII'], ['2178', 'IX'], ['2179', 'X'], ['217a', 'XI'], ['217b', 'XII'], ['216c', 'L'], ['216d', 'C'], ['216e', 'D'], ['216f', 'M'], ['217c', 'L'], ['217d', 'C'], ['217e', 'D'], ['217f', 'M'], ['0186', 'Ↄ'], ['0049', 'I']],
    findR2Arr = exports.findR2Arr = romanUni.map(function (r) {
  return r[0];
}),
    findR = exports.findR = new RegExp('[IVXLCD\u2180\u2181\u2182\u2187\u2188I\u2183M\\u' + findR2Arr.join('\\u') + ']+', 'gu'),
    findR2 = exports.findR2 = new RegExp('[\\u' + findR2Arr.join('\\u') + ']', 'gu'),

// サンスクリット用
sanskrit = exports.sanskrit = [[['-'], ['-'], ['्']], [['E', 'LL', 'lRR'], ['ḹ', 'Ḹ'], ['ॣ', 'ॡ']], [['bh'], ['bh', 'Bh'], ['भ']], [['ph'], ['ph', 'Ph'], ['फ']], [['dh'], ['dh', 'Dh'], ['ध']], [['th'], ['th', 'Th'], ['थ']], [['Dh'], ['ḍh', 'Ḍh'], ['ढ']], [['Th'], ['ṭh', 'Ṭh'], ['ठ']], [['jh'], ['jh', 'Jh'], ['झ']], [['ch'], ['ch', 'Ch'], ['छ']], [['gh'], ['gh', 'Gh'], ['घ']], [['kh'], ['kh', 'Kh'], ['ख']], [['L', 'lR'], ['ḷ', 'Ḷ'], ['ॢ', 'ऌ']], [['q', 'RR'], ['ṝ', 'Ṝ'], ['ॄ', 'ॠ']], [['au'], ['au', 'Au'], ['ौ', 'औ']], [['ai'], ['ai', 'Ai'], ['ै', 'ऐ']], [['U', 'uu'], ['ū', 'Ū'], ['ू', 'ऊ']], [['I', 'ii'], ['ī', 'Ī'], ['ी', 'ई']], [['A', 'aa'], ['ā', 'Ā'], ['ा', 'आ']], [['s'], ['s', 'S'], ['स']], [['S'], ['ṣ', 'Ṣ'], ['ष']], [['z'], ['ś', 'Ś'], ['श']], [['v'], ['v', 'V'], ['व']], [['l'], ['l', 'L'], ['ल']], [['r'], ['r', 'R'], ['र']], [['y'], ['y', 'Y'], ['य']], [['m'], ['m', 'M'], ['म']], [['h'], ['h', 'H'], ['ह']], [['b'], ['b', 'B'], ['ब']], [['p'], ['p', 'P'], ['प']], [['n'], ['n', 'N'], ['न']], [['d'], ['d', 'D'], ['द']], [['t'], ['t', 'T'], ['त']], [['N'], ['ṇ', 'Ṇ'], ['ण']], [['D'], ['ḍ', 'Ḍ'], ['ड']], [['T'], ['ṭ', 'Ṭ'], ['ट']], [['J'], ['ñ', 'Ñ'], ['ञ']], [['j'], ['j', 'J'], ['ज']], [['c'], ['c', 'C'], ['च']], [['G'], ['ṅ', 'Ṅ'], ['ङ']], [['g'], ['g', 'G'], ['ग']], [['k'], ['k', 'K'], ['क']], [['H'], ['ḥ', 'Ḥ'], ['ः']], [['M'], ['ṃ', 'Ṃ'], ['ं']], [['o'], ['o', 'O'], ['ो', 'ओ']], [['e'], ['e', 'E'], ['े', 'ए']], [['R'], ['ṛ', 'Ṛ'], ['ृ', 'ऋ']], [['u'], ['u', 'U'], ['ु', 'उ']], [['i'], ['i', 'I'], ['ि', 'इ']], [['a'], ['a', 'A'], ['अ']], [['1'], ['1'], ['१']], [['2'], ['2'], ['२']], [['3'], ['3'], ['३']], [['4'], ['4'], ['४']], [['5'], ['5'], ['५']], [['6'], ['6'], ['६']], [['7'], ['7'], ['७']], [['8'], ['8'], ['८']], [['9'], ['9'], ['९']], [['0'], ['0'], ['०']]],
    sktHarr = exports.sktHarr = sanskrit.map(function (r) {
  return r[0].join('|');
}),
    sktIarr = exports.sktIarr = sanskrit.map(function (r) {
  return r[1].join('|');
}),
    sktSarr = exports.sktSarr = sanskrit.map(function (r) {
  return r[2].join('|');
}),
    sktH = exports.sktH = new RegExp('(' + sktHarr.join('|') + ')+', 'g'),
    sktI = exports.sktI = new RegExp('(' + sktIarr.join('|') + ')+', 'g'),
    sktS = exports.sktS = new RegExp('(' + sktSarr.join('|') + ')+', 'g'),
    sktH2 = exports.sktH2 = new RegExp('(' + sktHarr.join('|') + ')', 'g'),
    sktI2 = exports.sktI2 = new RegExp('(' + sktIarr.join('|') + ')', 'g'),
    sktS2 = exports.sktS2 = new RegExp('(' + sktSarr.join('|') + ')', 'g'),
    sktAddA = exports.sktAddA = new RegExp('([कखगघङचछजझञटठडढणतथदधनपफबभमयरलवशषसह])(?=([ंँःकखगघङचछजझञटठडढणतथदधनपफबभमयरलवशषसह])|$)', 'g'),
    sktAddVirama = exports.sktAddVirama = new RegExp('([कखगघङचछजझञटठडढणतथदधनपफबभमयरलवशषसह])(?=([कखगघङचछजझञटठडढणतथदधनपफबभमयरलवशषसह])|$)', 'g'),
    sktRemoveA = exports.sktRemoveA = new RegExp('([कखगघङचछजझञटठडढणतथदधनपफबभमयरलवशषसह])अ(?=([ंँःकखगघङचछजझञटठडढणतथदधनपफबभमयरलवशषसह])|$)', 'g'),

// 日付連番生成用
DayArr = exports.DayArr = [['Sunday', 'Sun', 'S', '日曜日', '日'], ['Monday', 'Mon', 'M', '月曜日', '月'], ['Tuesday', 'Tue', 'T', '火曜日', '火'], ['Wednesday', 'Wed', 'W', '水曜日', '水'], ['Thursday', 'Thu', 'T', '木曜日', '木'], ['Friday', 'Fri', 'F', '金曜日', '金'], ['Saturday', 'Sat', 'S', '土曜日', '土']],
    MonthArr = exports.MonthArr = [['January', 'Jan', '一月', '睦月'], ['February', 'Feb', '二月', '如月'], ['March', 'Mar', '三月', '弥生'], ['April', 'Apr', '四月', '卯月'], ['May', 'May', '五月', '皐月'], ['June', 'Jun', '六月', '水無月'], ['July', 'Jul', '七月', '文月'], ['August', 'Aug', '八月', '葉月'], ['September', 'Sep', '九月', '長月'], ['October', 'Oct', '十月', '神無月'], ['November', 'Nov', '十一月', '霜月'], ['December', 'Dec', '十二月', '師走']],

// 連続データ用
serialData = exports.serialData = {
  hkana: ['あ', 'い', 'う', 'え', 'お', 'か', 'き', 'く', 'け', 'こ', 'さ', 'し', 'す', 'せ', 'そ', 'た', 'ち', 'つ', 'て', 'と', 'な', 'に', 'ぬ', 'ね', 'の', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'ま', 'み', 'む', 'め', 'も', 'や', 'ゆ', 'よ', 'ら', 'り', 'る', 'れ', 'ろ', 'わ', 'を', 'ん'],
  kkana: ['ア', 'イ', 'ウ', 'エ', 'オ', 'カ', 'キ', 'ク', 'ケ', 'コ', 'サ', 'シ', 'ス', 'セ', 'ソ', 'タ', 'チ', 'ツ', 'テ', 'ト', 'ナ', 'ニ', 'ヌ', 'ネ', 'ノ', 'ハ', 'ヒ', 'フ', 'ヘ', 'ホ', 'マ', 'ミ', 'ム', 'メ', 'モ', 'ヤ', 'ユ', 'ヨ', 'ラ', 'リ', 'ル', 'レ', 'ロ', 'ワ', 'ヲ', 'ン'],
  iroha: ['い', 'ろ', 'は', 'に', 'ほ', 'へ', 'と', 'ち', 'り', 'ぬ', 'る', 'を', 'わ', 'か', 'よ', 'た', 'れ', 'そ', 'つ', 'ね', 'な', 'ら', 'む', 'う', 'ゐ', 'の', 'お', 'く', 'や', 'ま', 'け', 'ふ', 'こ', 'え', 'て', 'あ', 'さ', 'き', 'ゆ', 'め', 'み', 'し', 'ゑ', 'ひ', 'も', 'せ', 'す', 'ん'],
  iroha2: ['イ', 'ロ', 'ハ', 'ニ', 'ホ', 'ヘ', 'ト', 'チ', 'リ', 'ヌ', 'ル', 'ヲ', 'ワ', 'カ', 'ヨ', 'タ', 'レ', 'ソ', 'ツ', 'ネ', 'ナ', 'ラ', 'ム', 'ウ', 'ヰ', 'ノ', 'オ', 'ク', 'ヤ', 'マ', 'ケ', 'フ', 'コ', 'エ', 'テ', 'ア', 'サ', 'キ', 'ユ', 'メ', 'ミ', 'シ', 'ヱ', 'ヒ', 'モ', 'セ', 'ス', 'ン'],
  iroha3: ['以', '呂', '波', '仁', '保', '反', '止', '知', '利', '奴', '留', '遠', '和', '加', '与', '太', '礼', '曽', '川', '称', '奈', '良', '武', '宇', '為', '乃', '於', '久', '也', '末', '計', '不', '古', '衣', '天', '安', '左', '畿', '由', '女', '美', '之', '恵', '比', '毛', '世', '寸', '旡'],
  wcjk: ['日', '月', '火', '水', '木', '金', '土'],
  wen: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
  wen2: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  men: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
  men2: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  alpha: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],
  alpha2: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],
  greek: ['Α', 'Β', 'Γ', 'Δ', 'Ε', 'Ζ', 'Η', 'Θ', 'Ι', 'Κ', 'Λ', 'Μ', 'Ν', 'Ξ', 'Ο', 'Π', 'Ρ', 'Σ', 'Τ', 'Υ', 'Φ', 'Χ', 'Ψ', 'Ω'],
  greek2: ['α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ', 'ι', 'κ', 'λ', 'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω'],
  eto12: ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'],
  eto10: ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'],
  eto60: ['甲子', '乙丑', '丙寅', '丁卯', '戊辰', '己巳', '庚午', '辛未', '壬申', '癸酉', '甲戌', '乙亥', '丙子', '丁丑', '戊寅', '己卯', '庚辰', '辛巳', '壬午', '癸未', '甲申', '乙酉', '丙戌', '丁亥', '戊子', '己丑', '庚寅', '辛卯', '壬辰', '癸巳', '甲午', '乙未', '丙申', '丁酉', '戊戌', '己亥', '庚子', '辛丑', '壬寅', '癸卯', '甲辰', '乙巳', '丙午', '丁未', '戊申', '己酉', '庚戌', '辛亥', '壬子', '癸丑', '甲寅', '乙卯', '丙辰', '丁巳', '戊午', '己未', '庚申', '辛酉', '壬戌', '癸亥']
};

},{}],5:[function(require,module,exports){
'use strict';Object.defineProperty(exports,"__esModule",{value:true});/* eslint no-unused-vars: 0, quote-props: 0, object-property-newline: 0 */var// export const
pinyin=exports.pinyin={'3007':'líng','3400':'qiū','3401':'tiàn','3402':'*','3403':'*','3404':'kuà','3405':'wǔ','3406':'yǐn','3407':'*','3408':'*','3409':'*','3410':'*','3411':'*','3412':'*','3413':'*','3414':'*','3415':'*','3416':'xié','3417':'*','3418':'*','3419':'*','3420':'*','3421':'nuò','3422':'*','3423':'*','3424':'dān','3425':'*','3426':'*','3427':'*','3428':'xù','3429':'xíng','3430':'xìn','3431':'zhěn','3432':'dài','3433':'wù','3434':'pān','3435':'rú','3436':'*','3437':'mǎ','3438':'qiàn','3439':'yì','3440':'*','3441':'zhuō','3442':'fǎng','3443':'ǎo','3444':'wǔ','3445':'zuò','3446':'*','3447':'zhòu','3448':'dòng','3449':'sù','3450':'shū','3451':'*','3452':'*','3453':'*','3454':'xǔ','3455':'*','3456':'*','3457':'shēn','3458':'jiè','3459':'dié','3460':'*','3461':'*','3462':'*','3463':'lán','3464':'miáo','3465':'yì','3466':'lì','3467':'jì','3468':'yǔ','3469':'luó','3470':'huì','3471':'rǎo','3472':'*','3473':'zhòu','3474':'*','3475':'hàn','3476':'xì','3477':'tài','3478':'yáo','3479':'huì','3480':'zhāi','3481':'yǔ','3482':'zhuó','3483':'èr','3484':'rǎn','3485':'qǐ','3486':'chì','3487':'wǔ','3488':'hàn','3489':'tǎng','3490':'*','3491':'kuǐ','3492':'pú','3493':'tà','3494':'shú','3495':'yāng','3496':'ǒu','3497':'tái','3498':'*','3499':'mián','3500':'lüè/qíng','3501':'dēng','3502':'lín','3503':'jué','3504':'sù','3505':'xiào','3506':'zàn','3507':'*','3508':'*','3509':'zhǔ','3510':'*','3511':'chì','3512':'xí','3513':'jiǎn','3514':'*','3515':'jí','3516':'*','3517':'fèi','3518':'chù','3519':'bēng','3520':'xiā','3521':'biē','3522':'jué','3523':'léi','3524':'xìn','3525':'bài','3526':'yǎng','3527':'lǜ','3528':'bèi','3529':'è','3530':'héng','3531':'yǔ','3532':'*','3533':'guǐ','3534':'yì','3535':'xuǎn','3536':'gòng','3537':'lòu','3538':'tī','3539':'lè','3540':'*','3541':'què','3542':'yín','3543':'xī','3544':'zhǐ','3545':'jiá','3546':'hù','3547':'lā','3548':'yǐ','3549':'kè','3550':'xiě','3551':'chú','3552':'wēi','3553':'*','3554':'*','3555':'huàn','3556':'sù','3557':'yòu','3558':'*','3559':'jùn','3560':'shuāng','3561':'hé','3562':'gài','3563':'yǎn','3564':'qiú','3565':'shēn','3566':'huà','3567':'xī','3568':'fàn','3569':'pàng','3570':'xuè','3571':'yóu','3572':'huá','3573':'*','3574':'chén','3575':'guó','3576':'ň/ňg','3577':'huà','3578':'lì','3579':'fá','3580':'lè','3581':'lìn','3582':'yì','3583':'hǒu','3584':'*','3585':'xù','3586':'qú','3587':'ér','3588':'*','3589':'*','3590':'wěi','3591':'xiè','3592':'tí','3593':'hóng','3594':'tǔn','3595':'niè','3596':'niè','3597':'yín','3598':'zhēn','3599':'*','3600':'zuò','3601':'yì','3602':'cí','3603':'*','3604':'lēng','3605':'xián','3606':'tǎi','3607':'róng','3608':'yì','3609':'zhì','3610':'pào','3611':'lì','3612':'*','3613':'lán','3614':'sǎi','3615':'hǎn','3616':'yán','3617':'qū','3618':'*','3619':'yán','3620':'bì','3621':'xiá','3622':'wěng','3623':'xuán','3624':'wān','3625':'yóu','3626':'qín','3627':'xù','3628':'niè','3629':'bì','3630':'zhēn','3631':'tān','3632':'jú','3633':'*','3634':'zuò','3635':'bù','3636':'jié','3637':'ài','3638':'zàng','3639':'cí','3640':'liù','3641':'méi','3642':'duì','3643':'bāng','3644':'bì','3645':'bǎo','3646':'*','3647':'chù','3648':'xià','3649':'tiǎn','3650':'duǒ','3651':'yǔ','3652':'yě','3653':'kuí','3654':'wěi','3655':'kuài','3656':'*','3657':'wēi','3658':'yāo','3659':'lǒng','3660':'yī','3661':'zōng','3662':'mán','3663':'zhàng','3664':'xià','3665':'gùn','3666':'xié','3667':'*','3668':'jì','3669':'liáo','3670':'xiè','3671':'hào','3672':'yǒng','3673':'kǎn','3674':'chàn','3675':'tái','3676':'táng','3677':'zhí','3678':'bào','3679':'méng','3680':'xī','3681':'qiào','3682':'nàng','3683':'yūn','3684':'*','3685':'lóng','3686':'fù','3687':'zōng','3688':'*','3689':'gǔ','3690':'tào','3691':'*','3692':'shǎn','3693':'lǎi','3694':'niè','3695':'fú','3696':'gǎo','3697':'qié','3698':'bàn','3699':'jiā','3700':'*','3701':'*','3702':'fēng','3703':'liàn','3704':'xún','3705':'xù','3706':'mì','3707':'huì','3708':'mù','3709':'yōng','3710':'shù','3711':'fú','3712':'yì','3713':'dá','3714':'*','3715':'lián','3716':'cáo','3717':'cān','3718':'jù','3719':'lù','3720':'cuī','3721':'cōng','3722':'*','3723':'rán','3724':'niǎn','3725':'mái','3726':'xín','3727':'yuè','3728':'nái','3729':'ào','3730':'yuè','3731':'zhì','3732':'wěng','3733':'huái','3734':'mèng','3735':'niǎo','3736':'wǎn','3737':'mí','3738':'niè','3739':'qú','3740':'hào','3741':'xuān','3742':'zhì','3743':'miǎn','3744':'chún','3745':'gòu','3746':'*','3747':'chún','3748':'luán','3749':'zhù','3750':'róng','3751':'máng','3752':'*','3753':'kè','3754':'yǎo','3755':'níng','3756':'yí','3757':'láng','3758':'yóng','3759':'yín','3760':'míng','3761':'zuì','3762':'yǔ','3763':'yì','3764':'gòu','3765':'mǐ','3766':'jùn','3767':'wěn','3768':'*','3769':'kāng','3770':'mián','3771':'mèng','3772':'qǐn','3773':'*','3774':'wán','3775':'dé','3776':'ài','3777':'*','3778':'biàn','3779':'nóu','3780':'huī','3781':'yào','3782':'tuǐ','3783':'jì','3784':'ān','3785':'luò','3786':'jǐ','3787':'wěi','3788':'bō','3789':'zā','3790':'jū','3791':'wěi','3792':'xiè','3793':'qì','3794':'yí','3795':'xiè','3796':'cí','3797':'qiú','3798':'dū','3799':'niào','3800':'dǎo','3801':'*','3802':'áo','3803':'*','3804':'xí','3805':'fú','3806':'dān','3807':'jiù','3808':'rùn','3809':'tóng','3810':'jiào','3811':'zuì','3812':'biǎo','3813':'méng','3814':'bài','3815':'wěi','3816':'yǐ','3817':'ào','3818':'yǔ','3819':'háo','3820':'lú','3821':'niǎo','3822':'huái','3823':'lì','3824':'*','3825':'lǜ','3826':'fēng','3827':'mǐ','3828':'yù','3829':'*','3830':'*','3831':'jì','3832':'bǐ','3833':'*','3834':'rèn','3835':'huāng','3836':'fán','3837':'gé','3838':'kù','3839':'jiè','3840':'bì','3841':'kuǎ','3842':'lì','3843':'huāng','3844':'xún','3845':'nuǒ','3846':'*','3847':'zhé','3848':'wèn','3849':'xián','3850':'*','3851':'qiāo','3852':'zhūn','3853':'kūn','3854':'wù','3855':'yīng','3856':'chuáng','3857':'tí','3858':'lián','3859':'bī','3860':'zhèng','3861':'chú','3862':'màn','3863':'lóng','3864':'*','3865':'yìn','3866':'pīn','3867':'zhèng','3868':'jiān','3869':'luán','3870':'yǔ','3871':'jiǔ','3872':'huán','3873':'zhǐ','3874':'lā','3875':'líng','3876':'zhǐ','3877':'běn','3878':'zhà','3879':'jū','3880':'cì','3881':'chǐ','3882':'yǎn','3883':'láng','3884':'dòu','3885':'lòng','3886':'chán','3887':'*','3888':'tuí','3889':'chá','3890':'*','3891':'tuí','3892':'chá','3893':'yǎo','3894':'zǒng','3895':'*','3896':'pān','3897':'qiào','3898':'lián','3899':'qín','3900':'*','3901':'miǎn','3902':'jí','3903':'fáng','3904':'pèi','3905':'ài','3906':'fàn','3907':'ǎo','3908':'qìn','3909':'qiā','3910':'chān','3911':'yòu','3912':'gāo','3913':'bèn','3914':'fù','3915':'chù','3916':'zhù','3917':'*','3918':'zhòu','3919':'*','3920':'liè','3921':'lì','3922':'yù','3923':'*','3924':'yú','3925':'hài','3926':'lì','3927':'hóu','3928':'gǒng','3929':'kè','3930':'zuò','3931':'fù','3932':'qiè','3933':'běi','3934':'chè','3935':'cí','3936':'máng','3937':'hān','3938':'xì','3939':'qiú','3940':'zhí','3941':'dé','3942':'tè','3943':'mèn','3944':'líng','3945':'shòu','3946':'tuì','3947':'cán','3948':'dié','3949':'chè','3950':'yuàn','3951':'*','3952':'cǎi','3953':'qī','3954':'yù','3955':'lián','3956':'cōng','3957':'*','3958':'*','3959':'*','3960':'xū','3961':'chì','3962':'qiú','3963':'huì','3964':'*','3965':'yú','3966':'qiè','3967':'shùn','3968':'shuì','3969':'duǒ','3970':'sāo','3971':'fěi','3972':'chēn','3973':'yuán','3974':'yí','3975':'hùn','3976':'sè','3977':'yè','3978':'mǐn','3979':'fěn','3980':'féng','3981':'lián','3982':'cháng','3983':'chǎn','3984':'má','3985':'diē','3986':'hū','3987':'lù','3988':'*','3989':'yì','3990':'nì','3991':'xiàn','3992':'lí','3993':'xiàn','3994':'yàn','3995':'lóng','3996':'mèn','3997':'jīn','3998':'jī','3999':'*','4000':'fàn','4001':'yòu','4002':'ān','4003':'tuí','4004':'méng','4005':'shè','4006':'jìn','4007':'gǔ','4008':'jì','4009':'qiáo','4010':'shān','4011':'wò','4012':'qiān','4013':'huàn','4014':'rèn','4015':'zhèn','4016':'tiān','4017':'jué','4018':'xié','4019':'qì','4020':'jù','4021':'chàn','4022':'shùn','4023':'bì','4024':'mào','4025':'shuò','4026':'gǔ','4027':'hǒng','4028':'huà','4029':'luò','4030':'gǔ','4031':'fēng','4032':'mù','4033':'ài','4034':'yǐng','4035':'shùn','4036':'liàng','4037':'jié','4038':'chì','4039':'jié','4040':'*','4041':'liàng','4042':'xiàn','4043':'biāo','4044':'xìng','4045':'měng','4046':'yè','4047':'mì','4048':'qì','4049':'qì','4050':'yīng','4051':'yáng','4052':'jí','4053':'zōng','4054':'xuān','4055':'mín','4056':'lōu','4057':'kǎi','4058':'yǎo','4059':'yǎn','4060':'lián','4061':'*','4062':'xuán','4063':'chuán','4064':'chè','4065':'nì','4066':'qù','4067':'miáo','4068':'huò','4069':'yú','4070':'jiǎng','4071':'kōu','4072':'mái','4073':'mǎng','4074':'zhǎn','4075':'biǎn','4076':'jī','4077':'jué','4078':'náng','4079':'bì','4080':'xī','4081':'chán','4082':'qú','4083':'jiào','4084':'huò','4085':'xiān','4086':'xù','4087':'niǔ','4088':'tóng','4089':'hóu','4090':'zhuō','4091':'jī','4092':'qià','4093':'*','4094':'xìng','4095':'huì','4096':'shí','4097':'kū','4098':'*','4099':'duī','4100':'huò','4101':'yì','4102':'liù','4103':'*','4104':'yīn','4105':'juàn','4106':'huó','4107':'chéng','4108':'dòu','4109':'é','4110':'quàn','4111':'huó','4112':'niè','4113':'huáng','4114':'jǔ','4115':'shè','4116':'*','4117':'*','4118':'péng','4119':'míng','4120':'shàn','4121':'dān','4122':'qí','4123':'*','4124':'lài','4125':'líng','4126':'liǎo','4127':'réng','4128':'yú','4129':'yì','4130':'yá','4131':'fāng','4132':'ruì','4133':'xiān','4134':'*','4135':'*','4136':'bì','4137':'shí','4138':'pò','4139':'nián','4140':'liè','4141':'àn','4142':'hé','4143':'qióng','4144':'lì','4145':'guī','4146':'zì','4147':'sù','4148':'yuàn','4149':'yà','4150':'jiǎn','4151':'ruí','4152':'máng','4153':'jǔ','4154':'zī','4155':'jū','4156':'ān','4157':'suì','4158':'lái','4159':'hùn','4160':'tí','4161':'xǔ','4162':'jiù','4163':'huáng','4164':'qì','4165':'jié','4166':'máo','4167':'yān','4168':'*','4169':'zhǐ','4170':'ěn','4171':'hùn','4172':'qí','4173':'chú','4174':'suǒ','4175':'zhuó','4176':'nòu','4177':'tú','4178':'shēn','4179':'lǒu','4180':'měi','4181':'gāo','4182':'lián','4183':'dào','4184':'zhǎn','4185':'zī','4186':'*','4187':'*','4188':'zhì','4189':'bà','4190':'guó','4191':'chéng','4192':'jiù','4193':'è','4194':'chōng','4195':'yuè','4196':'hóng','4197':'yǎo','4198':'yā','4199':'yáo','4200':'sān','4201':'lún','4202':'píng','4203':'zhǎo','4204':'hán','4205':'yù','4206':'dài','4207':'zhào','4208':'féi','4209':'shà','4210':'guì','4211':'guǎ','4212':'nǎn','4213':'gé','4214':'*','4215':'shí','4216':'kē','4217':'suǒ','4218':'cí','4219':'zhòu','4220':'huǎn','4221':'cōng','4222':'sǎi','4223':'zhèng','4224':'qián','4225':'jīn','4226':'zōng','4227':'wěi','4228':'*','4229':'*','4230':'shāo','4231':'tāo','4232':'bān','4233':'tà','4234':'qiàn','4235':'wēng','4236':'róng','4237':'luò','4238':'hú','4239':'sǒu','4240':'shù','4241':'líng','4242':'lěi','4243':'jiǎng','4244':'léng','4245':'zhì','4246':'diǎo','4247':'*','4248':'sǎn','4249':'gū','4250':'kū','4251':'wú','4252':'fán','4253':'luò','4254':'cān','4255':'céng','4256':'líng','4257':'yī','4258':'cóng','4259':'yún','4260':'wéi','4261':'tán','4262':'sè','4263':'xiè','4264':'sǒu','4265':'sǒng','4266':'qiān','4267':'liú','4268':'yì','4269':'*','4270':'xiào','4271':'ōu','4272':'mí','4273':'xiān','4274':'ráng','4275':'zhuàn','4276':'shuāng','4277':'yán','4278':'biàn','4279':'líng','4280':'hú','4281':'*','4282':'cè','4283':'pèi','4284':'qióng','4285':'míng','4286':'jiù','4287':'bù','4288':'méi','4289':'sǎn','4290':'hún','4291':'xiǎng','4292':'*','4293':'shì','4294':'yíng','4295':'*','4296':'nǎn','4297':'huáng','4298':'jiù','4299':'yān','4300':'kē','4301':'yāo','4302':'òu','4303':'xiāo','4304':'gěng','4305':'táng','4306':'guì','4307':'huì','4308':'tā','4309':'*','4310':'mì','4311':'jiān','4312':'lù','4313':'fán','4314':'ōu','4315':'mí','4316':'jié','4317':'fǔ','4318':'biè','4319':'huàng','4320':'jiān','4321':'tǐ','4322':'líng','4323':'zuǎn','4324':'shī','4325':'yǐn','4326':'dào','4327':'chóu','4328':'cā','4329':'miè','4330':'niè','4331':'luò','4332':'*','4333':'shī','4334':'luò','4335':'zhú','4336':'*','4337':'chōu','4338':'juàn','4339':'jiǒng','4340':'lán','4341':'suì','4342':'yú','4343':'yóu','4344':'diǎn','4345':'líng','4346':'zhù','4347':'tà','4348':'píng','4349':'zhǎi','4350':'hǎn','4351':'hǎn','4352':'mǒu','4353':'hù','4354':'gōng','4355':'dī','4356':'fú','4357':'xuàn','4358':'mí','4359':'méi','4360':'lí','4361':'lù','4362':'wú','4363':'léi','4364':'jǐ','4365':'lì','4366':'lí','4367':'*','4368':'pō','4369':'yǎng','4370':'*','4371':'xú','4372':'nái','4373':'què','4374':'wěi','4375':'zhēng','4376':'dōng','4377':'wěi','4378':'bó','4379':'*','4380':'xuè','4381':'hú','4382':'bǎo','4383':'rǎn','4384':'xiāo','4385':'pò','4386':'liào','4387':'zhōu','4388':'yì','4389':'xù','4390':'chǎo','4391':'lù','4392':'zhǎn','4393':'tà','4394':'fū','4395':'hōng','4396':'zēng','4397':'qiáo','4398':'sù','4399':'pīn','4400':'jì','4401':'zhuó','4402':'lù','4403':'jùn','4404':'xiàn','4405':'xī','4406':'cǎi','4407':'wěn','4408':'zhí','4409':'zì','4410':'qiū','4411':'zhé','4412':'zhā','4413':'róu','4414':'bǐn','4415':'jí','4416':'xī','4417':'zhū','4418':'jué','4419':'gé','4420':'huǎng','4421':'qí','4422':'zhù','4423':'sǔn','4424':'chāi','4425':'wěng','4426':'kē','4427':'kào','4428':'gǔ','4429':'gāi','4430':'xiū','4431':'zhài','4432':'zhé','4433':'yú','4434':'guì','4435':'gōng','4436':'zān','4437':'dān','4438':'huò','4439':'sōu','4440':'pì','4441':'wù','4442':'ǎi','4443':'méng','4444':'pì','4445':'méng','4446':'yǎng','4447':'zhì','4448':'bó','4449':'yíng','4450':'zhěn','4451':'pú','4452':'*','4453':'tái','4454':'fèi','4455':'shǔ','4456':'*','4457':'dàng','4458':'cuó','4459':'tān','4460':'liǎo','4461':'*','4462':'*','4463':'chēn','4464':'jìn','4465':'è','4466':'gōu','4467':'fú','4468':'duò','4469':'*','4470':'bù','4471':'wǎn','4472':'zhào','4473':'lún','4474':'qí','4475':'mù','4476':'qiàn','4477':'*','4478':'zōng','4479':'sōu','4480':'bù','4481':'xí','4482':'jiǎng','4483':'cào','4484':'fù','4485':'téng','4486':'chè','4487':'fù','4488':'fèi','4489':'wǔ','4490':'méng','4491':'cǎo','4492':'tiáo','4493':'kǎi','4494':'bài','4495':'xiǎo','4496':'xìn','4497':'qì','4498':'*','4499':'*','4500':'*','4501':'lì','4502':'zǐ','4503':'zǔ','4504':'yáo','4505':'gē','4506':'lí','4507':'qǐ','4508':'gòng','4509':'lì','4510':'jiān','4511':'xié','4512':'bèi','4513':'xǔ','4514':'jìng','4515':'pú','4516':'líng','4517':'xiáng','4518':'zuò','4519':'diào','4520':'shǎo','4521':'yú','4522':'huá','4523':'lí','4524':'pā','4525':'*','4526':'*','4527':'lí','4528':'*','4529':'*','4530':'fù','4531':'yī','4532':'dēng','4533':'rán','4534':'cè','4535':'*','4536':'tí','4537':'qín','4538':'biǎo','4539':'suì','4540':'kuǎn','4541':'fěi','4542':'*','4543':'yìn','4544':'*','4545':'sǎo','4546':'dòu','4547':'huì','4548':'xiè','4549':'zé','4550':'*','4551':'jùn','4552':'jiā','4553':'chá','4554':'xián','4555':'màn','4556':'*','4557':'bì','4558':'líng','4559':'jié','4560':'fèi','4561':'lǘ','4562':'zhǎ','4563':'hé','4564':'jī','4565':'nǐ','4566':'yíng','4567':'xiào','4568':'téng','4569':'lǎo','4570':'fán','4571':'tóu','4572':'lǐn','4573':'mí','4574':'zhuó','4575':'xié','4576':'hù','4577':'mí','4578':'jiē','4579':'zá','4580':'*','4581':'yì','4582':'luán','4583':'yuè','4584':'rán','4585':'líng','4586':'niàng','4587':'yù','4588':'nüè','4589':'*','4590':'yín','4591':'mì','4592':'xī','4593':'nà','4594':'kǎn','4595':'zǔ','4596':'xiá','4597':'yán','4598':'tú','4599':'tī','4600':'fù','4601':'gé','4602':'*','4603':'mò','4604':'zhù','4605':'nái','4606':'xiǎn','4607':'wén','4608':'lì','4609':'cán','4610':'nǜ','4611':'mài','4612':'zuī','4613':'kàn','4614':'kā','4615':'háng','4616':'*','4617':'*','4618':'yù','4619':'wèi','4620':'fú','4621':'bǐ','4622':'zhǔ','4623':'zǐ','4624':'shù','4625':'xiá','4626':'ní','4627':'*','4628':'jiǎo','4629':'xún','4630':'shān','4631':'yù','4632':'*','4633':'jīn','4634':'*','4635':'lù','4636':'hān','4637':'biē','4638':'yì','4639':'zuì','4640':'běng','4641':'cán','4642':'*','4643':'duò','4644':'qì','4645':'yāo','4646':'kuì','4647':'ruán','4648':'hóu','4649':'xún','4650':'kè','4651':'cuī','4652':'xù','4653':'bǎi','4654':'ōu','4655':'zǒng','4656':'*','4657':'tì','4658':'chǔ','4659':'chí','4660':'jué','4661':'kuì','4662':'zèng','4663':'sà','4664':'duǒ','4665':'líng','4666':'méng','4667':'*','4668':'guǒ','4669':'méng','4670':'lí','4671':'dú','4672':'*','4673':'biāo','4674':'*','4675':'xī','4676':'*','4677':'dé','4678':'dé','4679':'xiàn','4680':'*','4681':'*','4682':'hè','4683':'yóu','4684':'lù','4685':'lài','4686':'yǐng','4687':'shěng','4688':'juàn','4689':'qì','4690':'jí','4691':'mái','4692':'chuáng','4693':'niǎn','4694':'bīn','4695':'lì','4696':'líng','4697':'gāng','4698':'chéng','4699':'xuān','4700':'nǎo','4701':'xì','4702':'*','4703':'duī','4704':'chí','4705':'wéi','4706':'zhé','4707':'gǔn','4708':'chāo','4709':'chī','4710':'huī','4711':'wù','4712':'ào','4713':'shè','4714':'suí','4715':'mài','4716':'tàn','4717':'xìn','4718':'jǐng','4719':'án','4720':'chè','4721':'yù','4722':'xiǎn','4723':'xīn','4724':'*','4725':'*','4726':'*','4727':'nǎo','4728':'*','4729':'yàn','4730':'*','4731':'mǎn','4732':'liè','4733':'*','4734':'chù','4735':'chǐ','4736':'xiáng','4737':'qīn','4738':'měi','4739':'shù','4740':'liú','4741':'láo','4742':'shù','4743':'zhé','4744':'shuāng','4745':'huī','4746':'*','4747':'*','4748':'è','4749':'*','4750':'wéi','4751':'chōng','4752':'zhù','4753':'liè','4754':'*','4755':'zhé','4756':'zhǎo','4757':'*','4758':'yì','4759':'chū','4760':'huán','4761':'màn','4762':'màn','4763':'qú','4764':'lǎo','4765':'háo','4766':'zhōng','4767':'mín','4768':'xián','4769':'zhèn','4770':'zhì','4771':'xié','4772':'jìn','4773':'cán','4774':'*','4775':'bù','4776':'liáng','4777':'zhī','4778':'jì','4779':'wǎn','4780':'hòu','4781':'yàn','4782':'ruǎn','4783':'zhì','4784':'biào','4785':'yí','4786':'suǒ','4787':'dié','4788':'guì','4789':'shèng','4790':'chǔn','4791':'hóng','4792':'dòng','4793':'chēng','4794':'wěi','4795':'rú','4796':'shǔ','4797':'cāi','4798':'jí','4799':'zá','4800':'tāng','4801':'*','4802':'chú','4803':'liǎng','4804':'tiǎn','4805':'kǔn','4806':'cháng','4807':'jué','4808':'tú','4809':'huàn','4810':'qù','4811':'kuǐ','4812':'hú','4813':'qiū','4814':'suì','4815':'cāi','4816':'*','4817':'qiù','4818':'pì','4819':'páng','4820':'chì','4821':'cuó','4822':'mèng','4823':'xuǎn','4824':'duǒ','4825':'bié','4826':'zhè','4827':'chú','4828':'chàn','4829':'guì','4830':'quán','4831':'zhú','4832':'líng','4833':'chēn','4834':'zhěn','4835':'fù','4836':'shè','4837':'tiǎo','4838':'kuā','4839':'ái','4840':'zhǎn','4841':'lǒng','4842':'jiū','4843':'lì','4844':'*','4845':'chūn','4846':'róng','4847':'yuè','4848':'jué','4849':'kǎng','4850':'tuó','4851':'mín','4852':'tián','4853':'juàn','4854':'qǐ','4855':'zhěng','4856':'qìng','4857':'gǒng','4858':'tián','4859':'láng','4860':'*','4861':'xié','4862':'biàn','4863':'hūn','4864':'zhū','4865':'róng','4866':'sǎng','4867':'wū','4868':'chà','4869':'kēng','4870':'kēng','4871':'zhuǎn','4872':'chán','4873':'sī','4874':'chōng','4875':'suì','4876':'bèi','4877':'kài','4878':'*','4879':'zhì','4880':'qì','4881':'yuè','4882':'*','4883':'yì','4884':'xǐ','4885':'chén','4886':'*','4887':'rǒng','4888':'chén','4889':'nóng','4890':'cú','4891':'dǐ','4892':'jiāo','4893':'yú','4894':'hé','4895':'xù','4896':'yù','4897':'qū','4898':'*','4899':'bài','4900':'*','4901':'cén','4902':'méi','4903':'yīn','4904':'miǎn','4905':'tú','4906':'kuí','4907':'*','4908':'*','4909':'mì','4910':'jǐn','4911':'wàng','4912':'jì','4913':'méng','4914':'jiàn','4915':'xuè','4916':'bào','4917':'gǎn','4918':'chǎn','4919':'lì','4920':'zhǐ','4921':'rǎn','4922':'*','4923':'lüè','4924':'kāi','4925':'guǐ','4926':'yuè','4927':'huì','4928':'pì','4929':'chá','4930':'yíng','4931':'shì','4932':'chì','4933':'yè','4934':'hán','4935':'fèi','4936':'yè','4937':'yǎn','4938':'zuàn','4939':'sōu','4940':'chǎn','4941':'hán','4942':'mèng','4943':'yuè','4944':'cù','4945':'qiàn','4946':'jǐn','4947':'shàn','4948':'mǔ','4949':'yuān','4950':'móu','4951':'wàn','4952':'jiàng','4953':'qī','4954':'sù','4955':'piě','4956':'tián','4957':'kuǎn','4958':'cù','4959':'suì','4960':'*','4961':'yè','4962':'lóng','4963':'záo','4964':'báo','4965':'lián','4966':'*','4967':'huán','4968':'lǜ','4969':'wéi','4970':'méng','4971':'xiě','4972':'ōu','4973':'yōu','4974':'*','4975':'xiǎo','4976':'lì','4977':'zhá','4978':'mí','4979':'*','4980':'*','4981':'*','4982':'shàn','4983':'zhuō','4984':'*','4985':'shàn','4986':'jué','4987':'jì','4988':'jiē','4989':'*','4990':'tǐng','4991':'xuè','4992':'dàng','4993':'zhān','4994':'tǎn','4995':'pēng','4996':'xié','4997':'xù','4998':'xiàn','4999':'sì','5000':'chāng','5001':'zhī','5002':'bìng','5003':'zán','5004':'yáo','5005':'cuì','5006':'liǎ/liǎng','5007':'wǎn','5008':'lái','5009':'cāng','5010':'shū','5011':'men/mén','5012':'dǎo/dào','5013':'tán','5014':'jué/juè','5015':'chuí','5016':'xìng','5017':'péng','5018':'tǎng','5019':'hòu','5020':'xū','5021':'chàng','5022':'jié','5023':'fǎng','5024':'zhí','5025':'kōng/kǒng','5026':'juàn','5027':'zōng','5028':'jù','5029':'qiàn','5030':'léng','5031':'hùn','5032':'dōng','5033':'zì','5034':'bèn','5035':'wǔ','5036':'jù/jū','5037':'nài','5038':'cǎi','5039':'jiǎn','5040':'yīng','5041':'chēng/chèng','5042':'qián','5043':'yǎn','5044':'nuàn','5045':'zhòng','5046':'chǔn','5047':'jiǎ/jià','5048':'jié/jì','5049':'wěi','5050':'yàn','5051':'fēng','5052':'tǎng','5053':'wò','5054':'è','5055':'xié','5056':'chě','5057':'shěng','5058':'kǎn','5059':'dì','5060':'yǎo','5061':'zhàn','5062':'qiū','5063':'yān','5064':'yóu','5065':'jiàn','5066':'xǔ','5067':'zhā','5068':'chāi','5069':'fù','5070':'xiè','5071':'xún','5072':'sī/cāi','5073':'duān','5074':'cè','5075':'zhēn','5076':'ǒu','5077':'tōu','5078':'tōu','5079':'bèi','5080':'kuǐ','5081':'sǒu','5082':'chǐ','5083':'sù','5084':'xiā','5085':'fù','5086':'yuàn','5087':'rǒng','5088':'lì','5089':'rù','5090':'hāo','5091':'jié','5092':'xī','5093':'shān','5094':'qiàn','5095':'jué','5096':'cāng','5097':'chù','5098':'sǎn','5099':'bèi','5100':'yí','5101':'jùn/juàn','5102':'nóng','5103':'shàn','5104':'yì','5105':'dāng','5106':'jǐng','5107':'xuān','5108':'kuài','5109':'jiǎn','5110':'bìn/bīn','5111':'àn','5112':'rú','5113':'tái','5114':'chóu','5115':'chái','5116':'lán','5117':'nǐ','5118':'jǐn','5119':'qiān','5120':'liè','5121':'lěi','5122':'lǚ','5123':'kuǎng','5124':'bào','5125':'dú','5126':'biāo','5127':'zǎn','5128':'zhí','5129':'sì','5130':'wěi','5131':'lóng','5132':'chǔ','5133':'chàn','5134':'ráng','5135':'shù','5136':'huì','5137':'lì','5138':'luó','5139':'zǎn/zuǎn','5140':'wù','5141':'yǔn','5142':'zān','5143':'yuán','5144':'xiōng','5145':'chōng','5146':'zhào','5147':'xiōng','5148':'xiān','5149':'guāng','5150':'ér','5151':'duì','5152':'ér','5153':'jīn','5154':'tù','5155':'sì','5156':'yǎn','5157':'yǎn','5158':'shǐ','5159':'shí/kè','5160':'dōu','5161':'bǎi/kè','5162':'jīng','5163':'lǐ','5164':'kuàng','5165':'rù','5166':'wáng/wú','5167':'nèi','5168':'quán','5169':'liǎng','5170':'lán','5171':'gòng','5172':'tiān','5173':'guān','5174':'xīng/xìng','5175':'bīng','5176':'qí','5177':'jù','5178':'diǎn','5179':'zī/cí','5180':'jì','5181':'chǎn','5182':'jiōng','5183':'mào','5184':'rǎn','5185':'nèi','5186':'yuán','5187':'mǎo/mǒu','5188':'gāng','5189':'rǎn','5190':'mào/mò','5191':'zhòu','5192':'mào','5193':'gòu','5194':'xǔ','5195':'miǎn','5196':'mì','5197':'rǒng','5198':'yín','5199':'xiě','5200':'dāo','5201':'diāo','5202':'dāo','5203':'rèn','5204':'rèn','5205':'chuāng','5206':'fēn/fèn','5207':'qiē/qiè','5208':'yì','5209':'jì','5210':'dǎn','5211':'xíng','5212':'huá/huà','5213':'wán','5214':'jué','5215':'lí','5216':'yuè','5217':'liè','5218':'liú','5219':'zé','5220':'shān','5221':'mǐn','5222':'líng','5223':'zhōng','5224':'pàn','5225':'bié','5226':'jié','5227':'jié','5228':'bào/páo','5229':'lì','5230':'dào','5231':'chuàng','5232':'kuī','5233':'kū','5234':'duò','5235':'èr','5236':'zhì','5237':'shuā','5238':'quàn/xuàn','5239':'chà/shā','5240':'kǎi','5241':'duò','5242':'jì','5243':'tì','5244':'jǐng','5245':'lóu','5246':'luó','5247':'zé','5248':'yuān','5249':'cuò','5250':'guǎ','5251':'jiàn','5252':'cuò','5253':'lí','5254':'tī','5255':'fèi','5256':'pōu','5257':'chǎn','5258':'qí','5259':'chuàng','5260':'qíng','5261':'yǎn/shàn','5262':'zhuó','5263':'jiàn','5264':'jì','5265':'bō/bāo','5266':'yān','5267':'jù','5268':'huò','5269':'shèng','5270':'shèng','5271':'jiàn','5272':'gē','5273':'zhá','5274':'kǎi','5275':'chuàng/chuāng','5276':'juān','5277':'chǎn','5278':'tuán/zhuān','5279':'lù','5280':'guā','5281':'qiāo','5282':'jué','5283':'huà/huá','5284':'zhá','5285':'zhuó','5286':'lián','5287':'jù','5288':'pī/pǐ','5289':'liú','5290':'huō','5291':'jì','5292':'jiàn','5293':'yì','5294':'jiàn','5295':'zhì','5296':'chán','5297':'cuán','5298':'mó','5299':'lí','5300':'yún','5301':'qián','5302':'bì/xiōng','5303':'gài','5304':'gài','5305':'bāo','5306':'cōng','5307':'yì','5308':'xiōng','5309':'pēng','5310':'fú','5311':'gōng','5312':'dá','5313':'jiù','5314':'qiōng','5315':'bǐ','5316':'huà','5317':'běi','5318':'nǎo','5319':'chí/shi','5320':'jiàng','5321':'kuāng','5322':'hū','5323':'xiá','5324':'qū','5325':'fán','5326':'guǐ','5327':'qiè','5328':'cáng/zàng','5329':'kuāng','5330':'dān','5331':'kuì','5332':'lián','5333':'lián','5334':'suǎn','5335':'dú','5336':'jiù','5337':'qú','5338':'xì','5339':'pǐ','5340':'qū/ōu','5341':'shí','5342':'xìn','5343':'qiān','5344':'niàn','5345':'sà','5346':'zú','5347':'shēng','5348':'wǔ','5349':'huì','5350':'wàn','5351':'bēi','5352':'zú','5353':'zhuó','5354':'xié','5355':'dān/chán/shàn','5356':'mài','5357':'nán','5358':'dān/chán','5359':'jí','5360':'zhān/zhàn','5361':'qiǎ/kǎ','5362':'lú','5363':'yǒu','5364':'lǔ','5365':'xī','5366':'guà','5367':'wò','5368':'xiè','5369':'jié','5370':'yìn','5371':'wēi','5372':'shào','5373':'jí','5374':'què','5375':'luǎn','5376':'shì','5377':'juàn/juǎn','5378':'xiè','5379':'xù','5380':'xī','5381':'sān','5382':'chǎng','5383':'hǎn','5384':'è','5385':'tīng','5386':'lì','5387':'zhé','5388':'ān/chǎng','5389':'lì','5390':'páng','5391':'tīng','5392':'kè','5393':'yá','5394':'zhì','5395':'cè','5396':'páng','5397':'tí','5398':'lí','5399':'shè','5400':'miē','5401':'xū/yù','5402':'máng','5403':'chī','5404':'gè','5405':'xuān','5406':'yāo','5407':'zǐ','5408':'hé/gě','5409':'jí','5410':'tǔ/tù','5411':'xiàng','5412':'zhà/zhā','5413':'xià/hè','5414':'yě','5415':'lǚ','5416':'ā','5417':'ma/mǎ','5418':'ǒu','5419':'xuē','5420':'fèi','5421':'bǐ','5422':'qìn','5423':'qìn','5424':'jiè','5425':'pōu','5426':'fǒu/pǐ','5427':'ba/bā','5428':'dūn','5429':'fēn','5430':'hū','5431':'zhī/zī','5432':'yǐn','5433':'wú','5434':'wú','5435':'chǎo/chāo','5436':'nà','5437':'chuò','5438':'xī','5439':'chuī','5440':'yā/ya','5441':'jùn','5442':'lǚ','5443':'è/e','5444':'gé','5445':'méi','5446':'dāi','5447':'qǐ','5448':'chéng','5449':'wú','5450':'nà','5451':'tūn','5452':'ḿ','5453':'yì','5454':'dāi','5455':'ǒu','5456':'lì','5457':'bei','5458':'yuán/yún/yùn','5459':'guō','5460':'pěn','5461':'wěn','5462':'ní/ne','5463':'móu','5464':'lìng','5465':'rǎn','5466':'yōu','5467':'dǐ','5468':'zhōu','5469':'shì','5470':'zǐ','5471':'guā','5472':'cī','5473':'wèi','5474':'xū','5475':'hē/kē','5476':'náo','5477':'xiā','5478':'pēi','5479':'yì','5480':'jǔ','5481':'gān','5482':'zā','5483':'tuō','5484':'duō','5485':'pǒu','5486':'páo','5487':'bié','5488':'fú','5489':'bì/fú','5490':'fù','5491':'dā','5492':'zhòu','5493':'wǎ','5494':'kǎ','5495':'gū','5496':'kā/gā','5497':'zuǒ','5498':'bù','5499':'lóng','5500':'yòu','5501':'yàn','5502':'gǔ','5503':'gǔ','5504':'bài/bei','5505':'hān','5506':'suō','5507':'chún','5508':'yì','5509':'āi/ài','5510':'táng','5511':'zuò','5512':'miū','5513':'chē','5514':'wú','5515':'zào','5516':'yā','5517':'dǒu','5518':'qǐ','5519':'dí','5520':'láo','5521':'liǎng','5522':'suǒ','5523':'zào','5524':'huàn','5525':'lang','5526':'gòu','5527':'jī','5528':'zuǒ','5529':'wō','5530':'shuā','5531':'chàng','5532':'ér','5533':'lì','5534':'qiàng','5535':'ǎn','5536':'jiè','5537':'yō','5538':'niàn','5539':'yú','5540':'ái','5541':'zhōu/zhāo','5542':'nòu','5543':'kěn','5544':'zhuó','5545':'zhuó','5546':'shāng','5547':'dī','5548':'hèng','5549':'lín','5550':'cuì','5551':'jiē','5552':'hū','5553':'qǐ','5554':'qǐ','5555':'táo','5556':'dàn','5557':'dàn','5558':'wǎn','5559':'zǐ','5560':'zhé','5561':'fēi','5562':'liǎng','5563':'xián','5564':'pí','5565':'shá','5566':'la/lā','5567':'zé','5568':'qīng','5569':'guà','5570':'luō','5571':'yān','5572':'dì','5573':'quán','5574':'tān/chǎn','5575':'bo','5576':'dìng','5577':'lāng','5578':'xiào','5579':'jú','5580':'kā','5581':'yóng','5582':'wèi','5583':'nán','5584':'shàn','5585':'yù','5586':'zhé','5587':'lǎ','5588':'jiē','5589':'hóu','5590':'yù','5591':'yīn','5592':'zǎn','5593':'yāo','5594':'wō/ō','5595':'miǎn','5596':'hú','5597':'yǔn','5598':'chuǎn','5599':'huì','5600':'dí/dī','5601':'qī','5602':'jiào','5603':'chōng','5604':'jiāo','5605':'kǎi','5606':'tàn','5607':'sān','5608':'cáo','5609':'jiā','5610':'xiāo','5611':'hū','5612':'huì','5613':'guō','5614':'ōu/ǒu/òu','5615':'xiān','5616':'zé','5617':'cháng','5618':'xū','5619':'pó','5620':'gā','5621':'tāng','5622':'yě','5623':'bēng','5624':'yīng','5625':'sāi','5626':'jiào','5627':'mì','5628':'xiào','5629':'huā/huá/yè','5630':'jī','5631':'zhǔ','5632':'cháo','5633':'kuì','5634':'zuǐ','5635':'xiāo','5636':'sī','5637':'háo','5638':'fǔ/ḿ','5639':'liáo','5640':'xùn','5641':'wù','5642':'zǔn','5643':'pán','5644':'chī','5645':'kuī','5646':'cǎn','5647':'zǎn','5648':'cù','5649':'dàn','5650':'qì','5651':'háo','5652':'lián','5653':'xū/shī','5654':'dēng','5655':'huī','5656':'yín','5657':'pū','5658':'juē','5659':'qín','5660':'dā','5661':'zhān','5662':'ō','5663':'zhòu','5664':'jìn','5665':'nóng','5666':'huì/yuē','5667':'huì','5668':'qì','5669':'è','5670':'yōng','5671':'xué','5672':'kuài','5673':'yǔ','5674':'pēn/pèn','5675':'dào','5676':'gá','5677':'xīn','5678':'dūn/dùn','5679':'dāng','5680':'níng','5681':'dí','5682':'hǎn','5683':'tà','5684':'huò/huō/ǒ','5685':'rú','5686':'hāo','5687':'xià/hè','5688':'yàn','5689':'duō','5690':'cháng','5691':'xūn','5692':'me/mē','5693':'cā/chā','5694':'tì','5695':'lū','5696':'huì','5697':'bào','5698':'yōu','5699':'niè','5700':'guó','5701':'yín','5702':'hùn','5703':'pǔ','5704':'yǔ','5705':'hán','5706':'yuán','5707':'lún','5708':'quān/juān/juàn','5709':'yǔ','5710':'kū','5711':'pǔ','5712':'yuán','5713':'yuán','5714':'è','5715':'tú/shū/guǎn','5716':'tú','5717':'tú','5718':'tuán','5719':'lüè','5720':'yà','5721':'tǔ','5722':'tǐng','5723':'shèng','5724':'yán','5725':'lú','5726':'kuài','5727':'yā/yà','5728':'zài','5729':'wéi/xū','5730':'dì/de','5731':'qiān','5732':'qiān','5733':'zhèn','5734':'zhuó/sháo','5735':'dàng','5736':'qià','5737':'xià','5738':'shān','5739':'kuàng','5740':'zhǐ','5741':'zhǐ','5742':'bǎn','5743':'xūn','5744':'tóu','5745':'qǐn','5746':'fén','5747':'jūn','5748':'kēng','5749':'dùn','5750':'zuò','5751':'kēng','5752':'bì','5753':'xíng','5754':'dì','5755':'jīng','5756':'jì','5757':'kuài','5758':'dǐ','5759':'jīng','5760':'zhuì','5761':'pō','5762':'pǎn','5763':'tāng','5764':'kūn','5765':'qū','5766':'tǎn','5767':'zhí','5768':'tuó','5769':'gān','5770':'jiōng','5771':'yāng','5772':'fó','5773':'ào','5774':'liù','5775':'qiū','5776':'mù','5777':'kě/kē','5778':'gòu','5779':'xuè','5780':'hū','5781':'zhì','5782':'chuí','5783':'lā','5784':'lǒng','5785':'lǒng','5786':'lú','5787':'ào','5788':'dài/fá','5789':'páo','5790':'cí','5791':'chǐ','5792':'lěi','5793':'gāi','5794':'yīn','5795':'hòu','5796':'duī','5797':'zhào','5798':'fú','5799':'guāng','5800':'kū/jué','5801':'kě','5802':'táng','5803':'kūn','5804':'nì','5805':'jiān','5806':'duī','5807':'jǐn','5808':'gāng','5809':'yù','5810':'yá','5811':'qiàn','5812':'kūn','5813':'àn','5814':'chēn','5815':'duò','5816':'nǎo','5817':'tū','5818':'chéng','5819':'yīn','5820':'hòu','5821':'bǎo/bǔ/pù','5822':'bǎo','5823':'yú','5824':'dī','5825':'máo','5826':'jiē','5827':'ruán','5828':'è/ài','5829':'gèng','5830':'yàn','5831':'bào','5832':'jí','5833':'méi','5834':'cháng/chǎng','5835':'dǔ','5836':'tuō','5837':'ǎn','5838':'féng','5839':'zhòng','5840':'píng','5841':'lěi','5842':'gǎng','5843':'huāng','5844':'léng','5845':'duàn','5846':'wān','5847':'xuān','5848':'jì','5849':'jí','5850':'sù','5851':'sù','5852':'shí','5853':'mì','5854':'tǎ','5855':'wěng','5856':'chéng','5857':'tú','5858':'táng','5859':'qiāo','5860':'duī','5861':'tián','5862':'wù','5863':'chěng','5864':'xūn/xuān','5865':'gé','5866':'zhèn','5867':'ài','5868':'gōng','5869':'yán','5870':'hǎi','5871':'lǎng','5872':'cháng/chǎng','5873':'péng','5874':'bēng','5875':'chén','5876':'lù','5877':'lǔ','5878':'ōu','5879':'qiàn','5880':'chí','5881':'màn','5882':'biāo','5883':'jìng','5884':'cè','5885':'shù','5886':'dì','5887':'zhàng','5888':'kàn','5889':'yōng','5890':'jǐn','5891':'dī','5892':'shāng','5893':'mù','5894':'cuī','5895':'yàn','5896':'tǎ/da','5897':'zēng','5898':'qí','5899':'qiáng','5900':'shòu','5901':'yī','5902':'zhǐ','5903':'gū','5904':'chù/chǔ','5905':'xiáng','5906':'féng','5907':'bèi','5908':'zhāi','5909':'biàn','5910':'xiòng','5911':'xiè','5912':'náo','5913':'xià','5914':'kuí','5915':'xī','5916':'wài','5917':'yuàn','5918':'mǎo','5919':'sù','5920':'gòu','5921':'qì','5922':'mèng','5923':'mèng','5924':'yín','5925':'huǒ','5926':'chèn','5927':'dà/dài','5928':'zè','5929':'tiān','5930':'gǎo','5931':'shī','5932':'tāo/běn','5933':'tài','5934':'tóu','5935':'yǎn','5936':'bǐ','5937':'yí','5938':'kuā','5939':'jiā/jiá/gā','5940':'ēn/máng','5941':'lián','5942':'huàn','5943':'dī','5944':'yǎn','5945':'pào','5946':'juàn','5947':'qí/jī','5948':'nài','5949':'fèng','5950':'huàn','5951':'qì','5952':'kāi','5953':'shē','5954':'bēn/bèn','5955':'yì','5956':'jiǎng','5957':'tào','5958':'zhuǎng','5959':'běn','5960':'diàn','5961':'ào','5962':'shē','5963':'wēng','5964':'pǎn','5965':'ào','5966':'wù','5967':'ào','5968':'jiǎng','5969':'lián','5970':'bèi','5971':'lián','5972':'chě','5973':'nǚ','5974':'nú','5975':'dǐng','5976':'nǎi','5977':'qiān','5978':'jiān','5979':'tā','5980':'jǐ','5981':'shuò','5982':'rú','5983':'fēi','5984':'wàng','5985':'hóng','5986':'zhuāng','5987':'fù','5988':'mā','5989':'dān','5990':'zhōng','5991':'pā','5992':'dù','5993':'jì','5994':'kēng','5995':'zhòng','5996':'yāo','5997':'jìn','5998':'yún','5999':'miào','6000':'huái','6001':'tài','6002':'sǒng','6003':'wǔ','6004':'òu','6005':'chàng','6006':'chuàng','6007':'jù','6008':'yì','6009':'bǎo','6010':'kòu','6011':'bàn','6012':'nù','6013':'náo','6014':'zhēng','6015':'pà','6016':'bù','6017':'tiē','6018':'hù','6019':'hù','6020':'dài','6021':'yí','6022':'tú','6023':'yóu','6024':'fū','6025':'jí','6026':'pēng','6027':'xìng','6028':'yuàn','6029':'ní','6030':'xuàn','6031':'zōng','6032':'bǐng','6033':'huǎng','6034':'xù','6035':'chù','6036':'pī','6037':'xī','6038':'xī','6039':'tān','6040':'chǐ','6041':'nèn','6042':'xún','6043':'shì','6044':'xì','6045':'lǎo','6046':'héng','6047':'kuāng','6048':'móu/mù','6049':'zhǐ','6050':'kǒng','6051':'guǐ','6052':'héng','6053':'xī','6054':'xiào','6055':'shù','6056':'sāi/sī','6057':'hū','6058':'qiū','6059':'yàng','6060':'guài','6061':'lìn','6062':'huī','6063':'zì','6064':'xù','6065':'chǐ','6066':'xiàng','6067':'nǜ','6068':'hèn','6069':'ēn','6070':'qià','6071':'yuè','6072':'pēng','6073':'kěn','6074':'dé','6075':'huì','6076':'è/ě/wù','6077':'xiāo','6078':'tòng','6079':'yān','6080':'yǒng','6081':'juàn','6082':'máng','6083':'kǔn','6084':'qiǎo/qiāo','6085':'yuè','6086':'yù','6087':'yù','6088':'jiè','6089':'xī','6090':'tì','6091':'bù','6092':'yì','6093':'qiàn','6094':'huǐ','6095':'xī','6096':'bèi','6097':'mán','6098':'yí','6099':'hēng','6100':'qiǎo','6101':'chóu','6102':'bèi','6103':'xuān','6104':'wēi','6105':'gé','6106':'qiān','6107':'wěi','6108':'yù','6109':'yú','6110':'miǎn','6111':'yǒng','6112':'kài/qì','6113':'dàng','6114':'yīn','6115':'è','6116':'chén','6117':'mòu','6118':'qià','6119':'kè','6120':'yùn','6121':'zǒng','6122':'sāi','6123':'lèng','6124':'fèn','6125':'yīng','6126':'kuì','6127':'kuì','6128':'què','6129':'gōng','6130':'huàng','6131':'jí','6132':'gǔ','6133':'jù','6134':'chuàng','6135':'tā','6136':'xié','6137':'kǎi','6138':'zhěng','6139':'yǒng','6140':'xié','6141':'hùn','6142':'yǒng','6143':'yǎng','6144':'lì','6145':'sāo','6146':'tāo','6147':'yīn','6148':'cí','6149':'xù','6150':'gōng/gòng','6151':'shè','6152':'cóng','6153':'piāo','6154':'mò','6155':'mù','6156':'guó','6157':'chì','6158':'cǎn/càn','6159':'cán','6160':'ào','6161':'shuǎng','6162':'màn','6163':'guàn','6164':'què','6165':'zào','6166':'jiù','6167':'huì','6168':'kǎi','6169':'lián','6170':'wèi','6171':'tuán','6172':'mán','6173':'qiān','6174':'zhé','6175':'yōng','6176':'qìng','6177':'kāng','6178':'dì','6179':'zhí','6180':'liáo','6181':'zǒng','6182':'yōu','6183':'chuāng','6184':'zhì','6185':'tòng','6186':'chēng','6187':'qì','6188':'qū','6189':'péng','6190':'lián','6191':'píng','6192':'kuì','6193':'huì','6194':'qiáo','6195':'chéng','6196':'yìn','6197':'yìn','6198':'xǐ','6199':'xǐ','6200':'liàn','6201':'nǎn','6202':'mí','6203':'tǎng','6204':'jué','6205':'gàng','6206':'gàng/zhuàng','6207':'zhuàng','6208':'gē','6209':'yuè','6210':'chéng','6211':'wǒ','6212':'jiè','6213':'gē','6214':'jiān','6215':'qiāng','6216':'huò','6217':'qiāng/qiàng','6218':'zhàn','6219':'dòng','6220':'shì/chì','6221':'kān','6222':'jí','6223':'kuí','6224':'gài','6225':'děng','6226':'zhàn','6227':'chuāng/qiāng/qiàng','6228':'gē','6229':'jiǎn','6230':'zhàn','6231':'xì','6232':'xì/hū','6233':'chuō','6234':'dài','6235':'qú','6236':'hù','6237':'hù','6238':'hù','6239':'è','6240':'suǒ','6241':'biǎn/piān','6242':'diàn','6243':'jiōng','6244':'shǎng','6245':'yí','6246':'yǐ','6247':'shàn/shān','6248':'hù','6249':'fēi','6250':'lè','6251':'pū','6252':'bā/pá','6253':'dǎ/dá','6254':'rēng','6255':'fú/bì','6256':'rù','6257':'zài','6258':'tuō','6259':'zhàng','6260':'chā','6261':'chǐ','6262':'gǔ','6263':'kòu','6264':'wù','6265':'tuō','6266':'qiān','6267':'zhí','6268':'chā','6269':'kuò','6270':'rǎo','6271':'xī','6272':'qián','6273':'bān','6274':'jiá','6275':'yú','6276':'fú','6277':'ào','6278':'xī','6279':'pī','6280':'jì','6281':'yǎn','6282':'kuáng','6283':'biàn','6284':'chāo','6285':'jū','6286':'wèn','6287':'hú','6288':'yuè','6289':'jué','6290':'nà','6291':'yì','6292':'shū','6293':'zhuā','6294':'póu','6295':'tóu','6296':'dǒu','6297':'kàng','6298':'zhé/shé/zhē','6299':'póu','6300':'bò','6301':'chí','6302':'guà','6303':'zhì','6304':'kuò','6305':'duǒ','6306':'duǒ','6307':'zhǐ','6308':'qiè','6309':'àn','6310':'rú/ná','6311':'tiāo/tiǎo','6312':'liè','6313':'zhā','6314':'lǚ','6315':'dié','6316':'wā','6317':'jué','6318':'liě','6319':'jǔ','6320':'náo','6321':'dǎng','6322':'jiǎo','6323':'zhēng/zhèng','6324':'jǐ','6325':'huī','6326':'xián','6327':'yǔ','6328':'āi/ái','6329':'tuō','6330':'chéng','6331':'suō','6332':'suō','6333':'kēng/kěng','6334':'měi','6335':'lòng/nòng','6336':'jú','6337':'péng','6338':'jiǎn','6339':'yì','6340':'fēng','6341':'jiǎo/jiǎ','6342':'wǔ','6343':'jùn','6344':'jiù','6345':'tǒng','6346':'kǔn','6347':'huò','6348':'tú','6349':'zhuō','6350':'juān','6351':'shè','6352':'shù','6353':'yé','6354':'jué','6355':'bǔ','6356':'huán','6357':'bù','6358':'jùn','6359':'yì','6360':'bāng','6361':'jiǎn','6362':'huàn','6363':'dǎo','6364':'wěi','6365':'wàn','6366':'qín','6367':'pěng','6368':'shě/shè','6369':'liè','6370':'wǒ','6371':'ái/āi','6372':'juǎn','6373':'yuè','6374':'zǒng','6375':'chěn','6376':'chuí','6377':'jié','6378':'tū','6379':'bèn','6380':'xiān','6381':'chéng','6382':'diān','6383':'sǎo/sào','6384':'lún/lūn','6385':'qìng','6386':'gāng','6387':'duō/duo','6388':'shòu','6389':'diào','6390':'qiā','6391':'qí','6392':'pái/pǎi','6393':'shú','6394':'qiān','6395':'líng','6396':'yè/yē','6397':'yǎ','6398':'jué','6399':'zhēng/zhèng','6400':'chān','6401':'gē/gé','6402':'lǒu/lōu','6403':'zǒng','6404':'gēng','6405':'jiǎo','6406':'gòu','6407':'qìn','6408':'yǒng','6409':'què','6410':'chù','6411':'rǒng','6412':'bàng/péng','6413':'cuō','6414':'sāo','6415':'kè','6416':'yáo','6417':'dǎo','6418':'zhī','6419':'nù','6420':'shuò','6421':'sǎng','6422':'jìn','6423':'miè','6424':'è','6425':'chuí','6426':'nuò','6427':'shān','6428':'tà','6429':'jié','6430':'hú','6431':'zhì','6432':'wā','6433':'xiá','6434':'qiān','6435':'wèn','6436':'qiǎng/chuǎng/qiāng','6437':'chēn','6438':'zhēn','6439':'è','6440':'wǔ','6441':'èn','6442':'shè','6443':'gòng','6444':'shè','6445':'shū','6446':'bǎi','6447':'yáo','6448':'bìn','6449':'sōu','6450':'chuāng','6451':'guó/guāi','6452':'bìng','6453':'féng','6454':'shuāi','6455':'dì','6456':'qì','6457':'sǒng/sōu','6458':'zhāi','6459':'liǎn','6460':'zǒng','6461':'gài/xì','6462':'hù','6463':'zhā','6464':'chuǎng','6465':'tàng','6466':'huà','6467':'cuī','6468':'nái','6469':'mó/mā','6470':'chì','6471':'mán','6472':'shàn','6473':'kōu','6474':'shū','6475':'suǒ','6476':'tuán','6477':'zhāo','6478':'mō','6479':'mó','6480':'gòu','6481':'qiān','6482':'liào','6483':'jī','6484':'yīng','6485':'juē','6486':'piē','6487':'piě/piē','6488':'lāo','6489':'dūn','6490':'chēng','6491':'chēng','6492':'sǎ/sā','6493':'náo','6494':'hèng','6495':'sī','6496':'hàn','6497':'huáng','6498':'dā','6499':'zǔn','6500':'pān','6501':'yǎng','6502':'lèi','6503':'sà','6504':'shū','6505':'zǎn/cuán','6506':'niǎn','6507':'xiǎn','6508':'jùn','6509':'huō','6510':'qiān','6511':'qiān','6512':'zǎn/cuán','6513':'qiān','6514':'lán','6515':'sān','6516':'yīng','6517':'méi','6518':'rǎng','6519':'chān','6520':'mí','6521':'lí','6522':'zǎn/cuán','6523':'luán','6524':'tān','6525':'zuàn','6526':'lì','6527':'diān','6528':'wā','6529':'dǎng','6530':'guì','6531':'guǐ','6532':'qī','6533':'xín','6534':'pō','6535':'pō','6536':'shōu','6537':'kǎo','6538':'yōu','6539':'gǎi','6540':'bó','6541':'diān','6542':'kòu','6543':'mǐn','6544':'wù','6545':'gù','6546':'gé','6547':'cè','6548':'xiào','6549':'mǐ','6550':'chén','6551':'jiù','6552':'shēn','6553':'duó','6554':'yǔ','6555':'chì','6556':'áo','6557':'bài','6558':'xù','6559':'jiào/jiāo','6560':'duó','6561':'yì','6562':'gǎn','6563':'sàn/sǎn/san','6564':'kě','6565':'yàn','6566':'dūn','6567':'qǐ','6568':'dǒu','6569':'xiào','6570':'shù/shǔ/shuò','6571':'ái','6572':'qiāo','6573':'ái','6574':'zhěng','6575':'dí','6576':'zhèn','6577':'fū','6578':'shù/shǔ/shuò','6579':'liáo','6580':'zhuó','6581':'yì/dù','6582':'liàn/liǎn','6583':'bì','6584':'lì','6585':'xué','6586':'xiào','6587':'wén','6588':'xué','6589':'qí/jì/qì','6590':'fěi','6591':'bān','6592':'bān','6593':'lán','6594':'yǔ','6595':'lán','6596':'wěi','6597':'dǒu/dòu','6598':'shēng','6599':'liào','6600':'yún','6601':'bèi','6602':'áng','6603':'zè','6604':'bǎn','6605':'jié','6606':'kūn','6607':'shēng','6608':'hù','6609':'fǎng','6610':'fēn','6611':'qǐn','6612':'hū','6613':'yì','6614':'xī','6615':'xīn','6616':'yán','6617':'zè','6618':'fǎng','6619':'tán','6620':'yìng','6621':'xuàn','6622':'pěi','6623':'zhěn','6624':'líng','6625':'chūn','6626':'hào','6627':'mèi','6628':'zuó','6629':'mò','6630':'shì','6631':'yù','6632':'fèi/fú','6633':'dié','6634':'mǎo','6635':'nì','6636':'chǎng','6637':'wēn','6638':'dōng','6639':'ǎi','6640':'tiǎo','6641':'cháo','6642':'shí','6643':'huǎng/huàng','6644':'huǎng/huàng','6645':'xuān','6646':'kuí','6647':'xū/kuā','6648':'jiǎo','6649':'jìn','6650':'gāi','6651':'xiǎng','6652':'shài','6653':'xiǎo','6654':'yè','6655':'yūn/yùn','6656':'huī','6657':'hán','6658':'hàn','6659':'jùn','6660':'shèng','6661':'bū','6662':'zhé','6663':'zhē','6664':'wù','6665':'hàn','6666':'huì','6667':'hào','6668':'chén','6669':'wǎn','6670':'xī','6671':'shǎn','6672':'yǐ','6673':'xī','6674':'qíng','6675':'qǐ','6676':'jīng','6677':'guǐ','6678':'zhěn','6679':'yì','6680':'wǎng','6681':'xiǎo','6682':'zàn','6683':'fēi/féi','6684':'xuān','6685':'gèng','6686':'yí','6687':'xiá','6688':'yūn/yùn','6689':'huī','6690':'wěi','6691':'shǔ','6692':'qíng','6693':'mào','6694':'nán','6695':'jiǎn','6696':'nuǎn','6697':'àn','6698':'yáng','6699':'chūn','6700':'zuì','6701':'cǎn','6702':'xù','6703':'huì/huǐ/kuài','6704':'yìn','6705':'qiè','6706':'fēn','6707':'pí/bì','6708':'yuè','6709':'yǒu','6710':'qú','6711':'tì','6712':'nǜ','6713':'tiào/tiǎo','6714':'shuò','6715':'zhèn','6716':'lǎng','6717':'lǎng','6718':'juān/zuī','6719':'míng','6720':'yīng','6721':'zǒng','6722':'wàng','6723':'tóng','6724':'lǎng','6725':'láo','6726':'méng','6727':'lóng','6728':'mù','6729':'děng','6730':'*','6731':'zhū','6732':'rén','6733':'bā','6734':'pò/piáo/pǔ/pō','6735':'duǒ','6736':'duǒ','6737':'dāo','6738':'lì','6739':'qiú','6740':'shā','6741':'rù','6742':'zá','6743':'quán','6744':'qiān','6745':'yú','6746':'gān/gǎn','6747':'wū','6748':'chā/chà','6749':'shān/shā','6750':'cái','6751':'cūn','6752':'rèn','6753':'sháo/biāo','6754':'zhé','6755':'dì','6756':'zhàng','6757':'máng','6758':'chì','6759':'yì','6760':'gàng','6761':'tiáo','6762':'jiàng','6763':'mián/shān','6764':'wàn','6765':'lái','6766':'shān','6767':'máng','6768':'yáng','6769':'mà','6770':'jié','6771':'dōng','6772':'gǎo','6773':'yǎo','6774':'xiān','6775':'chǔ','6776':'chūn','6777':'pá','6778':'shū','6779':'huà','6780':'sōng','6781':'jí','6782':'yuè','6783':'yún','6784':'gòu','6785':'jī','6786':'máo','6787':'pí','6788':'bì','6789':'wǎng','6790':'xī','6791':'hù','6792':'yá','6793':'dǒu','6794':'xún','6795':'zhěn','6796':'yǎo','6797':'lín','6798':'ruì','6799':'è','6800':'zhī','6801':'liǔ','6802':'méi','6803':'lì','6804':'róng','6805':'zhà/shān','6806':'zǎo','6807':'biāo','6808':'zhàn','6809':'zhì','6810':'yǒng','6811':'shù','6812':'xún','6813':'shuān','6814':'qì','6815':'zhēn','6816':'qī','6817':'lì','6818':'chí/yí','6819':'xiáng','6820':'rěn','6821':'xiào/jiào','6822':'bó/bǎi','6823':'rěn','6824':'bìng','6825':'zī','6826':'chóu','6827':'yì','6828':'cì','6829':'xǔ','6830':'fá','6831':'gǒng','6832':'kǎo','6833':'lǎo','6834':'zhān','6835':'lì','6836':'yīn','6837':'yàng','6838':'hé/hú','6839':'gēn','6840':'jié','6841':'héng','6842':'guì','6843':'táo','6844':'guàng/guāng','6845':'wéi','6846':'kuàng','6847':'rú','6848':'àn','6849':'ān','6850':'tóng','6851':'sāng','6852':'sāng','6853':'huán','6854':'jié','6855':'jiù','6856':'xuè','6857':'duò','6858':'zhuī','6859':'yú','6860':'yā','6861':'ráo','6862':'zhēn','6863':'dàng','6864':'qī','6865':'qiáo','6866':'huà','6867':'guì/huì','6868':'jiǎng','6869':'zhuāng','6870':'kuò','6871':'jìng','6872':'bó','6873':'bèn','6874':'fú','6875':'ruǐ','6876':'tǒng','6877':'jué','6878':'xī','6879':'láng','6880':'cù','6881':'liáng','6882':'qiú','6883':'tǐng/tìng','6884':'yǒu','6885':'méi','6886':'bāng','6887':'lòng','6888':'pēng','6889':'zhuāng','6890':'bì','6891':'dí','6892':'hán','6893':'zǐ','6894':'zhī','6895':'rèn','6896':'bèi','6897':'gěng','6898':'jiǎn','6899':'huàn','6900':'wǎn','6901':'guǒ','6902':'lù','6903':'háo','6904':'jiē','6905':'yǐ/yī','6906':'chóu','6907':'jǔ','6908':'jú','6909':'chéng/shèng','6910':'jū','6911':'bēi/pí','6912':'jiāo','6913':'zhuó','6914':'zī','6915':'bīn','6916':'péng','6917':'dìng','6918':'chǔ','6919':'shān','6920':'qiàn','6921':'dào','6922':'kuì','6923':'diǎn','6924':'luó','6925':'zhī','6926':'quàn','6927':'*','6928':'fǔ','6929':'gēng','6930':'yē','6931':'fù','6932':'wěi','6933':'wēi','6934':'duàn','6935':'jiǎ','6936':'zōng','6937':'jiān','6938':'yí','6939':'shèn/zhēn','6940':'yǔ/jǔ','6941':'hé','6942':'zhā/chá','6943':'wò','6944':'biān','6945':'bì','6946':'yāo','6947':'huò','6948':'xū','6949':'ruò','6950':'jiè','6951':'kuí','6952':'sī','6953':'fēng','6954':'xiē','6955':'tuǒ','6956':'jí','6957':'jiàn','6958':'mù','6959':'mào','6960':'nán','6961':'yú','6962':'yóu','6963':'méi','6964':'sǒng','6965':'xuàn','6966':'xuàn','6967':'yīng','6968':'zhēn','6969':'pián','6970':'yú','6971':'còu','6972':'wēi','6973':'méi','6974':'dì','6975':'jí','6976':'jié','6977':'kǎi','6978':'qiū','6979':'yíng','6980':'pǐn','6981':'shǐ','6982':'gài','6983':'tán','6984':'lǎn','6985':'yún','6986':'yú','6987':'chèn','6988':'lǘ','6989':'jǔ','6990':'zhǎn','6991':'fù','6992':'nuò','6993':'mì','6994':'láng','6995':'róng','6996':'gǔ','6997':'jiàn','6998':'jù','6999':'tǎ','7000':'yōu','7001':'yàng','7002':'lǔ','7003':'sì','7004':'jié','7005':'yìng/yíng','7006':'dú','7007':'wǎng','7008':'huī','7009':'xiè','7010':'jiān','7011':'pù','7012':'sè','7013':'chéng','7014':'gǔ','7015':'bīn/pín','7016':'huò','7017':'xiàn','7018':'lú','7019':'qīn','7020':'yíng','7021':'suǐ','7022':'wéi','7023':'xiè','7024':'huái','7025':'hào','7026':'zhū','7027':'lóng/shuāng','7028':'lài','7029':'duì','7030':'mí','7031':'jì','7032':'liàn','7033':'jiàn','7034':'yǐng','7035':'fèn','7036':'lín','7037':'yì','7038':'jiān','7039':'yuè','7040':'shuàng','7041':'yuān','7042':'zhuó','7043':'fēng','7044':'shè','7045':'lěi','7046':'lán','7047':'cóng','7048':'qú','7049':'yōng','7050':'yíng','7051':'sǎ','7052':'zàn','7053':'luán','7054':'yàn','7055':'lí','7056':'mǐ','7057':'dàn','7058':'tān','7059':'dǎng','7060':'lǎn','7061':'lán','7062':'nǎng','7063':'wān','7064':'luán','7065':'quán','7066':'xiān','7067':'yàn','7068':'gàn','7069':'yàn','7070':'huī','7071':'xiāo','7072':'xiāo','7073':'huī','7074':'hóng','7075':'líng','7076':'zào','7077':'zhuàn','7078':'jiǔ','7079':'zhà','7080':'yáng','7081':'qì','7082':'zhōng','7083':'fén','7084':'niǔ','7085':'guì','7086':'wén','7087':'pò','7088':'yì','7089':'lú','7090':'pàng','7091':'mù','7092':'chǎo','7093':'liào','7094':'guì/quē','7095':'kàng','7096':'dùn','7097':'guāng','7098':'xīn','7099':'zhì','7100':'hú','7101':'xī','7102':'shú','7103':'lǎng','7104':'xūn','7105':'xūn','7106':'jué','7107':'xiāo','7108':'xī','7109':'yān','7110':'wù','7111':'yān','7112':'lǚ','7113':'hán','7114':'yàn','7115':'huàn','7116':'mèn','7117':'jú','7118':'dào/tāo','7119':'bèi','7120':'cuì','7121':'wú/mó','7122':'hōng','7123':'jù','7124':'fǔ','7125':'yuē','7126':'jiāo','7127':'cōng','7128':'fèng','7129':'pīng','7130':'yàn','7131':'yàn','7132':'yì','7133':'jué','7134':'yù','7135':'gàng','7136':'rán','7137':'pí','7138':'yàn','7139':'gàng/wǎng','7140':'kuò/wēi','7141':'chén','7142':'hè','7143':'kuǐ','7144':'zhōng','7145':'duàn','7146':'yā','7147':'huī','7148':'fèng','7149':'liàn','7150':'yīng','7151':'zhǔ','7152':'wěi','7153':'tuān','7154':'tiàn','7155':'xī','7156':'nuǎn/xuān','7157':'nuǎn','7158':'chán','7159':'yān','7160':'yè','7161':'xìn','7162':'qióng','7163':'rǒu','7164':'méi','7165':'huàn','7166':'xù','7167':'zhào','7168':'wēi','7169':'fán','7170':'gào','7171':'guā','7172':'bāo','7173':'hú','7174':'yūn','7175':'xiā','7176':'shì','7177':'liàng','7178':'biān','7179':'wēi','7180':'huǎng','7181':'xié','7182':'xì','7183':'wù','7184':'xī','7185':'yún','7186':'hé','7187':'hè','7188':'xī','7189':'yūn','7190':'míng','7191':'lián','7192':'yíng','7193':'wèn','7194':'róng','7195':'gòng','7196':'yàn','7197':'qiàng','7198':'liù','7199':'xī','7200':'hè','7201':'làn','7202':'biāo','7203':'róng','7204':'lì','7205':'mò','7206':'bào','7207':'ruò','7208':'dì','7209':'lǜ','7210':'lú','7211':'jué','7212':'liào','7213':'yàn','7214':'xī','7215':'xiè','7216':'lóng','7217':'yàn','7218':'cān/càn','7219':'rǎng/shàng','7220':'jù','7221':'chè','7222':'mí','7223':'tǎng','7224':'làn','7225':'zhú','7226':'lǎn','7227':'líng','7228':'cuàn','7229':'yù','7230':'yuán','7231':'ài','7232':'wèi/wéi','7233':'han','7234':'jué','7235':'jué','7236':'fù','7237':'yé','7238':'bà','7239':'diē','7240':'chuán','7241':'kē','7242':'zāng','7243':'zāng','7244':'qiāng','7245':'dié','7246':'qiáng','7247':'piàn/piān','7248':'bǎn','7249':'pàn','7250':'tóu','7251':'biān','7252':'dié','7253':'bǎng','7254':'bó','7255':'bǎng','7256':'yǒu','7257':'yǒu','7258':'dú','7259':'yá','7260':'tā','7261':'mǔ','7262':'láo','7263':'rèn','7264':'máng','7265':'fāng','7266':'máo','7267':'mù','7268':'rèn','7269':'wù','7270':'yòu','7271':'gǔ','7272':'shēng','7273':'mǔ','7274':'dǐ','7275':'qiān','7276':'quàn','7277':'quán','7278':'zì','7279':'tè','7280':'xī','7281':'lí','7282':'lí','7283':'pǒu','7284':'jī','7285':'gāng','7286':'zhí','7287':'bēn/bèn','7288':'quán','7289':'rūn','7290':'kē','7291':'jú','7292':'kào','7293':'chú','7294':'xì','7295':'bèi','7296':'luò','7297':'jiè','7298':'má','7299':'sān','7300':'shā','7301':'lì','7302':'zhì','7303':'xiǎn','7304':'jīng','7305':'hàn','7306':'fěi','7307':'yáo','7308':'bà/pí','7309':'qí','7310':'qiāng','7311':'kūn','7312':'yān','7313':'guǒ','7314':'zòng','7315':'mí','7316':'chāng','7317':'yī','7318':'zhì','7319':'zhēng','7320':'*','7321':'luó','7322':'hú','7323':'zōng','7324':'hú','7325':'wěi','7326':'fēng','7327':'wō','7328':'yuán','7329':'xīng','7330':'yà','7331':'náo','7332':'xiē/hè','7333':'jiā','7334':'hóu','7335':'biān','7336':'yóu','7337':'yóu','7338':'méi','7339':'chá','7340':'sōu','7341':'mǎ','7342':'yuán','7343':'dāi','7344':'yù','7345':'shī','7346':'háo','7347':'qiāng','7348':'yì','7349':'zhēn','7350':'zhāng','7351':'chán','7352':'áo','7353':'áo','7354':'háo','7355':'cuī','7356':'bèn','7357':'jué','7358':'bì','7359':'bì','7360':'liáo','7361':'shuò','7362':'xiāo','7363':'shòu','7364':'dūn','7365':'xí','7366':'gé','7367':'juàn','7368':'dú','7369':'huì','7370':'níng','7371':'biān','7372':'huò','7373':'nóu','7374':'měng','7375':'liè','7376':'náo','7377':'guǎng','7378':'shòu','7379':'lú','7380':'luó','7381':'xiǎn','7382':'qí','7383':'qú','7384':'xuán','7385':'miào','7386':'zī','7387':'lǜ/shuài','7388':'lú','7389':'yù','7390':'bā','7391':'jī','7392':'hóng','7393':'dì','7394':'chuàn','7395':'gān','7396':'jiǔ','7397':'yú','7398':'qǐ','7399':'yú','7400':'hán','7401':'xuán','7402':'yán','7403':'qiú','7404':'quǎn','7405':'láng','7406':'lǐ','7407':'xiù','7408':'fú','7409':'liú','7410':'suǒ','7411':'suǒ','7412':'fēng','7413':'wán','7414':'diàn','7415':'bǐng','7416':'zhǎn','7417':'cuì','7418':'mín','7419':'yù','7420':'diǎn','7421':'chù','7422':'zhuó/zuó','7423':'pěi','7424':'chēng','7425':'hǔ','7426':'qí','7427':'è','7428':'kūn','7429':'chāng','7430':'yǎn','7431':'diāo','7432':'bèi','7433':'lín','7434':'qín','7435':'pí','7436':'pá','7437':'qiāng','7438':'zhuó','7439':'qín','7440':'yǔ','7441':'mào','7442':'méi','7443':'chūn','7444':'xuān','7445':'tí','7446':'xīng','7447':'dài','7448':'róu','7449':'mín','7450':'jiǎn','7451':'zhuàn','7452':'yáng','7453':'liàn','7454':'quán','7455':'xiá','7456':'duàn','7457':'yuàn','7458':'yé','7459':'nǎo','7460':'liú','7461':'shī','7462':'róng','7463':'suǒ','7464':'yáo','7465':'wēn','7466':'wǔ','7467':'jīn','7468':'jìn','7469':'yíng','7470':'guī','7471':'tiàn','7472':'qiāng','7473':'cuǒ','7474':'jué','7475':'zhǎo','7476':'yáo','7477':'ài','7478':'bīn','7479':'tú','7480':'cuǐ','7481':'cōng','7482':'qí','7483':'lí','7484':'yǐng','7485':'suǒ','7486':'qiú','7487':'xuán','7488':'áo','7489':'lián/liǎn','7490':'lù','7491':'wú','7492':'dēng','7493':'xiù','7494':'zēng','7495':'xún','7496':'qú','7497':'dàng','7498':'lín','7499':'liáo','7500':'chuí','7501':'píng','7502':'biān','7503':'zhòu','7504':'zhēn','7505':'*','7506':'cí','7507':'yīng','7508':'qì','7509':'xián','7510':'lín','7511':'zèng','7512':'wǔ','7513':'pì','7514':'dān','7515':'wèng','7516':'yīng','7517':'yǎn','7518':'gān','7519':'dài','7520':'qíng','7521':'shēn','7522':'chǎn','7523':'chǎn','7524':'ruí','7525':'shēng','7526':'sū','7527':'shēn','7528':'yòng','7529':'shuǎi','7530':'tián','7531':'yóu','7532':'jiǎ','7533':'shēn','7534':'zhá','7535':'diàn','7536':'fú','7537':'nán','7538':'diàn','7539':'píng','7540':'bì','7541':'qí','7542':'liù','7543':'xún','7544':'liú','7545':'chàng','7546':'mǔ','7547':'yún','7548':'fàn','7549':'fú','7550':'fù','7551':'tián','7552':'mǔ','7553':'duō','7554':'pàn','7555':'jiāng','7556':'wā','7557':'dá','7558':'nán','7559':'liú','7560':'tián','7561':'gāi','7562':'bì','7563':'dá','7564':'zhì','7565':'lüè','7566':'qí','7567':'lüè','7568':'pān','7569':'yī','7570':'yì','7571':'liú','7572':'shē','7573':'dié','7574':'chóu','7575':'huà','7576':'dāng/dàng','7577':'chuò','7578':'jī','7579':'wǎn','7580':'chā','7581':'liú','7582':'dié','7583':'tuǎn','7584':'lín','7585':'jiāng','7586':'jiāng','7587':'chóu','7588':'bò','7589':'dié','7590':'zhì','7591':'yí','7592':'chuáng','7593':'nǎi','7594':'dīng','7595':'bǐ','7596':'jiē','7597':'liáo','7598':'gōng/gāng','7599':'gē','7600':'yū','7601':'cuì','7602':'yǎ','7603':'zhú','7604':'xī','7605':'dàn/dān','7606':'shèn','7607':'zhǒng','7608':'jì/zhì','7609':'yù','7610':'yǔ','7611':'guā','7612':'wén','7613':'huàn','7614':'kù','7615':'jiǎ','7616':'yīn','7617':'yì','7618':'lòu','7619':'sào','7620':'jí','7621':'chuāng','7622':'bān','7623':'lěi','7624':'liú','7625':'chài/cuó','7626':'shòu','7627':'nüè/yào','7628':'diān','7629':'dá/da','7630':'luǒ','7631':'yì','7632':'zòng','7633':'chōu','7634':'zhàng','7635':'zhài','7636':'sòu','7637':'suǒ','7638':'qué','7639':'diào','7640':'huáng','7641':'fú','7642':'liáo','7643':'lóng','7644':'qiáo','7645':'liú','7646':'láo','7647':'xián','7648':'fèi','7649':'dàn/dān/dǎn','7650':'guài','7651':'nóng','7652':'yù','7653':'wéi','7654':'yì','7655':'yōng','7656':'pǐ','7657':'lěi','7658':'lì','7659':'shǔ','7660':'jì','7661':'chī','7662':'yǎng','7663':'xuǎn','7664':'jiē','7665':'zhēng/zhèng','7666':'mè/yì','7667':'lì','7668':'huò','7669':'lài','7670':'yōng','7671':'tān','7672':'diān','7673':'luǒ','7674':'luán','7675':'luán','7676':'bō','7677':'bō/bǒ','7678':'guǐ','7679':'pō','7680':'bī','7681':'zào','7682':'zào','7683':'mào','7684':'de/dí/dì','7685':'pā','7686':'jiē','7687':'huáng','7688':'guī','7689':'cǐ','7690':'gāo','7691':'ái','7692':'é','7693':'hào','7694':'hàn','7695':'bì','7696':'wǎn','7697':'chóu','7698':'qiàn','7699':'xī','7700':'míng','7701':'shěng/xǐng','7702':'shì','7703':'yún','7704':'miǎn','7705':'pān','7706':'fǎng','7707':'miǎo','7708':'dān','7709':'méi','7710':'zhēng','7711':'yǎo','7712':'shēn','7713':'huò','7714':'dà','7715':'zhěn','7716':'kuàng','7717':'jū','7718':'shèn','7719':'yí','7720':'mián','7721':'dī','7722':'yuān','7723':'dié','7724':'yí','7725':'zì','7726':'zì','7727':'chǎo','7728':'zhǎ','7729':'xuàn','7730':'dié','7731':'yí','7732':'èr','7733':'mǐng','7734':'xuàn','7735':'chī','7736':'kuàng','7737':'juàn','7738':'móu','7739':'zhèn','7740':'zháo/zhāo/zhe/zhuó','7741':'zhēng','7742':'méi','7743':'suō','7744':'shào','7745':'hàn','7746':'huǎn','7747':'dì','7748':'chěng','7749':'cuō','7750':'lài','7751':'jiǎn','7752':'shǎn','7753':'tiǎn','7754':'hǔn','7755':'wǎn','7756':'líng','7757':'shì','7758':'qióng','7759':'liè','7760':'juàn','7761':'shuì','7762':'suī','7763':'dū','7764':'pì','7765':'pì','7766':'mù','7767':'hūn','7768':'nì','7769':'lù','7770':'mà','7771':'xià','7772':'xǐng','7773':'huī','7774':'gùn','7775':'zāi','7776':'chǔn','7777':'jiān','7778':'mèi','7779':'dǔ','7780':'mào','7781':'xù','7782':'fā','7783':'wēn','7784':'miáo','7785':'chǒu','7786':'kuì','7787':'mī','7788':'wěng','7789':'kòu','7790':'mào','7791':'míng','7792':'mán','7793':'shuì','7794':'zé','7795':'zhàng','7796':'yì','7797':'diāo','7798':'kōu','7799':'mò','7800':'dàng','7801':'mǎ','7802':'shā','7803':'dān','7804':'jué','7805':'lì','7806':'fū','7807':'mín','7808':'nuǒ','7809':'huā','7810':'è','7811':'yà','7812':'pī','7813':'zhé','7814':'yán','7815':'suì','7816':'zhuān','7817':'chē','7818':'dùn','7819':'pān','7820':'qū','7821':'yù','7822':'kē','7823':'tuó','7824':'tuó','7825':'dǐ','7826':'zhài','7827':'zhēn','7828':'è','7829':'fèi/fú','7830':'pēng','7831':'líng','7832':'pào','7833':'lè','7834':'pò','7835':'bō','7836':'pò','7837':'shēn','7838':'zá','7839':'ài','7840':'chǔ','7841':'kēng','7842':'quán','7843':'zhū','7844':'kuāng','7845':'guī','7846':'è','7847':'náo','7848':'jiá','7849':'lù','7850':'dòng','7851':'pēng','7852':'xī','7853':'lǎo','7854':'hóng','7855':'shuò','7856':'xiá','7857':'qiāo','7858':'huí/qíng','7859':'wèi','7860':'lǎng','7861':'hōng','7862':'yú','7863':'xiāo','7864':'xiá','7865':'mǎng','7866':'lòng','7867':'tóng/yǒng','7868':'chē','7869':'chè','7870':'cuǒ','7871':'kǔn','7872':'yù','7873':'*','7874':'huā','7875':'lǔ','7876':'chěn','7877':'jiǎn','7878':'nuè','7879':'sōng','7880':'céng','7881':'qí','7882':'zòng','7883':'qìng','7884':'lín','7885':'jūn','7886':'bō','7887':'dìng','7888':'mín','7889':'diāo','7890':'líng','7891':'bēi','7892':'yín','7893':'duì','7894':'wǔ','7895':'qí','7896':'lún','7897':'wǎn','7898':'diǎn','7899':'gāng','7900':'jiàn','7901':'jiāo','7902':'xī','7903':'zhǎng','7904':'qiáo','7905':'dūn','7906':'jiǎn','7907':'yù','7908':'zhuì','7909':'hé','7910':'què','7911':'dàng','7912':'wò','7913':'jiāng','7914':'pì','7915':'pī','7916':'yù','7917':'pīn','7918':'qì','7919':'ài','7920':'zī','7921':'bó','7922':'yǎng','7923':'miè','7924':'cǎ','7925':'xián','7926':'kuàng/gǒng','7927':'lěi','7928':'lěi','7929':'zhì','7930':'lì','7931':'lóng','7932':'lóng','7933':'mò','7934':'bó','7935':'shuāng','7936':'guàn','7937':'lán','7938':'zǎn','7939':'yán','7940':'sì','7941':'qí','7942':'tā','7943':'mà','7944':'xiè','7945':'yāo','7946':'xiān','7947':'zhǐ','7948':'qí','7949':'zhǐ','7950':'yòu','7951':'zhì','7952':'tiáo','7953':'fú','7954':'fù','7955':'mì','7956':'zǔ','7957':'zhī','7958':'suàn','7959':'mèi','7960':'cí','7961':'chái','7962':'mí/nǐ','7963':'lǚ','7964':'yǔ','7965':'xiáng','7966':'wú','7967':'tiāo','7968':'piào','7969':'zhū','7970':'gào','7971':'shuì','7972':'jìn','7973':'zhěn','7974':'gāi/jiè','7975':'kǔn','7976':'dì','7977':'dǎo','7978':'huò','7979':'táo','7980':'bǐng','7981':'jìn/jīn','7982':'dǎo','7983':'zhí','7984':'lù','7985':'shàn/chán','7986':'bēi','7987':'zhě','7988':'huī','7989':'yǒu','7990':'yuàn','7991':'wú','7992':'xiǎn','7993':'yáng','7994':'tí','7995':'yī','7996':'méi','7997':'sī','7998':'dì','7999':'bèi','8000':'yào','8001':'lǎo','8002':'lǎo','8003':'kǎo','8004':'mào','8005':'zhě','8006':'qí','8007':'gǒu','8008':'góu','8009':'gǒu','8010':'nài','8011':'zhuān/duān','8012':'lěi','8013':'tīng','8014':'zǐ','8015':'gēng','8016':'chào','8017':'hào','8018':'yún','8019':'pá/bà','8020':'huō','8021':'chú','8022':'lào','8023':'lǔn','8024':'jí','8025':'tāng','8026':'ǒu','8027':'lóu','8028':'nòu','8029':'jiǎng','8030':'yōu','8031':'mò','8032':'huái','8033':'ěr','8034':'zhé','8035':'dīng','8036':'yē','8037':'dā','8038':'sǒng','8039':'qín','8040':'zhí','8041':'pàn','8042':'niè','8043':'dān','8044':'zhěn','8045':'chè','8046':'líng','8047':'zhēng','8048':'yǒu','8049':'wā','8050':'yà','8051':'dié','8052':'guō','8053':'xù','8054':'lián','8055':'hào','8056':'shèng','8057':'liè','8058':'pìn','8059':'jīng','8060':'pīng','8061':'cōng','8062':'dìng','8063':'ní','8064':'tíng','8065':'yǔ','8066':'cōng','8067':'kuí','8068':'lián','8069':'kuì','8070':'cōng','8071':'áo','8072':'shēng','8073':'sǒng','8074':'tīng','8075':'kuì','8076':'niè','8077':'zhí','8078':'dān','8079':'níng','8080':'yù','8081':'zhào','8082':'sì','8083':'sù','8084':'yì','8085':'sù','8086':'sì','8087':'zhào','8088':'zhào','8089':'ròu','8090':'gē','8091':'dì','8092':'huán','8093':'huāng','8094':'yǐ','8095':'rèn','8096':'xiào','8097':'rǔ','8098':'zhǒu','8099':'yuān','8100':'chéng','8101':'tiào','8102':'zhī','8103':'cuì','8104':'méi','8105':'xié','8106':'cuì','8107':'xié','8108':'mò/mài','8109':'mài/mò','8110':'qí','8111':'nǎo','8112':'mǐ','8113':'nóng','8114':'luán','8115':'wǎn','8116':'bó','8117':'wěn','8118':'wǎn','8119':'qiú','8120':'shān','8121':'tǐng','8122':'méi','8123':'chún','8124':'shèn','8125':'xié','8126':'de/dé/tè','8127':'juān','8128':'cù','8129':'xiū','8130':'dòu','8131':'tuō','8132':'niào','8133':'nǎo','8134':'pǐ','8135':'gǔ','8136':'luó','8137':'lì','8138':'liǎn','8139':'zhàng','8140':'lún','8141':'pián','8142':'guò','8143':'juàn','8144':'chuí/zhuī','8145':'dàn','8146':'tiǎn','8147':'něi','8148':'jīng','8149':'jiē','8150':'fǔ','8151':'fǔ','8152':'jū','8153':'féi','8154':'qiāng','8155':'wàn','8156':'dòng','8157':'pí','8158':'guó','8159':'zōng','8160':'còu','8161':'guā/luó','8162':'ǒu','8163':'dì','8164':'ān','8165':'xīng','8166':'nǎo','8167':'shù','8168':'shuàn','8169':'nǎn','8170':'yāo','8171':'jiàn','8172':'wěi','8173':'jiǎo','8174':'yú','8175':'jiā','8176':'duàn','8177':'bì','8178':'cháng','8179':'fù','8180':'bǎng/pāng/páng','8181':'qiǎn','8182':'lǚ','8183':'wà','8184':'shòu','8185':'táng','8186':'sù','8187':'zhuì','8188':'gé','8189':'yì','8190':'lǚ','8191':'bìn','8192':'ōu','8193':'cháng','8194':'lù','8195':'guó','8196':'pāng','8197':'chuái','8198':'biāo','8199':'jiǎng','8200':'yǎo','8201':'yú','8202':'chōng','8203':'xì','8204':'xì','8205':'jiù','8206':'yú','8207':'yǔ/yù','8208':'xīng/xìng','8209':'jǔ','8210':'shì','8211':'tān','8212':'shū','8213':'shì','8214':'tiǎn','8215':'dàn','8216':'pù','8217':'pù/pū','8218':'guǎn','8219':'huà','8220':'dāo','8221':'chuán','8222':'shān','8223':'yǐ','8224':'fán','8225':'pā','8226':'tài','8227':'fán','8228':'bǎn','8229':'chuán','8230':'jiàn','8231':'cāng','8232':'líng','8233':'zhú','8234':'zé','8235':'duò','8236':'bó','8237':'xián','8238':'gě','8239':'chuán','8240':'fú','8241':'zào','8242':'féng','8243':'lí','8244':'shāo','8245':'yú','8246':'láng','8247':'tǐng','8248':'yù','8249':'wěi','8250':'zōng','8251':'biàn','8252':'mào','8253':'dié','8254':'dào/dóu','8255':'bàng','8256':'chā','8257':'yì','8258':'sōu','8259':'cāng','8260':'dēng','8261':'dāng','8262':'qiáng','8263':'lǔ','8264':'yǐ','8265':'jiè','8266':'jiàn','8267':'huò','8268':'méng','8269':'qí','8270':'jiān','8271':'jiān','8272':'sè/shǎi','8273':'yàn','8274':'fú','8275':'píng','8276':'yàn','8277':'yàn','8278':'cǎo','8279':'cǎo','8280':'tiáo','8281':'jiāo','8282':'jié/jiē','8283':'péng','8284':'wán','8285':'yì','8286':'chāi','8287':'mián','8288':'mǐ','8289':'gàn','8290':'xià','8291':'qǐ','8292':'máng','8293':'zǐ','8294':'huì','8295':'suī','8296':'zhì','8297':'xiāng','8298':'bì/pí','8299':'fú','8300':'fú','8301':'zhuó','8302':'mào','8303':'fàn','8304':'qié/jiā','8305':'máo','8306':'máo','8307':'bá','8308':'zǐ/cí','8309':'mò','8310':'cōng','8311':'niǎo','8312':'yuàn','8313':'xué','8314':'yíng','8315':'qióng','8316':'gé','8317':'míng','8318':'lì','8319':'róng','8320':'xiū','8321':'zì','8322':'liè','8323':'wú','8324':'duō','8325':'kuī','8326':'cè','8327':'jiǎn','8328':'cí','8329':'gǒu','8330':'yú','8331':'zhū','8332':'zī','8333':'jiāng','8334':'huí','8335':'yīn','8336':'chá','8337':'fá','8338':'róng','8339':'rú','8340':'xún','8341':'huán','8342':'kuā','8343':'quán','8344':'gāi','8345':'dá','8346':'jīng','8347':'xìng','8348':'chuǎn','8349':'cǎo','8350':'jiàn','8351':'tí/yí','8352':'huāng/huang','8353':'píng','8354':'lì','8355':'jīn','8356':'lǎo/péi','8357':'róng','8358':'zhuāng','8359':'dá','8360':'qí/jì','8361':'dàng','8362':'yú/zì','8363':'róng','8364':'hūn','8365':'yíng/xíng','8366':'luò','8367':'yíng','8368':'qián/xún','8369':'jìn','8370':'dù','8371':'wěi','8372':'chù','8373':'dòu','8374':'fū','8375':'rěn','8376':'yín','8377':'hé/hè','8378':'bí','8379':'bù','8380':'chén','8381':'wú','8382':'bié','8383':'xī','8384':'gěng','8385':'lì','8386':'pú','8387':'zhù','8388':'mò','8389':'lì','8390':'chén','8391':'fēng','8392':'jǔ','8393':'méi','8394':'méng','8395':'xìng','8396':'jīng','8397':'chē','8398':'xīn/shēn','8399':'jūn','8400':'hǔ','8401':'jī','8402':'hé','8403':'cuì','8404':'táo','8405':'chūn','8406':'bēi/bì','8407':'cháng','8408':'huán','8409':'féi','8410':'shà','8411':'huán','8412':'yǎn','8413':'yí','8414':'tiáo','8415':'qí/jì','8416':'wǎn','8417':'cè','8418':'nài','8419':'zhěn','8420':'méng','8421':'bē/bó','8422':'pāo/pào','8423':'dìng','8424':'yíng','8425':'yíng','8426':'yíng','8427':'xiāo','8428':'sà','8429':'qiū','8430':'liàn','8431':'xuān','8432':'xuān','8433':'nán','8434':'zé','8435':'wō','8436':'chǔn','8437':'xiāo','8438':'yú','8439':'piān/biǎn','8440':'guā','8441':'jiāng','8442':'wǎn','8443':'zuó','8444':'zuò','8445':'jū','8446':'bǎo','8447':'róu','8448':'xǐ','8449':'xié','8450':'pén','8451':'fēng/fèng','8452':'hóng','8453':'hóng','8454':'hóu','8455':'yán','8456':'tū','8457':'zhù','8458':'zī','8459':'xiāng','8460':'shēn','8461':'pú','8462':'gě','8463':'dǒng','8464':'zhòu','8465':'qián','8466':'wěi','8467':'bó','8468':'wēi','8469':'pā','8470':'jùn','8471':'cōng','8472':'quán','8473':'wēi','8474':'xián','8475':'kuí','8476':'tíng','8477':'hūn/xūn','8478':'xǐ','8479':'shī','8480':'yūn','8481':'shù','8482':'dì','8483':'zhuàn','8484':'guān','8485':'rǎn','8486':'qióng','8487':'chǎn','8488':'kǎi','8489':'kuì','8490':'sōu','8491':'yīn','8492':'shī','8493':'chún','8494':'shì','8495':'yūn','8496':'zhēn','8497':'làng','8498':'nú','8499':'méng/mēng/měng','8500':'bù','8501':'zhāng','8502':'luó','8503':'qiáng','8504':'màn','8505':'yán','8506':'léng','8507':'jì','8508':'biāo/piào','8509':'gǔn','8510':'dí','8511':'miè','8512':'xūn','8513':'màn/wàn','8514':'bo/bǔ','8515':'dì','8516':'cuó','8517':'zhè','8518':'sēn','8519':'xuàn','8520':'zhōng','8521':'cài','8522':'pó','8523':'jiǎng','8524':'mì','8525':'cōng','8526':'niǎo','8527':'huì','8528':'jùn','8529':'yín','8530':'hù','8531':'shā','8532':'kòu','8533':'qiàn','8534':'má/mā','8535':'cáng/zàng','8536':'zé','8537':'qiáng','8538':'dōu','8539':'liǎn','8540':'jí','8541':'qián/xún','8542':'shèng','8543':'fán/fān/bō','8544':'méng','8545':'ǒu','8546':'chǎn','8547':'diǎn','8548':'xùn','8549':'jiāo','8550':'huá/huā/huà','8551':'jiān','8552':'mǎi','8553':'yún','8554':'bāo','8555':'yóu','8556':'qú','8557':'lù','8558':'ráo','8559':'huì','8560':'rú','8561':'fén','8562':'kuì','8563':'shùn','8564':'ruí','8565':'yǎ','8566':'xū','8567':'fù','8568':'jué','8569':'dàng','8570':'wēn','8571':'shāo','8572':'qí','8573':'jiān','8574':'yùn','8575':'sūn','8576':'líng','8577':'yù','8578':'xiá','8579':'wèng','8580':'yùn','8581':'yù','8582':'xí','8583':'hào','8584':'bó/báo/bò','8585':'hāo','8586':'ài','8587':'wēi','8588':'huì','8589':'wèi','8590':'léng','8591':'jiāng','8592':'càn','8593':'shēn/cān/cēn','8594':'qiáng','8595':'lián','8596':'kē','8597':'yuán','8598':'dá','8599':'tì','8600':'tuò','8601':'wù/è','8602':'ruǐ','8603':'ruǐ','8604':'qí','8605':'héng','8606':'lú/lǔ','8607':'sū','8608':'tuí','8609':'máng','8610':'xuān','8611':'mó','8612':'qiū','8613':'sū','8614':'jiōng','8615':'fèng/péng','8616':'niè','8617':'bò/niè','8618':'ráng','8619':'yì','8620':'qiáng','8621':'yīng','8622':'lóng','8623':'tǒu','8624':'wěi','8625':'yuè','8626':'líng','8627':'qú','8628':'yáo','8629':'fán','8630':'màn','8631':'lèi','8632':'lěi','8633':'tòng','8634':'fēng','8635':'zhí','8636':'wèi','8637':'kuí','8638':'zhàn','8639':'huài','8640':'jī','8641':'náo','8642':'lù','8643':'jiān','8644':'xiào','8645':'téng','8646':'lěi','8647':'quǎn','8648':'xiāo','8649':'yì','8650':'nüè','8651':'lǜ','8652':'zhì','8653':'xiāo','8654':'qián','8655':'chù/chǔ','8656':'hū','8657':'xū','8658':'cuó','8659':'fú','8660':'jiāo','8661':'jù','8662':'guó','8663':'bào','8664':'yán','8665':'zhàn','8666':'zhàn','8667':'kuī','8668':'bān','8669':'xì','8670':'dīng','8671':'shī','8672':'zào','8673':'dì','8674':'zhé','8675':'shé/yí','8676':'yū','8677':'gān','8678':'zǐ','8679':'hóng/jiàng','8680':'shí','8681':'yǐ','8682':'mǎ','8683':'xiàng','8684':'fāng','8685':'è','8686':'pā','8687':'chǐ','8688':'qiān','8689':'wén','8690':'jūn','8691':'qí','8692':'rán','8693':'yǐn','8694':'qí/chí','8695':'cán','8696':'yuán','8697':'jué','8698':'huí','8699':'qián','8700':'shǔ','8701':'xuán','8702':'fēng','8703':'shèn','8704':'zhèn','8705':'fǔ','8706':'xiàn/xiǎn','8707':'zhé/zhē','8708':'wú','8709':'fú','8710':'jié','8711':'dàn','8712':'yán','8713':'tíng','8714':'diàn','8715':'tuì','8716':'huí','8717':'wō','8718':'zhī','8719':'sōng','8720':'jǔn','8721':'là','8722':'měng','8723':'qiāng','8724':'sī','8725':'xī','8726':'lún','8727':'lì','8728':'dié','8729':'tiáo','8730':'féi','8731':'pí','8732':'wěi','8733':'dūn','8734':'yì','8735':'yuān','8736':'sù','8737':'quán','8738':'qiǎn','8739':'ruì','8740':'dōng','8741':'è','8742':'bǎn','8743':'zhuó','8744':'wǎng','8745':'cán','8746':'yǎng','8747':'yíng','8748':'guō','8749':'chán','8750':'mài','8751':'xū','8752':'mián','8753':'yú','8754':'jiē','8755':'shí','8756':'xuān','8757':'huáng','8758':'yǎn','8759':'biān','8760':'fú','8761':'ruǎn','8762':'xié','8763':'yóu','8764':'yóu/qiú','8765':'máo','8766':'xiā/há','8767':'yīng','8768':'shī','8769':'chóng','8770':'kuí','8771':'méng','8772':'là','8773':'dú','8774':'hú','8775':'qiū','8776':'dié','8777':'lì/xí','8778':'guā/wō','8779':'yūn','8780':'jiāng','8781':'tùn','8782':'láng','8783':'páng','8784':'sī/shī','8785':'xī','8786':'xī','8787':'xī','8788':'yuán','8789':'wēng','8790':'wū','8791':'xiù','8792':'hàn','8793':'qín','8794':'yí','8795':'bī','8796':'huá','8797':'táng','8798':'yǐ','8799':'dù','8800':'zī','8801':'xiàng','8802':'shè','8803':'luǒ','8804':'qín','8805':'yíng','8806':'chài','8807':'lì','8808':'zé','8809':'xuān','8810':'qí','8811':'róng','8812':'jiǎn','8813':'měng','8814':'háo','8815':'rú','8816':'huò','8817':'zhuó','8818':'jié','8819':'bīn','8820':'mì','8821':'lǐ/lí','8822':'chǔn','8823':'lì','8824':'qiū','8825':'niè','8826':'lú','8827':'dù','8828':'xiāo','8829':'zhū','8830':'ráng','8831':'gǔ','8832':'juān','8833':'yīng','8834':'shǔ','8835':'xī','8836':'cán','8837':'qú','8838':'quán','8839':'dù','8840':'xiě/xuè','8841':'huāng','8842':'nǜ','8843':'pēi','8844':'nǜ','8845':'xìn','8846':'zhòng','8847':'mò','8848':'èr','8849':'miè','8850':'qú','8851':'líng','8852':'xuàn','8853':'shù/zhú','8854':'xián','8855':'tòng','8856':'lòng','8857':'jiē','8858':'xián','8859':'yá','8860':'zhūn','8861':'héng','8862':'qú','8863':'yī','8864':'yī','8865':'bǔ','8866':'gǎn','8867':'yú','8868':'biǎo','8869':'chà/chǎ','8870':'shuāi','8871':'jié/jí','8872':'nà','8873':'zhōng','8874':'dǎn','8875':'rì','8876':'zhòng','8877':'zhōng','8878':'xiè','8879':'qí/zhī','8880':'jūn','8881':'yuán','8882':'mèi','8883':'chài','8884':'ǎo','8885':'niǎo','8886':'huī','8887':'rán','8888':'jiā','8889':'tuó','8890':'bì','8891':'shào','8892':'tǎn','8893':'jǔ','8894':'hè','8895':'xuè','8896':'xiù','8897':'zhěn','8898':'yí','8899':'pà','8900':'jì','8901':'zhí','8902':'guà','8903':'kèn','8904':'qī','8905':'tì','8906':'shì','8907':'fù','8908':'chóng','8909':'xiē','8910':'hè','8911':'yuàn','8912':'bāo','8913':'bǎo','8914':'fù','8915':'yú','8916':'tuàn','8917':'yǎn','8918':'huī','8919':'bèi','8920':'gōu','8921':'dā','8922':'huái','8923':'róng','8924':'yuàn','8925':'rù','8926':'nài','8927':'jiǒng','8928':'suǒ','8929':'bān','8930':'qiān','8931':'huái','8932':'kù','8933':'lián','8934':'lán','8935':'lí','8936':'zhě','8937':'shī','8938':'lǚ','8939':'yì','8940':'jī','8941':'qiǎng','8942':'sēn','8943':'bāo','8944':'xiāng','8945':'bì','8946':'pú','8947':'jiǎn','8948':'zhuàn','8949':'jiàn','8950':'xiàng','8951':'xín','8952':'bié/bì','8953':'ráo','8954':'mǎn','8955':'lán','8956':'ǎo','8957':'duó','8958':'huì','8959':'cào','8960':'dāng','8961':'shú','8962':'tǎn','8963':'bì','8964':'lán','8965':'pú','8966':'rú','8967':'zhǐ','8968':'tae','8969':'shǔ','8970':'lǎi','8971':'lóng','8972':'xí','8973':'xiān','8974':'lán','8975':'zhé','8976':'dài','8977':'jǔ','8978':'zàn','8979':'shī','8980':'xī','8981':'yào/yāo','8982':'fěng','8983':'tán/qín','8984':'fù','8985':'fiào','8986':'fù','8987':'bà','8988':'hé','8989':'jī','8990':'jué/jiào','8991':'piǎn','8992':'máo','8993':'mì','8994':'mì','8995':'miè','8996':'shì','8997':'sī','8998':'zhān/chān','8999':'luó','9000':'tuì','9001':'sòng','9002':'shì','9003':'táo','9004':'páng','9005':'hòu','9006':'nì','9007':'dùn','9008':'jiǒng','9009':'xuǎn','9010':'zhú','9011':'qiú','9012':'dì','9013':'dì','9014':'tú','9015':'jìng','9016':'tì','9017':'dòu','9018':'yǐ','9019':'zhè','9020':'zào','9021':'qūn','9022':'féng','9023':'lián','9024':'suò','9025':'huí','9026':'lǐ','9027':'gǔ','9028':'zuì','9029':'bēn','9030':'yóu','9031':'zhōu','9032':'jìn','9033':'yù','9034':'chuò','9035':'kuí','9036':'wēi','9037':'tì','9038':'yì','9039':'dá','9040':'suí','9041':'dùn','9042':'suì/suí','9043':'yǎn','9044':'chuán','9045':'chí','9046':'tí','9047':'yù','9048':'shí','9049':'zhēn','9050':'xiá','9051':'huáng','9052':'qiú','9053':'dào','9054':'dá','9055':'wéi','9056':'nán','9057':'yí','9058':'gòu','9059':'yáo','9060':'yuǎn/yuàn','9061':'sù','9062':'tà','9063':'qiǎn','9064':'mǎ','9065':'yáo','9066':'guàn','9067':'zhāng','9068':'áo','9069':'shì/kuò','9070':'zhì','9071':'lóu','9072':'chí','9073':'cuō','9074':'lín','9075':'zūn','9076':'rào','9077':'qiān','9078':'xuǎn','9079':'yù','9080':'yāo','9081':'mài','9082':'xiè','9083':'suì','9084':'huán/hái/xuán','9085':'zhān','9086':'dèng','9087':'ěr','9088':'miǎo','9089':'biān','9090':'lǐ','9091':'yì','9092':'tíng','9093':'dèng','9094':'qǐ','9095':'yōng','9096':'shān','9097':'hán','9098':'yú','9099':'máng','9100':'ruò','9101':'bèi','9102':'è','9103':'yú','9104':'juàn','9105':'yǔ','9106':'yùn','9107':'hòu','9108':'kuí','9109':'xiāng','9110':'chù','9111':'zī','9112':'zōu','9113':'jú','9114':'wū','9115':'xiāng','9116':'yún','9117':'hào','9118':'yōng','9119':'bǐ','9120':'hù','9121':'qiāo','9122':'yān','9123':'zhāng','9124':'fàn','9125':'wǔ','9126':'xǔ','9127':'dèng','9128':'bì','9129':'xín','9130':'lín','9131':'pó','9132':'dān','9133':'méng','9134':'yè','9135':'cāo','9136':'kuài','9137':'fēng','9138':'méng','9139':'zōu','9140':'yān','9141':'chán','9142':'cuó','9143':'líng','9144':'huān','9145':'xī','9146':'fēng','9147':'zàn','9148':'lì','9149':'yǒu','9150':'gān','9151':'yǔ','9152':'jiǔ','9153':'yǎn','9154':'zuì','9155':'máo','9156':'dān/zhèn','9157':'xù','9158':'tóu','9159':'zhēn','9160':'qiǎ','9161':'tuó','9162':'zuò/cù','9163':'hān','9164':'gū','9165':'sū','9166':'fā/pō','9167':'chóu','9168':'dài','9169':'mǐng','9170':'xiān','9171':'jiàng','9172':'chéng','9173':'yìn','9174':'tú','9175':'jiào','9176':'méi','9177':'kù','9178':'suān','9179':'lèi','9180':'wéi','9181':'lù','9182':'lǎn','9183':'yān','9184':'táo','9185':'pēi','9186':'zhǎn','9187':'chún','9188':'tán','9189':'zuì','9190':'hú','9191':'xǔ','9192':'xǐng','9193':'tǎn','9194':'qiú','9195':'chún','9196':'yùn','9197':'fā/pō','9198':'kē','9199':'sōu','9200':'bǎ/pá','9201':'fāng','9202':'chén','9203':'jiān','9204':'tǒu','9205':'yuè','9206':'yán','9207':'fū','9208':'bù','9209':'nà','9210':'qián','9211':'bǎn','9212':'jí','9213':'rén','9214':'chāo','9215':'niǔ','9216':'fēn','9217':'yǔn','9218':'yí','9219':'qín','9220':'yì','9221':'zhōng','9222':'niē','9223':'gài','9224':'rì','9225':'huó/huǒ','9226':'tài','9227':'kàng','9228':'yuán','9229':'lú','9230':'shì','9231':'mín','9232':'gū','9233':'kē','9234':'líng','9235':'bǐng','9236':'yí','9237':'gū/gǔ','9238':'bá','9239':'pī/pí','9240':'jiǎ','9241':'zhēn','9242':'shǐ','9243':'shì','9244':'tiě','9245':'jù','9246':'zhān','9247':'tā/tuó','9248':'tuó/shé','9249':'xuàn','9250':'shí','9251':'bó','9252':'zhù','9253':'chì','9254':'zā','9255':'pǒ','9256':'tóng','9257':'qián','9258':'fú','9259':'zhǎi','9260':'yāng','9261':'bàn','9262':'bō','9263':'jié','9264':'gōu','9265':'shù','9266':'zhēng','9267':'mǔ','9268':'ní','9269':'xǐ','9270':'sī','9271':'kuàng','9272':'kā','9273':'běi','9274':'jiàn','9275':'tóng','9276':'xíng','9277':'hóng','9278':'jiǎo/jiǎ','9279':'chǐ','9280':'yín','9281':'jūn','9282':'zhōu','9283':'chòng','9284':'shàng','9285':'tóng','9286':'mò','9287':'lèi','9288':'jī','9289':'yù','9290':'chì','9291':'xiǎn/xǐ','9292':'xíng','9293':'quán','9294':'pī','9295':'yí','9296':'zhū','9297':'hóu','9298':'míng','9299':'kuǎ','9300':'lún','9301':'guǒ','9302':'líng','9303':'bēi','9304':'lù','9305':'lí','9306':'qīng','9307':'péi','9308':'juǎn','9309':'mín','9310':'zhuī','9311':'lèi','9312':'ā/ē','9313':'kōng','9314':'tà','9315':'kūn','9316':'dǔ','9317':'wèi','9318':'chuí','9319':'zī','9320':'dìng','9321':'qí','9322':'qián','9323':'zhuó','9324':'qí','9325':'yù','9326':'jǐn','9327':'guǎn','9328':'máo','9329':'chāng','9330':'shù','9331':'zhēn','9332':'lù','9333':'měng','9334':'lù','9335':'huā','9336':'biǎo','9337':'gá','9338':'lái','9339':'kěn','9340':'dé','9341':'xiān','9342':'piān','9343':'huō','9344':'liàng','9345':'fǎ','9346':'mén','9347':'kǎi','9348':'yīng','9349':'dī','9350':'cōng','9351':'fù','9352':'róu','9353':'jí','9354':'è','9355':'rǒu','9356':'chěn','9357':'tí','9358':'zhá','9359':'hòng','9360':'huáng','9361':'wěi','9362':'fù','9363':'zhāo','9364':'chá/chā','9365':'qiè','9366':'shé','9367':'hōng','9368':'kuí','9369':'nuò','9370':'huán','9371':'yè','9372':'mín','9373':'jiàn','9374':'duǎn','9375':'jiàn','9376':'sī','9377':'kuī','9378':'hú','9379':'xuān','9380':'xiū','9381':'yé','9382':'měi','9383':'pài','9384':'āi','9385':'jiè','9386':'jiǎn/qián','9387':'méi','9388':'chā','9389':'tà','9390':'zú','9391':'yè','9392':'nòu','9393':'wēng','9394':'róng','9395':'táng','9396':'suǒ','9397':'qiāng','9398':'gé','9399':'shuò','9400':'kuì','9401':'sǎn','9402':'liù/liú','9403':'náo','9404':'huáng','9405':'piě','9406':'suì','9407':'fán','9408':'qiáo','9409':'chuān','9410':'liáo/liào','9411':'jié','9412':'láo','9413':'duì/dūn','9414':'tán/chán/xín','9415':'zān','9416':'jī','9417':'jiǎn/jiàn','9418':'zhōng','9419':'dēng/dèng','9420':'pǔ','9421':'tiě','9422':'fán','9423':'chēng/zhǎng','9424':'dǐng','9425':'shàn','9426':'kāi','9427':'jiǎn/jiàn','9428':'fèi','9429':'suì','9430':'qiāo','9431':'qiān','9432':'zhuó','9433':'léi','9434':'bì','9435':'tiě','9436':'huán','9437':'yè','9438':'duó','9439':'guǒ','9440':'ài','9441':'dāng/zhēng','9442':'xùn','9443':'diào/yáo','9444':'zhù','9445':'héng','9446':'zhuì','9447':'jī','9448':'niē','9449':'tà','9450':'xū','9451':'jiàn','9452':'jiàn','9453':'qiāng','9454':'chǎ','9455':'zhì','9456':'miè','9457':'lí','9458':'léi','9459':'jī','9460':'shuò','9461':'chuò','9462':'lǜ','9463':'biāo','9464':'bào','9465':'lǔ','9466':'xián/zhì','9467':'kuān','9468':'lóng','9469':'è','9470':'yào/yuè','9471':'chán','9472':'xiāng','9473':'jiàn','9474':'xì','9475':'guàn','9476':'cáng','9477':'niè','9478':'lěi','9479':'cuān','9480':'niè','9481':'jué','9482':'tǎng','9483':'shǔ','9484':'lán','9485':'jīn','9486':'gá','9487':'yǐ','9488':'zhēn','9489':'dīng/dìng','9490':'shàn/shān','9491':'sà','9492':'fán','9493':'diào','9494':'mén','9495':'nǚ','9496':'yáng','9497':'chāi','9498':'xíng','9499':'gài','9500':'xiāo','9501':'suǒ','9502':'lǐ','9503':'zèng','9504':'chú','9505':'guō','9506':'gào','9507':'é','9508':'xiù','9509':'cuò','9510':'ruì','9511':'tī','9512':'láng','9513':'qǐn','9514':'jū/jú','9515':'ā','9516':'qīng','9517':'zhě','9518':'nuò','9519':'cuò','9520':'chāng','9521':'xī','9522':'gù','9523':'luó','9524':'chuí','9525':'zhuī','9526':'jǐn','9527':'zhì','9528':'xiān','9529':'juǎn','9530':'měng','9531':'zī','9532':'qiè','9533':'yīng','9534':'kǎi','9535':'qiāng','9536':'sī','9537':'è','9538':'chā','9539':'qiāo','9540':'dù','9541':'měi','9542':'lòu','9543':'zī','9544':'fèi','9545':'méi','9546':'mò','9547':'zhèn','9548':'bó','9549':'gé','9550':'hào/gǎo','9551':'bàng','9552':'yì','9553':'jiā','9554':'bīn','9555':'róng','9556':'biāo','9557':'tāng/táng','9558':'màn','9559':'luó','9560':'liú','9561':'chán/xín/tán','9562':'jué','9563':'liào','9564':'pú','9565':'lǔ','9566':'dūn','9567':'lán','9568':'pǔ','9569':'cuān','9570':'lián','9571':'yì','9572':'chǎ','9573':'biāo','9574':'là','9575':'chán','9576':'xiāng','9577':'cháng/zhǎng','9578':'cháng/zhǎng','9579':'jiǔ','9580':'mén','9581':'mà','9582':'shuān','9583':'shǎn','9584':'huó','9585':'mén','9586':'yàn/yán','9587':'bì','9588':'hàn','9589':'bì','9590':'sàn','9591':'xián','9592':'xián','9593':'jiān/jiàn','9594':'mǐn','9595':'xiā','9596':'mǐn','9597':'dòu','9598':'zhá','9599':'nào','9600':'fá','9601':'gé','9602':'hé','9603':'kǔn','9604':'jiū','9605':'yuè','9606':'láng/làng','9607':'dū/shé','9608':'yù','9609':'yān','9610':'chǎn','9611':'lán','9612':'qù','9613':'huì','9614':'kuò','9615':'què','9616':'hé','9617':'tián','9618':'dá/tà','9619':'quē/què','9620':'xìn/shēn','9621':'qiān','9622':'wù','9623':'yì','9624':'tuó','9625':'yīn','9626':'yáng','9627':'dǒu','9628':'è','9629':'shēng','9630':'pí','9631':'jǐng','9632':'fáng','9633':'yáng','9634':'yīn','9635':'zhèn','9636':'jiē','9637':'chēng','9638':'è','9639':'qū','9640':'tuó','9641':'tuó','9642':'pō/bēi/pí','9643':'bǐng','9644':'fù','9645':'jì','9646':'liù/lù','9647':'lǒng','9648':'chén','9649':'xíng','9650':'xiàn','9651':'ér','9652':'guǐ','9653':'wū','9654':'gāi','9655':'shǎn','9656':'jùn','9657':'qiào','9658':'xíng','9659':'chún','9660':'pū','9661':'dǒu','9662':'yuàn','9663':'zhèn','9664':'chú','9665':'xiàn','9666':'zhì','9667':'niè','9668':'yǔn','9669':'xiǎn','9670':'yīn','9671':'jú','9672':'chuí','9673':'chén','9674':'pí','9675':'líng','9676':'táo','9677':'xiàn','9678':'lù/liù','9679':'shēng','9680':'chóng','9681':'yàn','9682':'yīn','9683':'yú','9684':'tí','9685':'yú','9686':'lóng/lōng','9687':'wēi','9688':'wēi','9689':'niè','9690':'yǐn','9691':'gāi','9692':'yǎn','9693':'huī','9694':'gé','9695':'yǔn','9696':'wù','9697':'wěi/kuí','9698':'ài','9699':'xì','9700':'xū','9701':'jì','9702':'mù','9703':'chén','9704':'xiāo','9705':'zhá','9706':'tíng','9707':'zhèn','9708':'pèi','9709':'méi','9710':'wēng','9711':'zhān','9712':'yīng','9713':'ní','9714':'chòu','9715':'tún','9716':'lín','9717':'líng','9718':'dòng','9719':'yīng','9720':'yīn','9721':'mài','9722':'mò','9723':'yǔn','9724':'liù','9725':'mèng','9726':'bīn','9727':'wù','9728':'wèi','9729':'kuò','9730':'xiàn','9731':'yù','9732':'lù/lòu','9733':'lóng/lōng','9734':'dài','9735':'jí','9736':'páng','9737':'yáng','9738':'bà','9739':'pī','9740':'méng','9741':'léi','9742':'lì','9743':'huò/suǐ','9744':'ǎi','9745':'fèi','9746':'dài','9747':'lóng','9748':'líng','9749':'ài','9750':'bìng','9751':'qīng','9752':'qīng','9753':'jìng','9754':'qí','9755':'zhēn','9756':'jìng','9757':'chēng','9758':'qìng','9759':'jìng','9760':'kào','9761':'mǐ/mí','9762':'miàn','9763':'miàn','9764':'pào','9765':'yè','9766':'tiǎn/miǎn','9767':'huì','9768':'yè','9769':'gé','9770':'wù','9771':'rèn','9772':'qín','9773':'jìn','9774':'xuē','9775':'niǔ','9776':'bǎ','9777':'yǐn','9778':'sǎ','9779':'rèn','9780':'táo','9781':'bèi','9782':'jiá','9783':'hóng','9784':'páo','9785':'yāng/yàng','9786':'mò','9787':'yīn','9788':'jiá','9789':'táo','9790':'gǒng','9791':'dá','9792':'qiáo','9793':'tīng','9794':'wǎn/mán','9795':'yìng','9796':'suī','9797':'tiáo','9798':'qiào/shāo','9799':'xuàn','9800':'hù','9801':'yè','9802':'dǐng','9803':'qǐng','9804':'pàn','9805':'xiàng','9806':'shùn','9807':'hān','9808':'xū','9809':'yí','9810':'yù','9811':'wán','9812':'bān','9813':'dùn/dú','9814':'dí','9815':'dān','9816':'pàn','9817':'pǒ','9818':'lǐng','9819':'chēng','9820':'wěi','9821':'jié/xié','9822':'guā','9823':'shěn','9824':'yí','9825':'yí','9826':'kē/ké','9827':'duī','9828':'piān','9829':'pīng','9830':'jiá','9831':'lè','9832':'tǐng','9833':'chēng','9834':'yǐng','9835':'jūn','9836':'hú','9837':'hàn','9838':'jǐng/gěng','9839':'tuí','9840':'chuí','9841':'dìng','9842':'lài','9843':'yán','9844':'hàn','9845':'qiān','9846':'kē','9847':'cuì','9848':'jiǒng','9849':'qǐn','9850':'hún','9851':'kǎn','9852':'yóng','9853':'zhuān','9854':'yán','9855':'xiǎn','9856':'xìn','9857':'yǐ','9858':'yuàn','9859':'sǎng','9860':'piào','9861':'yì','9862':'mán/mān','9863':'qī','9864':'yáo','9865':'hào','9866':'qiáo','9867':'gù','9868':'xùn','9869':'qiān','9870':'pín','9871':'lú','9872':'lǎn','9873':'niè','9874':'quán','9875':'yè','9876':'dǐng','9877':'qǐng','9878':'hān','9879':'xiàng','9880':'qí','9881':'bān','9882':'sòng','9883':'háng','9884':'yù','9885':'lú','9886':'lǐng','9887':'pō','9888':'jǐng/gěng','9889':'jié/xié','9890':'yí','9891':'pín','9892':'huì','9893':'tuí','9894':'hàn','9895':'yǐng','9896':'yǐng','9897':'kē','9898':'tí','9899':'yóng','9900':'hài','9901':'rèn','9902':'tiǎn','9903':'jiǎo/jiǎ','9904':'jiá','9905':'bǐng','9906':'yáo','9907':'tóng','9908':'cí','9909':'xiǎng','9910':'cān','9911':'bō','9912':'něi','9913':'è','9914':'bū','9915':'jùn','9916':'dòu','9917':'sù','9918':'yú','9919':'shì','9920':'bǐng','9921':'xiàn','9922':'bù','9923':'yè','9924':'tán','9925':'fěi','9926':'zhāng','9927':'wèi','9928':'guǎn','9929':'è','9930':'jiān','9931':'hóu','9932':'hé','9933':'xíng/táng','9934':'fēn','9935':'wèi','9936':'gǔ','9937':'chā','9938':'sòng','9939':'táng/xíng','9940':'táo','9941':'yè','9942':'yún','9943':'mó','9944':'táng','9945':'mán','9946':'bì','9947':'yù','9948':'xiū','9949':'jǐn','9950':'yì','9951':'jī','9952':'ráo','9953':'chēng','9954':'yōng','9955':'tāo','9956':'huì','9957':'xiǎng','9958':'zhān','9959':'fēn','9960':'luó','9961':'zuàn/zàn','9962':'nǎng/náng','9963':'shí/sì','9964':'dìng','9965':'jī','9966':'tuō','9967':'xíng/táng','9968':'tun','9969':'xì','9970':'shì','9971':'bǎo','9972':'sì','9973':'duò','9974':'yí','9975':'ěr','9976':'ráo','9977':'xiǎng','9978':'hé','9979':'le','9980':'yú','9981':'něi','9982':'jùn','9983':'guǒ','9984':'hún','9985':'xiàn','9986':'guǎn','9987':'chā','9988':'kuì','9989':'gǔ','9990':'xiū','9991':'jǐn','9992':'mán','9993':'sǎn','9994':'zhuàn','9995':'nǎng/náng','9996':'shǒu','9997':'kuí','9998':'guó','9999':'xiāng','340a':'*','340b':'*','340c':'yí','340d':'*','340e':'*','340f':'*','341a':'*','341b':'*','341c':'chóu','341d':'*','341e':'*','341f':'*','342a':'*','342b':'xiōng','342c':'liú','342d':'lǐn','342e':'xiāng','342f':'yōng','343a':'yín','343b':'nèi','343c':'chèng','343d':'fēng','343e':'*','343f':'*','344a':'yì','344b':'qióng','344c':'kuāng','344d':'lèi','344e':'nǎo','344f':'zhù','345a':'nuó','345b':'sù','345c':'yì','345d':'lòng','345e':'yìng','345f':'běng','346a':'chái','346b':'*','346c':'*','346d':'*','346e':'hún','346f':'xǔ','347a':'jùn','347b':'mà','347c':'lüè','347d':'táng','347e':'yáo','347f':'zhào','348a':'sè','348b':'*','348c':'qióng','348d':'léi','348e':'sà','348f':'*','349a':'yìn','349b':'diào','349c':'yǔ','349d':'miè','349e':'jùn','349f':'niǎo','34a0':'xiè','34a1':'yóu','34a2':'*','34a3':'*','34a4':'chè','34a5':'fēng','34a6':'lěi','34a7':'lì','34a8':'*','34a9':'luǒ','34aa':'*','34ab':'jì','34ac':'*','34ad':'*','34ae':'*','34af':'*','34b0':'quán','34b1':'*','34b2':'cái','34b3':'liǎng','34b4':'gǔ','34b5':'mào','34b6':'*','34b7':'guǎ','34b8':'suì','34b9':'*','34ba':'*','34bb':'mào','34bc':'mán','34bd':'quān','34be':'shì','34bf':'lí','34c0':'*','34c1':'wǎng','34c2':'kòu','34c3':'dù','34c4':'zhèn','34c5':'tīng','34c6':'*','34c7':'*','34c8':'bìng','34c9':'huò','34ca':'dòng','34cb':'gòng','34cc':'chēng','34cd':'*','34ce':'qīn','34cf':'jiǒng','34d0':'lù','34d1':'xìng','34d2':'*','34d3':'nán','34d4':'xiè','34d5':'*','34d6':'bì','34d7':'jié','34d8':'sù','34d9':'*','34da':'gōng','34db':'*','34dc':'yòu','34dd':'xíng','34de':'qià','34df':'pí','34e0':'diàn','34e1':'fǔ','34e2':'luò','34e3':'qià','34e4':'qià','34e5':'tāng','34e6':'bāi','34e7':'gān','34e8':'cí','34e9':'xuān','34ea':'lǎng','34eb':'*','34ec':'*','34ed':'shé','34ee':'*','34ef':'lí','34f0':'huà','34f1':'tóu','34f2':'piān','34f3':'dī','34f4':'ruǎn','34f5':'è','34f6':'qiè','34f7':'yì','34f8':'zhuō','34f9':'ruì','34fa':'jiān','34fb':'*','34fc':'chì','34fd':'chóng','34fe':'xī','34ff':'*','350a':'zhǎn','350b':'jiān','350c':'zòu','350d':'chuā','350e':'xiè','350f':'lì','351a':'jié','351b':'*','351c':'bá','351d':'liǎng','351e':'kuài','351f':'*','352a':'lǔ','352b':'*','352c':'*','352d':'chè','352e':'nuó','352f':'xuán','353a':'shì','353b':'*','353c':'sǔn','353d':'yào','353e':'xiān','353f':'zòu','354a':'fū','354b':'qín','354c':'ài','354d':'*','354e':'kè','354f':'chú','355a':'zhǎo','355b':'xù','355c':'shǐ','355d':'*','355e':'shuā','355f':'kuì','356a':'dǎn','356b':'fǎng','356c':'gōng','356d':'āo','356e':'fǔ','356f':'nè','357a':'xiāo','357b':'pǒu','357c':'*','357d':'sì','357e':'*','357f':'*','358a':'xún','358b':'*','358c':'*','358d':'*','358e':'*','358f':'niè','359a':'*','359b':'*','359c':'*','359d':'*','359e':'wāi','359f':'shòu','35a0':'nuò','35a1':'yè','35a2':'qí','35a3':'tòu','35a4':'hán','35a5':'jùn','35a6':'dǒng','35a7':'hūn','35a8':'lù','35a9':'jū','35aa':'huò','35ab':'líng','35ac':'*','35ad':'tiǎn','35ae':'lún','35af':'*','35b0':'*','35b1':'*','35b2':'*','35b3':'*','35b4':'*','35b5':'gé','35b6':'yān','35b7':'shí','35b8':'xué','35b9':'pēn','35ba':'chǔn','35bb':'niú','35bc':'duǒ','35bd':'zé','35be':'è','35bf':'xié','35c0':'yōu','35c1':'è','35c2':'shěng','35c3':'wěn','35c4':'kū','35c5':'hú','35c6':'gé','35c7':'xiá','35c8':'màn','35c9':'lüè','35ca':'jí','35cb':'hóu','35cc':'zhì','35cd':'*','35ce':'*','35cf':'wāi','35d0':'*','35d1':'bai','35d2':'ài','35d3':'zhuī','35d4':'qiān','35d5':'gòu','35d6':'dàn','35d7':'bēi','35d8':'bó','35d9':'chū','35da':'lì','35db':'xiào','35dc':'xiù','35dd':'*','35de':'*','35df':'*','35e0':'*','35e1':'*','35e2':'hóng','35e3':'tì','35e4':'cù','35e5':'kuò','35e6':'láo','35e7':'zhì','35e8':'xiē','35e9':'xī','35ea':'*','35eb':'qiè','35ec':'zhā','35ed':'xī','35ee':'*','35ef':'*','35f0':'cóng','35f1':'jí','35f2':'huò','35f3':'tǎ','35f4':'yán','35f5':'xù','35f6':'pō','35f7':'sǎi','35f8':'*','35f9':'*','35fa':'*','35fb':'guō','35fc':'yè','35fd':'xiǎng','35fe':'xuē','35ff':'hé','360a':'xī','360b':'xián','360c':'jù','360d':'jí','360e':'hǎn','360f':'*','361a':'hǎn','361b':'kān','361c':'chǐ','361d':'niè','361e':'huò','361f':'*','362a':'hào','362b':'jǐng','362c':'ào','362d':'ào','362e':'*','362f':'*','363a':'fá','363b':'*','363c':'*','363d':'*','363e':'*','363f':'niè','364a':'cháng','364b':'*','364c':'*','364d':'duō','364e':'wēi','364f':'fù','365a':'xīng','365b':'bǔ','365c':'chí','365d':'xié','365e':'niè','365f':'lǎng','366a':'yì','366b':'jí','366c':'yín','366d':'*','366e':'dā','366f':'yì','367a':'kuí','367b':'chán','367c':'lěi','367d':'*','367e':'xì','367f':'*','368a':'kāi','368b':'diāo','368c':'huà','368d':'kuǐ','368e':'*','368f':'gǎo','369a':'kōng','369b':'xì','369c':'yù','369d':'zhuī','369e':'shěn','369f':'chuò','36a0':'xiāo','36a1':'jǐ','36a2':'nú','36a3':'xiáo','36a4':'yì','36a5':'yú','36a6':'yí','36a7':'yǎn','36a8':'shěn','36a9':'rǎn','36aa':'hào','36ab':'sà','36ac':'jūn','36ad':'yóu','36ae':'*','36af':'xín','36b0':'pēi','36b1':'qiū','36b2':'chān','36b3':'*','36b4':'bù','36b5':'dōng','36b6':'sì','36b7':'ěr','36b8':'*','36b9':'mǎo','36ba':'yùn','36bb':'jī','36bc':'*','36bd':'qiǎo','36be':'xiōng','36bf':'páo','36c0':'chú','36c1':'pēng','36c2':'nuǒ','36c3':'jié','36c4':'yī','36c5':'èr','36c6':'duò','36c7':'*','36c8':'*','36c9':'*','36ca':'duǒ','36cb':'*','36cc':'*','36cd':'qiè','36ce':'lǚ','36cf':'qiú','36d0':'sǒu','36d1':'càn','36d2':'dòu','36d3':'xī','36d4':'fēng','36d5':'yì','36d6':'suō','36d7':'qiē','36d8':'pò','36d9':'xīn','36da':'tǒng','36db':'xìn','36dc':'yóu','36dd':'bèi','36de':'lòng','36df':'*','36e0':'*','36e1':'*','36e2':'*','36e3':'yún','36e4':'lí','36e5':'tà','36e6':'lǎn','36e7':'mǎn','36e8':'qiǎng','36e9':'zhóu','36ea':'yàn','36eb':'xī','36ec':'lù','36ed':'xī','36ee':'sǎo','36ef':'fàn','36f0':'*','36f1':'wěi','36f2':'fà','36f3':'yì','36f4':'nǎo','36f5':'chēng','36f6':'tàn','36f7':'jī','36f8':'shù','36f9':'pián','36fa':'ān','36fb':'kuā','36fc':'chā','36fd':'*','36fe':'xián','36ff':'zhì','370a':'zhǎn','370b':'yì','370c':'nǒu','370d':'táng','370e':'xī','370f':'yún','371a':'sù','371b':'nèn','371c':'ào','371d':'ǎn','371e':'qiàn','371f':'*','372a':'shēn','372b':'mà','372c':'*','372d':'*','372e':'làn','372f':'xī','373a':'zàn','373b':'liàn','373c':'zhí','373d':'zǐ','373e':'hái','373f':'xù','374a':'shǒu','374b':'liǎo','374c':'jiù','374d':'xiě','374e':'dìng','374f':'jiè','375a':'yán','375b':'sù','375c':'*','375d':'lín','375e':'yā','375f':'máo','376a':'diàn','376b':'lóng','376c':'*','376d':'xǐng','376e':'cuì','376f':'qiáo','377a':'lián','377b':'jǐn','377c':'yū','377d':'chuí','377e':'zuǒ','377f':'bǒ','378a':'xù','378b':'niǎn','378c':'yùn','378d':'*','378e':'bǎ','378f':'zhé','379a':'qì','379b':'jǐ','379c':'tuī','379d':'*','379e':'sóng','379f':'diàn','37a0':'láo','37a1':'zhǎn','37a2':'*','37a3':'*','37a4':'yín','37a5':'cén','37a6':'jǐ','37a7':'huì','37a8':'zǐ','37a9':'lán','37aa':'náo','37ab':'jù','37ac':'qìn','37ad':'dài','37ae':'*','37af':'jié','37b0':'xǔ','37b1':'cōng','37b2':'yòng','37b3':'dǒu','37b4':'chí','37b5':'*','37b6':'mǐn','37b7':'huáng','37b8':'suì','37b9':'kě','37ba':'zú','37bb':'hào','37bc':'chéng','37bd':'xuè','37be':'ní','37bf':'chì','37c0':'lián','37c1':'àn','37c2':'mǔ','37c3':'sī','37c4':'xiáng','37c5':'yáng','37c6':'huá','37c7':'cuò','37c8':'qiú','37c9':'láo','37ca':'fú','37cb':'duì','37cc':'máng','37cd':'láng','37ce':'tuǒ','37cf':'hán','37d0':'mǎng','37d1':'bó','37d2':'qūn','37d3':'qí','37d4':'hán','37d5':'*','37d6':'lòng','37d7':'*','37d8':'tiáo','37d9':'zé','37da':'qí','37db':'zàn','37dc':'mí','37dd':'péi','37de':'zhàn','37df':'xiàng','37e0':'gǎng','37e1':'*','37e2':'qí','37e3':'*','37e4':'lù','37e5':'*','37e6':'yùn','37e7':'è','37e8':'duān','37e9':'mín','37ea':'wēi','37eb':'quán','37ec':'sǒu','37ed':'mín','37ee':'tū','37ef':'*','37f0':'mǐng','37f1':'yǎo','37f2':'jué','37f3':'lì','37f4':'kuài','37f5':'gǎng','37f6':'yuán','37f7':'da','37f8':'*','37f9':'láo','37fa':'lóu','37fb':'qiàn','37fc':'áo','37fd':'biǎo','37fe':'yōng','37ff':'mǎng','380a':'qū','380b':'è','380c':'qī','380d':'jí','380e':'jí','380f':'huá','381a':'duì','381b':'wò','381c':'nì','381d':'cuán','381e':'*','381f':'lí','382a':'jù','382b':'*','382c':'*','382d':'zhǎn','382e':'pēng','382f':'yǐ','383a':'shā','383b':'*','383c':'sī','383d':'tóng','383e':'yuān','383f':'zī','384a':'qià','384b':'yé','384c':'mào','384d':'*','384e':'*','384f':'shù','385a':'gōu','385b':'máng','385c':'xiè','385d':'fèng','385e':'lóu','385f':'zāo','386a':'nié','386b':'yì','386c':'*','386d':'jì','386e':'jí','386f':'zhái','387a':'dàn','387b':'liào','387c':'yì','387d':'zhào','387e':'xiàn','387f':'chì','388a':'ǎi','388b':'chǐ','388c':'*','388d':'yǐng','388e':'zhé','388f':'tóu','389a':'lǔ','389b':'yàn','389c':'kàng','389d':'sū','389e':'yì','389f':'chān','38a0':'jiǒng','38a1':'jiǎng','38a2':'*','38a3':'jìng','38a4':'*','38a5':'dòng','38a6':'*','38a7':'juàn','38a8':'hàn','38a9':'dì','38aa':'*','38ab':'*','38ac':'hóng','38ad':'*','38ae':'chí','38af':'diāo','38b0':'bì','38b1':'*','38b2':'xùn','38b3':'lú','38b4':'*','38b5':'xié','38b6':'bì','38b7':'*','38b8':'bì','38b9':'*','38ba':'xián','38bb':'ruì','38bc':'biè','38bd':'ěr','38be':'juàn','38bf':'*','38c0':'zhèn','38c1':'bèi','38c2':'è','38c3':'yǔ','38c4':'qú','38c5':'zàn','38c6':'mí','38c7':'yì','38c8':'sì','38c9':'*','38ca':'*','38cb':'*','38cc':'shàn','38cd':'tái','38ce':'mù','38cf':'jìng','38d0':'biàn','38d1':'róng','38d2':'cèng','38d3':'càn','38d4':'dīng','38d5':'*','38d6':'*','38d7':'*','38d8':'*','38d9':'dí','38da':'tǒng','38db':'tà','38dc':'xíng','38dd':'sōng','38de':'duó','38df':'xì','38e0':'tāo','38e1':'*','38e2':'tí','38e3':'shàn','38e4':'jiàn','38e5':'zhì','38e6':'wēi','38e7':'yìn','38e8':'*','38e9':'*','38ea':'huǎn','38eb':'zhǒng','38ec':'qì','38ed':'zōng','38ee':'*','38ef':'xiè','38f0':'xiè','38f1':'zé','38f2':'wéi','38f3':'*','38f4':'*','38f5':'tà','38f6':'zhān','38f7':'nìng','38f8':'*','38f9':'*','38fa':'*','38fb':'yì','38fc':'rěn','38fd':'shù','38fe':'chà','38ff':'zhuó','390a':'xiào','390b':'fēn','390c':'gān','390d':'qiāo','390e':'gē','390f':'tóng','391a':'háng','391b':'nín','391c':'jué','391d':'chōng','391e':'chà','391f':'kǒng','392a':'yuàn','392b':'dé','392c':'huì','392d':'*','392e':'guàng','392f':'jiǒng','393a':'huǎng','393b':'*','393c':'*','393d':'chóu','393e':'sàn','393f':'yān','394a':'péng','394b':'yī','394c':'jú','394d':'jì','394e':'lái','394f':'tiǎn','395a':'yú','395b':'jí','395c':'wèi','395d':'mǐ','395e':'suì','395f':'xié','396a':'lóu','396b':'*','396c':'páng','396d':'tài','396e':'zhòu','396f':'yǐn','397a':'hé','397b':'*','397c':'yìn','397d':'cè','397e':'nì','397f':'ào','398a':'huá','398b':'zhā','398c':'hū','398d':'è','398e':'huò','398f':'sǔn','399a':'biǎn','399b':'yǔ','399c':'huò','399d':'miǎo','399e':'chóu','399f':'mái','39a0':'*','39a1':'lè','39a2':'jié','39a3':'wèi','39a4':'yì','39a5':'xuān','39a6':'xì','39a7':'cǎn','39a8':'lán','39a9':'yǐn','39aa':'xiè','39ab':'zā','39ac':'luǒ','39ad':'líng','39ae':'qián','39af':'huò','39b0':'jiān','39b1':'wǒ','39b2':'*','39b3':'*','39b4':'gé','39b5':'zhū','39b6':'dié','39b7':'yǒng','39b8':'jǐ','39b9':'yáng','39ba':'rù','39bb':'xí','39bc':'shuàng','39bd':'yù','39be':'yí','39bf':'qiǎn','39c0':'jí','39c1':'qù','39c2':'tián','39c3':'shōu','39c4':'qiǎn','39c5':'mù','39c6':'jīn','39c7':'mǎo','39c8':'yǐn','39c9':'gài','39ca':'pō','39cb':'xuǎn','39cc':'mào','39cd':'fǎng','39ce':'yá','39cf':'gāng','39d0':'sǒng','39d1':'huī','39d2':'yù','39d3':'guā','39d4':'guài','39d5':'liǔ','39d6':'è','39d7':'zǐ','39d8':'zì','39d9':'bì','39da':'wǎ','39db':'*','39dc':'liè','39dd':'*','39de':'*','39df':'kuǎi','39e0':'*','39e1':'hài','39e2':'yīn','39e3':'zhū','39e4':'chòng','39e5':'xiǎn','39e6':'xuàn','39e7':'*','39e8':'qiú','39e9':'pèi','39ea':'guǐ','39eb':'ér','39ec':'gǒng','39ed':'qióng','39ee':'hū','39ef':'lǎo','39f0':'lì','39f1':'chèn','39f2':'sǎn','39f3':'zhuò','39f4':'wǒ','39f5':'póu','39f6':'kēng','39f7':'tùn','39f8':'pēng','39f9':'tè','39fa':'tà','39fb':'zhuó','39fc':'biào','39fd':'gù','39fe':'hū','39ff':'*','3a00':'bǐng','3a01':'zhì','3a02':'dǒng','3a03':'duǐ','3a04':'zhōu','3a05':'nèi','3a06':'lǐn','3a07':'pó','3a08':'jǐ','3a09':'mín','3a0a':'wěi','3a0b':'chě','3a0c':'gòu','3a0d':'bāng','3a0e':'rú','3a0f':'tān','3a10':'bǔ','3a11':'zōng','3a12':'kuī','3a13':'láo','3a14':'hàn','3a15':'yíng','3a16':'zhì','3a17':'jié','3a18':'xǐng','3a19':'xié','3a1a':'xún','3a1b':'shǎn','3a1c':'qián','3a1d':'xiē','3a1e':'sù','3a1f':'hāi','3a20':'mì','3a21':'hún','3a22':'pī','3a23':'*','3a24':'huì','3a25':'nà','3a26':'sǒng','3a27':'bèn','3a28':'chōu','3a29':'jié','3a2a':'huàng','3a2b':'lǎn','3a2c':'*','3a2d':'hù','3a2e':'dōu','3a2f':'huò','3a30':'gǔn','3a31':'yáo','3a32':'cè','3a33':'guǐ','3a34':'jiàn','3a35':'jiǎn','3a36':'dǎo','3a37':'jìn','3a38':'mà','3a39':'huì','3a3a':'miǎn','3a3b':'cán','3a3c':'lüè','3a3d':'pì','3a3e':'yàng','3a3f':'jù','3a40':'jù','3a41':'què','3a42':'*','3a43':'qiān','3a44':'shāi','3a45':'*','3a46':'jiù','3a47':'huò','3a48':'yǔn','3a49':'dá','3a4a':'xuān','3a4b':'xiāo','3a4c':'fèi','3a4d':'cè','3a4e':'yè','3a4f':'*','3a50':'dèn','3a51':'*','3a52':'qín','3a53':'huǐ','3a54':'tún','3a55':'*','3a56':'qiáng','3a57':'xí','3a58':'nǐ','3a59':'sāi','3a5a':'méng','3a5b':'tuán','3a5c':'lǎn','3a5d':'háo','3a5e':'cì','3a5f':'zhài','3a60':'āo','3a61':'luǒ','3a62':'miè','3a63':'*','3a64':'fū','3a65':'*','3a66':'xié','3a67':'bó','3a68':'huì','3a69':'qǐng','3a6a':'xié','3a6b':'*','3a6c':'*','3a6d':'bó','3a6e':'qián','3a6f':'pó','3a70':'jiǎo','3a71':'jué','3a72':'kǔn','3a73':'sǒng','3a74':'jú','3a75':'è','3a76':'niè','3a77':'qiān','3a78':'dié','3a79':'dié','3a7a':'*','3a7b':'qī','3a7c':'zhī','3a7d':'qí','3a7e':'zhuì','3a7f':'kū','3a80':'yú','3a81':'qín','3a82':'kū','3a83':'hé','3a84':'fú','3a85':'*','3a86':'dǐ','3a87':'xiàn','3a88':'guì','3a89':'hé','3a8a':'qún','3a8b':'hàn','3a8c':'tǒng','3a8d':'bó','3a8e':'shǎn','3a8f':'bǐ','3a90':'lù','3a91':'yè','3a92':'ní','3a93':'chuái','3a94':'sàn','3a95':'diào','3a96':'lù','3a97':'tǒu','3a98':'liǎn','3a99':'kě','3a9a':'sàn','3a9b':'zhěn','3a9c':'chuǎi','3a9d':'liàn','3a9e':'mào','3a9f':'*','3aa0':'qiān','3aa1':'kài','3aa2':'shǎo','3aa3':'xiāo','3aa4':'bì','3aa5':'zhā','3aa6':'yìn','3aa7':'xī','3aa8':'shàn','3aa9':'sù','3aaa':'sà','3aab':'ruì','3aac':'chuō','3aad':'lú','3aae':'líng','3aaf':'chá','3ab0':'*','3ab1':'huàn','3ab2':'*','3ab3':'*','3ab4':'jiá','3ab5':'bàn','3ab6':'hú','3ab7':'dǒu','3ab8':'*','3ab9':'lǒu','3aba':'jū','3abb':'juàn','3abc':'kě','3abd':'suǒ','3abe':'luò','3abf':'zhé','3ac0':'dǐng','3ac1':'duàn','3ac2':'zhù','3ac3':'yǎn','3ac4':'páng','3ac5':'chá','3ac6':'*','3ac7':'*','3ac8':'*','3ac9':'*','3aca':'yǐ','3acb':'*','3acc':'*','3acd':'yóu','3ace':'huī','3acf':'yǎo','3ad0':'yǎo','3ad1':'zhǐ','3ad2':'gǒng','3ad3':'qǐ','3ad4':'gèn','3ad5':'*','3ad6':'*','3ad7':'hòu','3ad8':'mì','3ad9':'fú','3ada':'hū','3adb':'guàng','3adc':'tǎn','3add':'dī','3ade':'*','3adf':'yán','3ae0':'*','3ae1':'*','3ae2':'qù','3ae3':'*','3ae4':'chǎng','3ae5':'mǐng','3ae6':'tāo','3ae7':'bào','3ae8':'ān','3ae9':'*','3aea':'*','3aeb':'xiǎn','3aec':'*','3aed':'*','3aee':'*','3aef':'mào','3af0':'làng','3af1':'nǎn','3af2':'bèi','3af3':'chén','3af4':'*','3af5':'fēi','3af6':'zhǒu','3af7':'jī','3af8':'jiē','3af9':'shù','3afa':'*','3afb':'kùn','3afc':'dié','3afd':'lù','3afe':'*','3aff':'*','3b00':'*','3b01':'*','3b02':'yú','3b03':'tái','3b04':'chàn','3b05':'màn','3b06':'mǐn','3b07':'huàn','3b08':'wēn','3b09':'nuǎn','3b0a':'huàn','3b0b':'hóu','3b0c':'jìng','3b0d':'bó','3b0e':'xiǎn','3b0f':'lì','3b10':'jìn','3b11':'*','3b12':'mǎng','3b13':'piào','3b14':'háo','3b15':'yáng','3b16':'*','3b17':'xiàn','3b18':'sù','3b19':'wěi','3b1a':'chè','3b1b':'xī','3b1c':'jìn','3b1d':'céng','3b1e':'hè','3b1f':'fēn','3b20':'shài','3b21':'líng','3b22':'*','3b23':'duì','3b24':'qī','3b25':'pù','3b26':'yuè','3b27':'bó','3b28':'*','3b29':'huì','3b2a':'dié','3b2b':'yàn','3b2c':'jù','3b2d':'jiào','3b2e':'nàn','3b2f':'liè','3b30':'yú','3b31':'tì','3b32':'tiān','3b33':'wǔ','3b34':'hǒng','3b35':'xiáo','3b36':'hào','3b37':'*','3b38':'tiāo','3b39':'zhēng','3b3a':'*','3b3b':'huāng','3b3c':'fù','3b3d':'*','3b3e':'*','3b3f':'tūn','3b40':'*','3b41':'réng','3b42':'jiǎo','3b43':'*','3b44':'xìn','3b45':'*','3b46':'*','3b47':'yuàn','3b48':'jué','3b49':'huá','3b4a':'*','3b4b':'bàng','3b4c':'móu','3b4d':'*','3b4e':'gāng','3b4f':'wěi','3b50':'*','3b51':'mèi','3b52':'sì','3b53':'biàn','3b54':'lú','3b55':'qū','3b56':'*','3b57':'*','3b58':'gé','3b59':'zhé','3b5a':'lǚ','3b5b':'pài','3b5c':'róng','3b5d':'qiú','3b5e':'liè','3b5f':'gǒng','3b60':'xiǎn','3b61':'xì','3b62':'xīn','3b63':'*','3b64':'niǎo','3b65':'*','3b66':'*','3b67':'*','3b68':'xié','3b69':'liè','3b6a':'fū','3b6b':'cuó','3b6c':'zhuó','3b6d':'bā','3b6e':'zuò','3b6f':'zhé','3b70':'zuī','3b71':'hé','3b72':'jí','3b73':'*','3b74':'jiān','3b75':'*','3b76':'*','3b77':'*','3b78':'tú','3b79':'xián','3b7a':'yǎn','3b7b':'táng','3b7c':'tà','3b7d':'dǐ','3b7e':'jué','3b7f':'áng','3b80':'hán','3b81':'xiáo','3b82':'jú','3b83':'wēi','3b84':'bǎng','3b85':'zhuī','3b86':'niè','3b87':'tiàn','3b88':'nài','3b89':'*','3b8a':'*','3b8b':'yǒu','3b8c':'mián','3b8d':'*','3b8e':'*','3b8f':'nài','3b90':'shěng','3b91':'chā','3b92':'yān','3b93':'gèn','3b94':'chòng','3b95':'ruǎn','3b96':'jiá','3b97':'qín','3b98':'máo','3b99':'è','3b9a':'lì','3b9b':'chí','3b9c':'zāng','3b9d':'hé','3b9e':'jié','3b9f':'niǎn','3ba0':'*','3ba1':'guàn','3ba2':'hóu','3ba3':'gài','3ba4':'*','3ba5':'bèn','3ba6':'suǒ','3ba7':'wū','3ba8':'jì','3ba9':'xī','3baa':'qióng','3bab':'hé','3bac':'wēng','3bad':'xián','3bae':'jié','3baf':'hún','3bb0':'pí','3bb1':'shēn','3bb2':'chōu','3bb3':'zhèn','3bb4':'*','3bb5':'zhān','3bb6':'shuò','3bb7':'jī','3bb8':'sòng','3bb9':'zhǐ','3bba':'běn','3bbb':'*','3bbc':'*','3bbd':'*','3bbe':'lǎng','3bbf':'bì','3bc0':'xuàn','3bc1':'péi','3bc2':'dài','3bc3':'*','3bc4':'zhī','3bc5':'pí','3bc6':'chǎn','3bc7':'bì','3bc8':'sù','3bc9':'huò','3bca':'hén','3bcb':'jiǒng','3bcc':'chuán','3bcd':'jiǎng','3bce':'nèn','3bcf':'gǔ','3bd0':'fǎng','3bd1':'*','3bd2':'*','3bd3':'tà','3bd4':'cuì','3bd5':'xī','3bd6':'dé','3bd7':'xián','3bd8':'kuǎn','3bd9':'zhé','3bda':'tā','3bdb':'hú','3bdc':'cuì','3bdd':'lù','3bde':'juàn','3bdf':'lù','3be0':'qiàn','3be1':'pào','3be2':'zhèn','3be3':'*','3be4':'lì','3be5':'cáo','3be6':'qí','3be7':'*','3be8':'*','3be9':'tì','3bea':'líng','3beb':'qú','3bec':'liǎn','3bed':'lǔ','3bee':'shú','3bef':'gòng','3bf0':'zhé','3bf1':'pāo','3bf2':'jìn','3bf3':'qíng','3bf4':'*','3bf5':'*','3bf6':'zōng','3bf7':'pú','3bf8':'jǐn','3bf9':'biǎo','3bfa':'jiàn','3bfb':'gǔn','3bfc':'*','3bfd':'*','3bfe':'zāo','3bff':'liè','3c00':'lí','3c01':'luǒ','3c02':'shěn','3c03':'mián','3c04':'jiàn','3c05':'dí','3c06':'bèi','3c07':'*','3c08':'liǎn','3c09':'*','3c0a':'xián','3c0b':'pín','3c0c':'què','3c0d':'lóng','3c0e':'zuì','3c0f':'*','3c10':'jué','3c11':'shān','3c12':'xué','3c13':'*','3c14':'xiè','3c15':'*','3c16':'lǎn','3c17':'qí','3c18':'yí','3c19':'nuó','3c1a':'lí','3c1b':'yuè','3c1c':'*','3c1d':'yǐ','3c1e':'chī','3c1f':'jì','3c20':'hāng','3c21':'xiè','3c22':'kēng','3c23':'zī','3c24':'hē','3c25':'xì','3c26':'qù','3c27':'hāi','3c28':'xiā','3c29':'hāi','3c2a':'guī','3c2b':'chān','3c2c':'xún','3c2d':'xū','3c2e':'shèn','3c2f':'kòu','3c30':'xiā','3c31':'shà','3c32':'yū','3c33':'yà','3c34':'pǒu','3c35':'zú','3c36':'yǒu','3c37':'zì','3c38':'liǎn','3c39':'xiān','3c3a':'xià','3c3b':'yǐ','3c3c':'shà','3c3d':'yàn','3c3e':'jiào','3c3f':'xī','3c40':'chǐ','3c41':'shì','3c42':'kāng','3c43':'yǐn','3c44':'hēi','3c45':'yì','3c46':'xī','3c47':'sè','3c48':'jìn','3c49':'yè','3c4a':'yōu','3c4b':'què','3c4c':'yé','3c4d':'luán','3c4e':'kūn','3c4f':'zhèng','3c50':'*','3c51':'*','3c52':'*','3c53':'*','3c54':'xiē','3c55':'*','3c56':'cuì','3c57':'xiū','3c58':'àn','3c59':'xiǔ','3c5a':'cán','3c5b':'chuǎn','3c5c':'zhá','3c5d':'*','3c5e':'yì','3c5f':'pī','3c60':'kū','3c61':'shēng','3c62':'láng','3c63':'tuǐ','3c64':'xī','3c65':'líng','3c66':'qī','3c67':'wò','3c68':'liàn','3c69':'dú','3c6a':'mèn','3c6b':'làn','3c6c':'wěi','3c6d':'duàn','3c6e':'kuài','3c6f':'ái','3c70':'zǎi','3c71':'huì','3c72':'yì','3c73':'mò','3c74':'zì','3c75':'fèn','3c76':'péng','3c77':'*','3c78':'bì','3c79':'lì','3c7a':'lú','3c7b':'luò','3c7c':'hāi','3c7d':'zhěn','3c7e':'gāi','3c7f':'què','3c80':'zhēn','3c81':'kōng','3c82':'chéng','3c83':'jiù','3c84':'jué','3c85':'jì','3c86':'líng','3c87':'*','3c88':'sháo','3c89':'què','3c8a':'ruì','3c8b':'chuò','3c8c':'nèng','3c8d':'zhī','3c8e':'lóu','3c8f':'pāo','3c90':'*','3c91':'*','3c92':'bào','3c93':'róng','3c94':'xiān','3c95':'lèi','3c96':'xiāo','3c97':'fū','3c98':'qú','3c99':'*','3c9a':'shā','3c9b':'zhǐ','3c9c':'tán','3c9d':'rǒng','3c9e':'sū','3c9f':'yǐng','3ca0':'máo','3ca1':'nài','3ca2':'biàn','3ca3':'*','3ca4':'shuāi','3ca5':'táng','3ca6':'hàn','3ca7':'sào','3ca8':'róng','3ca9':'*','3caa':'dēng','3cab':'pú','3cac':'jiāo','3cad':'tǎn','3cae':'*','3caf':'rán','3cb0':'níng','3cb1':'liè','3cb2':'dié','3cb3':'dié','3cb4':'zhòng','3cb5':'*','3cb6':'lǜ','3cb7':'dàn','3cb8':'xī','3cb9':'guǐ','3cba':'jí','3cbb':'nì','3cbc':'yì','3cbd':'niàn','3cbe':'yǔ','3cbf':'wǎng','3cc0':'guò','3cc1':'zè','3cc2':'yán','3cc3':'cuì','3cc4':'xián','3cc5':'jiǎo','3cc6':'tǒu','3cc7':'fù','3cc8':'pèi','3cc9':'*','3cca':'yōu','3ccb':'qiū','3ccc':'yā','3ccd':'bù','3cce':'biàn','3ccf':'shì','3cd0':'zhá','3cd1':'yì','3cd2':'biàn','3cd3':'*','3cd4':'duì','3cd5':'lán','3cd6':'yī','3cd7':'chài','3cd8':'chōng','3cd9':'xuàn','3cda':'xù','3cdb':'yú','3cdc':'xiū','3cdd':'*','3cde':'*','3cdf':'*','3ce0':'tà','3ce1':'guō','3ce2':'*','3ce3':'*','3ce4':'*','3ce5':'lòng','3ce6':'xiè','3ce7':'chè','3ce8':'jiǎn','3ce9':'tān','3cea':'pì','3ceb':'zǎn','3cec':'xuán','3ced':'xián','3cee':'niào','3cef':'*','3cf0':'*','3cf1':'*','3cf2':'*','3cf3':'*','3cf4':'mì','3cf5':'jì','3cf6':'nǒu','3cf7':'hū','3cf8':'huā','3cf9':'wǎng','3cfa':'yóu','3cfb':'zé','3cfc':'bì','3cfd':'mǐ','3cfe':'qiāng','3cff':'xiè','3d00':'fàn','3d01':'yì','3d02':'tān','3d03':'lèi','3d04':'yǒng','3d05':'*','3d06':'jìn','3d07':'shè','3d08':'yìn','3d09':'jǐ','3d0a':'*','3d0b':'sù','3d0c':'*','3d0d':'*','3d0e':'*','3d0f':'wǎng','3d10':'miàn','3d11':'sù','3d12':'yì','3d13':'shāi','3d14':'xī','3d15':'jí','3d16':'luò','3d17':'yōu','3d18':'mào','3d19':'zhǎ','3d1a':'suì','3d1b':'zhì','3d1c':'biàn','3d1d':'lí','3d1e':'*','3d1f':'*','3d20':'*','3d21':'*','3d22':'*','3d23':'*','3d24':'*','3d25':'qiào','3d26':'guàn','3d27':'xī','3d28':'zhèn','3d29':'yōng','3d2a':'niè','3d2b':'jùn','3d2c':'xiè','3d2d':'yǎo','3d2e':'xiè','3d2f':'zhī','3d30':'néng','3d31':'*','3d32':'sī','3d33':'lǒng','3d34':'chén','3d35':'mì','3d36':'què','3d37':'dān','3d38':'shǎn','3d39':'*','3d3a':'*','3d3b':'*','3d3c':'sù','3d3d':'xiè','3d3e':'bó','3d3f':'dǐng','3d40':'zú','3d41':'*','3d42':'shù','3d43':'shé','3d44':'hàn','3d45':'tān','3d46':'gǎo','3d47':'*','3d48':'*','3d49':'*','3d4a':'nà','3d4b':'mì','3d4c':'xún','3d4d':'mèn','3d4e':'jiàn','3d4f':'cuǐ','3d50':'jué','3d51':'hè','3d52':'fèi','3d53':'shí','3d54':'chě','3d55':'shèn','3d56':'nǜ','3d57':'píng','3d58':'màn','3d59':'*','3d5a':'*','3d5b':'*','3d5c':'*','3d5d':'yì','3d5e':'chóu','3d5f':'*','3d60':'kū','3d61':'báo','3d62':'léi','3d63':'kě','3d64':'shà','3d65':'bì','3d66':'suí','3d67':'gé','3d68':'pì','3d69':'yì','3d6a':'xián','3d6b':'nì','3d6c':'yíng','3d6d':'zhǔ','3d6e':'chún','3d6f':'féng','3d70':'xù','3d71':'piǎo','3d72':'wǔ','3d73':'liáo','3d74':'cáng','3d75':'zòu','3d76':'zuō','3d77':'biàn','3d78':'yào','3d79':'huán','3d7a':'pài','3d7b':'xiū','3d7c':'*','3d7d':'lěi','3d7e':'qìng','3d7f':'xiào','3d80':'jiāo','3d81':'guó','3d82':'*','3d83':'*','3d84':'yán','3d85':'xué','3d86':'zhū','3d87':'héng','3d88':'yíng','3d89':'xī','3d8a':'*','3d8b':'*','3d8c':'lián','3d8d':'xiǎn','3d8e':'huán','3d8f':'yīn','3d90':'*','3d91':'liàn','3d92':'shǎn','3d93':'cáng','3d94':'bèi','3d95':'jiǎn','3d96':'shù','3d97':'fàn','3d98':'diàn','3d99':'*','3d9a':'bà','3d9b':'yú','3d9c':'*','3d9d':'*','3d9e':'nǎng','3d9f':'lěi','3da0':'yì','3da1':'dài','3da2':'*','3da3':'chán','3da4':'chǎo','3da5':'gān','3da6':'jìn','3da7':'nèn','3da8':'*','3da9':'*','3daa':'*','3dab':'liǎo','3dac':'mò','3dad':'yǒu','3dae':'*','3daf':'liù','3db0':'hán','3db1':'*','3db2':'yòng','3db3':'jìn','3db4':'chǐ','3db5':'rèn','3db6':'nóng','3db7':'*','3db8':'*','3db9':'hòng','3dba':'tiàn','3dbb':'*','3dbc':'āi','3dbd':'guā','3dbe':'biāo','3dbf':'bó','3dc0':'qióng','3dc1':'*','3dc2':'shù','3dc3':'chuǐ','3dc4':'huǐ','3dc5':'chǎo','3dc6':'fù','3dc7':'huī','3dc8':'è','3dc9':'wèi','3dca':'fén','3dcb':'tán','3dcc':'*','3dcd':'lún','3dce':'hè','3dcf':'yǒng','3dd0':'huǐ','3dd1':'*','3dd2':'yú','3dd3':'zǒng','3dd4':'yàn','3dd5':'qiú','3dd6':'zhào','3dd7':'jiǒng','3dd8':'tái','3dd9':'*','3dda':'*','3ddb':'*','3ddc':'*','3ddd':'*','3dde':'*','3ddf':'tuì','3de0':'lín','3de1':'jiǒng','3de2':'zhǎ','3de3':'xīng','3de4':'hù','3de5':'*','3de6':'xù','3de7':'*','3de8':'*','3de9':'*','3dea':'cuì','3deb':'qǐng','3dec':'mò','3ded':'*','3dee':'zāo','3def':'bèng','3df0':'chī','3df1':'*','3df2':'*','3df3':'yàn','3df4':'gé','3df5':'mò','3df6':'bèi','3df7':'juǎn','3df8':'dié','3df9':'zhào','3dfa':'*','3dfb':'wú','3dfc':'yàn','3dfd':'*','3dfe':'jué','3dff':'xiān','3e00':'tái','3e01':'hǎn','3e02':'*','3e03':'diǎn','3e04':'jì','3e05':'jié','3e06':'*','3e07':'zuǎn','3e08':'*','3e09':'xiè','3e0a':'lài','3e0b':'fán','3e0c':'huò','3e0d':'xì','3e0e':'niè','3e0f':'mí','3e10':'rán','3e11':'cuàn','3e12':'yín','3e13':'mì','3e14':'*','3e15':'jué','3e16':'qū','3e17':'tóng','3e18':'wàn','3e19':'zhē','3e1a':'lǐ','3e1b':'sháo','3e1c':'kòng','3e1d':'xiān','3e1e':'zhé','3e1f':'zhī','3e20':'tiǎo','3e21':'shū','3e22':'bèi','3e23':'yè','3e24':'piàn','3e25':'chàn','3e26':'hù','3e27':'kèn','3e28':'jiū','3e29':'ān','3e2a':'chún','3e2b':'qián','3e2c':'bèi','3e2d':'bā','3e2e':'fén','3e2f':'kē','3e30':'tuó','3e31':'tuó','3e32':'zuó','3e33':'líng','3e34':'*','3e35':'guǐ','3e36':'yān','3e37':'shì','3e38':'hǒu','3e39':'liè','3e3a':'shā','3e3b':'sì','3e3c':'*','3e3d':'bèi','3e3e':'rèn','3e3f':'dú','3e40':'bó','3e41':'liáng','3e42':'qiǎn','3e43':'fèi','3e44':'jì','3e45':'zǒng','3e46':'huī','3e47':'hé','3e48':'lí','3e49':'yuán','3e4a':'yuè','3e4b':'xiū','3e4c':'chǎn','3e4d':'dí','3e4e':'léi','3e4f':'jǐn','3e50':'chóng','3e51':'sì','3e52':'pǔ','3e53':'yǎo','3e54':'jiāng','3e55':'huān','3e56':'huàn','3e57':'tāo','3e58':'rù','3e59':'wěng','3e5a':'yíng','3e5b':'ráo','3e5c':'yín','3e5d':'shì','3e5e':'yín','3e5f':'jué','3e60':'tún','3e61':'xuán','3e62':'jiā','3e63':'zhōng','3e64':'qiè','3e65':'zhù','3e66':'diāo','3e67':'*','3e68':'yòu','3e69':'*','3e6a':'*','3e6b':'yí','3e6c':'shǐ','3e6d':'yì','3e6e':'mò','3e6f':'*','3e70':'*','3e71':'què','3e72':'xiāo','3e73':'wú','3e74':'gēng','3e75':'yǐng','3e76':'tíng','3e77':'shǐ','3e78':'ní','3e79':'gēng','3e7a':'tà','3e7b':'wō','3e7c':'jú','3e7d':'chǎn','3e7e':'piǎo','3e7f':'zhuó','3e80':'hū','3e81':'nǎo','3e82':'yán','3e83':'gǒu','3e84':'yǔ','3e85':'hóu','3e86':'*','3e87':'sī','3e88':'chī','3e89':'hù','3e8a':'yàng','3e8b':'wēng','3e8c':'xiàn','3e8d':'pín','3e8e':'róng','3e8f':'lóu','3e90':'lǎo','3e91':'shān','3e92':'xiāo','3e93':'zé','3e94':'hài','3e95':'fán','3e96':'hǎn','3e97':'chān','3e98':'zhàn','3e99':'*','3e9a':'tǎ','3e9b':'zhù','3e9c':'nóng','3e9d':'hàn','3e9e':'yú','3e9f':'zhuó','3ea0':'yòu','3ea1':'lì','3ea2':'huò','3ea3':'xī','3ea4':'xiān','3ea5':'chán','3ea6':'lián','3ea7':'*','3ea8':'sī','3ea9':'jiù','3eaa':'pú','3eab':'qiú','3eac':'gǒng','3ead':'zǐ','3eae':'yú','3eaf':'*','3eb0':'*','3eb1':'réng','3eb2':'niǔ','3eb3':'méi','3eb4':'bā','3eb5':'jiú','3eb6':'*','3eb7':'xù','3eb8':'píng','3eb9':'biàn','3eba':'mào','3ebb':'*','3ebc':'*','3ebd':'*','3ebe':'*','3ebf':'yí','3ec0':'yú','3ec1':'*','3ec2':'píng','3ec3':'qū','3ec4':'bǎo','3ec5':'huì','3ec6':'*','3ec7':'*','3ec8':'*','3ec9':'bù','3eca':'máng','3ecb':'là','3ecc':'tú','3ecd':'wú','3ece':'lì','3ecf':'líng','3ed0':'*','3ed1':'jì','3ed2':'jùn','3ed3':'zōu','3ed4':'duǒ','3ed5':'jué','3ed6':'dài','3ed7':'bèi','3ed8':'*','3ed9':'*','3eda':'*','3edb':'*','3edc':'*','3edd':'là','3ede':'bīn','3edf':'suí','3ee0':'tú','3ee1':'xuē','3ee2':'*','3ee3':'*','3ee4':'*','3ee5':'*','3ee6':'*','3ee7':'duò','3ee8':'*','3ee9':'*','3eea':'suì','3eeb':'bì','3eec':'tū','3eed':'sè','3eee':'càn','3eef':'tú','3ef0':'miǎn','3ef1':'jīn','3ef2':'lǚ','3ef3':'*','3ef4':'*','3ef5':'zhàn','3ef6':'bǐ','3ef7':'jí','3ef8':'zēn','3ef9':'xuān','3efa':'lì','3efb':'*','3efc':'*','3efd':'suì','3efe':'yōng','3eff':'shǔ','3f00':'*','3f01':'*','3f02':'é','3f03':'*','3f04':'*','3f05':'*','3f06':'*','3f07':'qióng','3f08':'luó','3f09':'zhèn','3f0a':'tún','3f0b':'gū','3f0c':'yǔ','3f0d':'lěi','3f0e':'bó','3f0f':'něi','3f10':'pián','3f11':'liàn','3f12':'tǎng','3f13':'lián','3f14':'wēn','3f15':'dāng','3f16':'lì','3f17':'tíng','3f18':'wǎ','3f19':'zhòu','3f1a':'gāng','3f1b':'xíng','3f1c':'àng','3f1d':'fàn','3f1e':'pèng','3f1f':'bó','3f20':'tuó','3f21':'shū','3f22':'yí','3f23':'bó','3f24':'qiè','3f25':'tǒu','3f26':'gǒng','3f27':'tóng','3f28':'hán','3f29':'chéng','3f2a':'jié','3f2b':'huàn','3f2c':'xìng','3f2d':'diàn','3f2e':'chāi','3f2f':'dòng','3f30':'pí','3f31':'ruǎn','3f32':'liè','3f33':'shěng','3f34':'ǒu','3f35':'dì','3f36':'yú','3f37':'chuán','3f38':'róng','3f39':'kāng','3f3a':'táng','3f3b':'cóng','3f3c':'piáo','3f3d':'chuǎng','3f3e':'lù','3f3f':'tóng','3f40':'zhèng','3f41':'lì','3f42':'sà','3f43':'pān','3f44':'sī','3f45':'*','3f46':'dāng','3f47':'hú','3f48':'yì','3f49':'xiàn','3f4a':'xiè','3f4b':'luó','3f4c':'liù','3f4d':'*','3f4e':'tán','3f4f':'gàn','3f50':'*','3f51':'tán','3f52':'*','3f53':'*','3f54':'*','3f55':'yóu','3f56':'nán','3f57':'*','3f58':'gǎng','3f59':'jùn','3f5a':'chì','3f5b':'gōu','3f5c':'wǎn','3f5d':'lì','3f5e':'liú','3f5f':'liè','3f60':'xiá','3f61':'bēi','3f62':'ǎn','3f63':'yù','3f64':'jú','3f65':'róu','3f66':'xún','3f67':'zī','3f68':'cuó','3f69':'càn','3f6a':'zěng','3f6b':'yōng','3f6c':'fù','3f6d':'ruǎn','3f6e':'*','3f6f':'xí','3f70':'shù','3f71':'jiǎo','3f72':'jiǎo','3f73':'xū','3f74':'zhàng','3f75':'*','3f76':'*','3f77':'shuì','3f78':'chén','3f79':'fǎn','3f7a':'jí','3f7b':'zhī','3f7c':'*','3f7d':'gù','3f7e':'wù','3f7f':'*','3f80':'qiè','3f81':'shù','3f82':'hāi','3f83':'tuó','3f84':'dú','3f85':'zǐ','3f86':'rán','3f87':'mù','3f88':'fù','3f89':'líng','3f8a':'jí','3f8b':'xiū','3f8c':'xuǎn','3f8d':'nái','3f8e':'yā','3f8f':'jiè','3f90':'lì','3f91':'dá','3f92':'rú','3f93':'yuān','3f94':'lǚ','3f95':'shěn','3f96':'lǐ','3f97':'liàng','3f98':'gěng','3f99':'xìn','3f9a':'xiē','3f9b':'qǐn','3f9c':'qiè','3f9d':'chè','3f9e':'yóu','3f9f':'bù','3fa0':'kuáng','3fa1':'què','3fa2':'ài','3fa3':'qīn','3fa4':'qiāng','3fa5':'chù','3fa6':'pèi','3fa7':'kuò','3fa8':'yī','3fa9':'guāi','3faa':'shěng','3fab':'piān','3fac':'*','3fad':'zhòu','3fae':'huáng','3faf':'huī','3fb0':'hú','3fb1':'bèi','3fb2':'*','3fb3':'*','3fb4':'zhā','3fb5':'jì','3fb6':'gǔ','3fb7':'xī','3fb8':'gǎo','3fb9':'chái','3fba':'mà','3fbb':'zhù','3fbc':'tuǐ','3fbd':'zhuì','3fbe':'xiān','3fbf':'láng','3fc0':'*','3fc1':'*','3fc2':'*','3fc3':'zhì','3fc4':'ài','3fc5':'xiǎn','3fc6':'guō','3fc7':'xí','3fc8':'*','3fc9':'tuǐ','3fca':'cǎn','3fcb':'sào','3fcc':'xiān','3fcd':'jiè','3fce':'fèn','3fcf':'qún','3fd0':'*','3fd1':'yào','3fd2':'dǎo','3fd3':'jiá','3fd4':'lěi','3fd5':'yán','3fd6':'lú','3fd7':'tuí','3fd8':'yíng','3fd9':'pì','3fda':'luò','3fdb':'lì','3fdc':'biě','3fdd':'*','3fde':'mào','3fdf':'bái','3fe0':'huàng','3fe1':'*','3fe2':'yào','3fe3':'hē','3fe4':'chǔn','3fe5':'hé','3fe6':'nìng','3fe7':'chóu','3fe8':'lì','3fe9':'tǎng','3fea':'huán','3feb':'bì','3fec':'bā','3fed':'chè','3fee':'yàng','3fef':'dá','3ff0':'áo','3ff1':'xué','3ff2':'*','3ff3':'zī','3ff4':'dā','3ff5':'rǎn','3ff6':'bāng','3ff7':'cuó','3ff8':'wǎn','3ff9':'tà','3ffa':'báo','3ffb':'gān','3ffc':'yán','3ffd':'xī','3ffe':'zhù','3fff':'yǎ','400a':'jiǎo','400b':'yán','400c':'xì','400d':'kàn','400e':'miǎn','400f':'xuàn','401a':'áng','401b':'mèi','401c':'gǔ','401d':'*','401e':'tāo','401f':'fán','402a':'háng','402b':'jiá','402c':'quán','402d':'gāi','402e':'huāng','402f':'bǔ','403a':'chōu','403b':'pìng','403c':'chēn','403d':'yán','403e':'dǔ','403f':'dì','404a':'wò','404b':'xiè','404c':'yù','404d':'qià','404e':'chéng','404f':'yǎo','405a':'sǔn','405b':'guì','405c':'huàng','405d':'yíng','405e':'shěng','405f':'chá','406a':'zhǎn','406b':'hú','406c':'céng','406d':'biāo','406e':'qián','406f':'xī','407a':'shì','407b':'shuò','407c':'mò','407d':'liè','407e':'miè','407f':'mò','408a':'yù','408b':'*','408c':'chōng','408d':'bó','408e':'zuǎn','408f':'diāo','409a':'yáo','409b':'yú','409c':'bàng','409d':'jié','409e':'zhè','409f':'jiā','40a0':'shǐ','40a1':'dǐ','40a2':'dǒng','40a3':'cí','40a4':'fù','40a5':'mín','40a6':'zhēn','40a7':'zhěn','40a8':'*','40a9':'yàn','40aa':'qiǎo','40ab':'hāng','40ac':'gǒng','40ad':'qiāo','40ae':'lüè','40af':'guài','40b0':'là','40b1':'ruì','40b2':'fǎ','40b3':'cuǒ','40b4':'yán','40b5':'gōng','40b6':'jié','40b7':'guāi','40b8':'guó','40b9':'suǒ','40ba':'wǒ','40bb':'zhèng','40bc':'niè','40bd':'diào','40be':'lǎi','40bf':'tà','40c0':'cuì','40c1':'yā','40c2':'gǔn','40c3':'*','40c4':'*','40c5':'dī','40c6':'*','40c7':'mián','40c8':'jiē','40c9':'mín','40ca':'jǔ','40cb':'yú','40cc':'zhēn','40cd':'zhào','40ce':'zhà','40cf':'xīng','40d0':'*','40d1':'bān','40d2':'hé','40d3':'gòu','40d4':'hóng','40d5':'láo','40d6':'wù','40d7':'bō','40d8':'kēng','40d9':'lù','40da':'cù','40db':'lián','40dc':'yī','40dd':'qiào','40de':'shú','40df':'*','40e0':'xuàn','40e1':'jīn','40e2':'qīn','40e3':'huǐ','40e4':'sù','40e5':'chuáng','40e6':'dūn','40e7':'lóng','40e8':'*','40e9':'náo','40ea':'tán','40eb':'dǎn','40ec':'wěi','40ed':'gǎn','40ee':'dá','40ef':'lì','40f0':'cā','40f1':'xiàn','40f2':'pán','40f3':'là','40f4':'zhū','40f5':'niǎo','40f6':'huái','40f7':'yíng','40f8':'xiàn','40f9':'làn','40fa':'mó','40fb':'bà','40fc':'*','40fd':'guǐ','40fe':'bǐ','40ff':'fū','410a':'*','410b':'yǎn','410c':'zhuì','410d':'zhà','410e':'qǐ','410f':'yú','411a':'cáo','411b':'lóu','411c':'lí','411d':'chuāng','411e':'*','411f':'cuī','412a':'diǎo','412b':'qǐ','412c':'yí','412d':'nián','412e':'fū','412f':'jiǎn','413a':'zhì','413b':'táo','413c':'tiǎn','413d':'tiǎn','413e':'rù','413f':'yì','414a':'chá','414b':'wǎn','414c':'juān','414d':'tǐng','414e':'yǒu','414f':'huì','415a':'quǎn','415b':'chāng','415c':'duò','415d':'kōng','415e':'nè','415f':'cǎn','416a':'tuí','416b':'*','416c':'ài','416d':'páng','416e':'càng','416f':'táng','417a':'biāo','417b':'lí','417c':'mán','417d':'xīn','417e':'cén','417f':'huáng','418a':'cuì','418b':'qiū','418c':'*','418d':'lóng','418e':'xiān','418f':'fèi','419a':'tóng','419b':'zhà','419c':'yòu','419d':'xuè','419e':'yǎo','419f':'kè','41a0':'huàn','41a1':'láng','41a2':'yuè','41a3':'chén','41a4':'*','41a5':'*','41a6':'shèn','41a7':'*','41a8':'níng','41a9':'míng','41aa':'hōng','41ab':'chuāng','41ac':'yǔn','41ad':'xuān','41ae':'jìn','41af':'zhuó','41b0':'yū','41b1':'tān','41b2':'kāng','41b3':'qióng','41b4':'*','41b5':'chéng','41b6':'jiū','41b7':'xuè','41b8':'zhēng','41b9':'chōng','41ba':'pān','41bb':'qiào','41bc':'*','41bd':'qú','41be':'lán','41bf':'yì','41c0':'róng','41c1':'sī','41c2':'qiān','41c3':'sì','41c4':'*','41c5':'fá','41c6':'*','41c7':'méng','41c8':'huà','41c9':'*','41ca':'*','41cb':'hài','41cc':'qiào','41cd':'chù','41ce':'què','41cf':'duì','41d0':'lì','41d1':'bà','41d2':'jiè','41d3':'xū','41d4':'luò','41d5':'*','41d6':'yǔn','41d7':'zhōng','41d8':'hù','41d9':'yǐn','41da':'*','41db':'zhǐ','41dc':'qiǎn','41dd':'*','41de':'gān','41df':'jiàn','41e0':'zhù','41e1':'zhù','41e2':'kǔ','41e3':'niè','41e4':'ruì','41e5':'zé','41e6':'ǎng','41e7':'zhì','41e8':'gòng','41e9':'yì','41ea':'chī','41eb':'jī','41ec':'zhū','41ed':'lǎo','41ee':'rèn','41ef':'róng','41f0':'zhēng','41f1':'nà','41f2':'cè','41f3':'*','41f4':'*','41f5':'yí','41f6':'jué','41f7':'bié','41f8':'chéng','41f9':'jùn','41fa':'dòu','41fb':'wěi','41fc':'yì','41fd':'zhé','41fe':'yán','41ff':'*','420a':'líng','420b':'tà','420c':'qū','420d':'máng','420e':'yè','420f':'báo','421a':'tái','421b':'kuài','421c':'qìn','421d':'xū','421e':'dǔ','421f':'cè','422a':'xì','422b':'nà','422c':'pú','422d':'sōu','422e':'jù','422f':'zhēn','423a':'zhōng','423b':'pú','423c':'miè','423d':'jīn','423e':'shāo','423f':'mì','424a':'fàn','424b':'mèi','424c':'suì','424d':'jiǎn','424e':'táng','424f':'xiè','425a':'méng','425b':'yù','425c':'zhì','425d':'yǐ','425e':'dǎn','425f':'huò','426a':'lèi','426b':'lí','426c':'fèi','426d':'liè','426e':'lìn','426f':'xiàn','427a':'hóng','427b':'qí','427c':'liào','427d':'bǎn','427e':'bì','427f':'hú','428a':'wèi','428b':'*','428c':'*','428d':'lí','428e':'quǎn','428f':'*','429a':'*','429b':'sà','429c':'tuán','429d':'xiè','429e':'zhé','429f':'mén','42a0':'xì','42a1':'mán','42a2':'*','42a3':'huáng','42a4':'tán','42a5':'xiào','42a6':'yè','42a7':'bì','42a8':'luó','42a9':'fán','42aa':'lì','42ab':'cuǐ','42ac':'chuā','42ad':'dào','42ae':'dí','42af':'kuàng','42b0':'chú','42b1':'xiān','42b2':'chàn','42b3':'mí','42b4':'qiàn','42b5':'qiú','42b6':'zhèn','42b7':'*','42b8':'*','42b9':'*','42ba':'hù','42bb':'gān','42bc':'chǐ','42bd':'guài','42be':'mù','42bf':'bó','42c0':'huà','42c1':'gěng','42c2':'yáo','42c3':'mào','42c4':'wǎng','42c5':'*','42c6':'*','42c7':'*','42c8':'rú','42c9':'xué','42ca':'zhēng','42cb':'mín','42cc':'jiǎng','42cd':'*','42ce':'zhàn','42cf':'zuó','42d0':'yuè','42d1':'liè','42d2':'*','42d3':'zhòu','42d4':'bì','42d5':'rèn','42d6':'yù','42d7':'*','42d8':'chuò','42d9':'ěr','42da':'yì','42db':'mǐ','42dc':'qìng','42dd':'*','42de':'wǎng','42df':'jì','42e0':'bǔ','42e1':'*','42e2':'biē','42e3':'fán','42e4':'yuè','42e5':'lí','42e6':'fán','42e7':'qú','42e8':'fǔ','42e9':'ér','42ea':'ē','42eb':'zhēng','42ec':'tiān','42ed':'yù','42ee':'jìn','42ef':'qǐ','42f0':'jú','42f1':'lái','42f2':'chě','42f3':'běi','42f4':'niù','42f5':'yì','42f6':'xǔ','42f7':'móu','42f8':'xún','42f9':'fú','42fa':'*','42fb':'nín','42fc':'tīng','42fd':'běng','42fe':'zhǎ','42ff':'wēi','430a':'yáo','430b':'dā','430c':'qì','430d':'jǐn','430e':'lüè','430f':'mì','431a':'sū','431b':'yáo','431c':'niè','431d':'jīn','431e':'liǎn','431f':'bó','432a':'yǎn','432b':'lǎn','432c':'chóng','432d':'jiāo','432e':'shuāng','432f':'quān','433a':'ěr','433b':'yì','433c':'ruì','433d':'cǎi','433e':'rén','433f':'fú','434a':'jiāo','434b':'chuí','434c':'bù','434d':'kòu','434e':'cùn','434f':'*','435a':'làng','435b':'gù','435c':'zhào','435d':'tà','435e':'yù','435f':'zòng','436a':'wà','436b':'tuó','436c':'pēng','436d':'*','436e':'zhào','436f':'guǐ','437a':'huàn','437b':'xuàn','437c':'zān','437d':'lì','437e':'yǎn','437f':'huáng','438a':'luò','438b':'kào','438c':'chù','438d':'*','438e':'nà','438f':'hán','439a':'guàn','439b':'*','439c':'hūn','439d':'chú','439e':'*','439f':'ér','43a0':'ér','43a1':'ruǎn','43a2':'qǐ','43a3':'sì','43a4':'jú','43a5':'*','43a6':'yǎn','43a7':'bàng','43a8':'yè','43a9':'zī','43aa':'nè','43ab':'chuàng','43ac':'bà','43ad':'cāo','43ae':'tì','43af':'hàn','43b0':'zuó','43b1':'bà','43b2':'zhé','43b3':'wà','43b4':'gēng','43b5':'bì','43b6':'èr','43b7':'zhù','43b8':'wù','43b9':'wén','43ba':'zhì','43bb':'zhòu','43bc':'lù','43bd':'wén','43be':'gǔn','43bf':'qiú','43c0':'là','43c1':'zǎi','43c2':'sǒu','43c3':'mián','43c4':'dǐ','43c5':'qì','43c6':'cáo','43c7':'piào','43c8':'lián','43c9':'shī','43ca':'lóng','43cb':'sù','43cc':'qì','43cd':'yuàn','43ce':'féng','43cf':'xū','43d0':'jué','43d1':'dì','43d2':'piàn','43d3':'guǎn','43d4':'niǔ','43d5':'rèn','43d6':'zhèn','43d7':'gài','43d8':'pì','43d9':'tǎn','43da':'chǎo','43db':'chǔn','43dc':'hē','43dd':'zhuān','43de':'mò','43df':'bié','43e0':'qì','43e1':'shì','43e2':'bǐ','43e3':'jué','43e4':'sì','43e5':'*','43e6':'guā','43e7':'nà','43e8':'huǐ','43e9':'xī','43ea':'èr','43eb':'xiū','43ec':'móu','43ed':'*','43ee':'xí','43ef':'zhì','43f0':'rùn','43f1':'jú','43f2':'dié','43f3':'zhè','43f4':'shào','43f5':'měng','43f6':'bì','43f7':'hàn','43f8':'yú','43f9':'xiàn','43fa':'pāng','43fb':'néng','43fc':'cán','43fd':'bù','43fe':'*','43ff':'qǐ','440a':'kūn','440b':'cōng','440c':'tiǎn','440d':'chù','440e':'dī','440f':'chǔn','441a':'jī','441b':'dā','441c':'chēn','441d':'suò','441e':'ruò','441f':'xiǎng','442a':'fàn','442b':'cōng','442c':'cáo','442d':'zhì','442e':'chǎn','442f':'léi','443a':'tàn','443b':'gū','443c':'xì','443d':'mán','443e':'duó','443f':'ào','444a':'wéi','444b':'rǎng','444c':'lán','444d':'yān','444e':'chǎn','444f':'quán','445a':'tián','445b':'chǐ','445c':'tà','445d':'jiǎ','445e':'shùn','445f':'huáng','446a':'è','446b':'bēng','446c':'tāo','446d':'dì','446e':'*','446f':'dì','447a':'*','447b':'yóu','447c':'zhōu','447d':'tà','447e':'*','447f':'sù','448a':'xī','448b':'yǎng','448c':'mìng','448d':'pǎng','448e':'mǎng','448f':'sēng','449a':'shǎo','449b':'huàn','449c':'niú','449d':'xiáo','449e':'chén','449f':'dān','44a0':'fēng','44a1':'yǐn','44a2':'áng','44a3':'rǎn','44a4':'rì','44a5':'mán','44a6':'fàn','44a7':'qū','44a8':'shǐ','44a9':'hé','44aa':'biàn','44ab':'dài','44ac':'mò','44ad':'děng','44ae':'*','44af':'*','44b0':'kuāng','44b1':'*','44b2':'chà','44b3':'duǒ','44b4':'yǒu','44b5':'hào','44b6':'*','44b7':'guā','44b8':'xuè','44b9':'lèi','44ba':'jǐn','44bb':'qǐ','44bc':'qū','44bd':'wǎng','44be':'yī','44bf':'liáo','44c0':'*','44c1':'*','44c2':'yán','44c3':'yì','44c4':'yín','44c5':'qí','44c6':'zhé','44c7':'xì','44c8':'yì','44c9':'yé','44ca':'wú','44cb':'zhī','44cc':'zhì','44cd':'hǎn','44ce':'chuò','44cf':'fū','44d0':'chún','44d1':'píng','44d2':'kuǎi','44d3':'chóu','44d4':'*','44d5':'tuǒ','44d6':'qióng','44d7':'cōng','44d8':'gāo','44d9':'kuā','44da':'qū','44db':'qū','44dc':'zhī','44dd':'mèng','44de':'lì','44df':'zhōu','44e0':'tà','44e1':'zhī','44e2':'gù','44e3':'liǎng','44e4':'hū','44e5':'là','44e6':'diǎn','44e7':'cì','44e8':'yīng','44e9':'*','44ea':'*','44eb':'qí','44ec':'*','44ed':'chà','44ee':'mào','44ef':'dú','44f0':'yīn','44f1':'chái','44f2':'ruì','44f3':'hěn','44f4':'ruǎn','44f5':'fū','44f6':'lài','44f7':'xìng','44f8':'jiān','44f9':'yì','44fa':'měi','44fb':'*','44fc':'máng','44fd':'jì','44fe':'suō','44ff':'hàn','450a':'bīng','450b':'suō','450c':'*','450d':'*','450e':'sù','450f':'chòu','451a':'chún','451b':'qǐng','451c':'nán','451d':'zhāi','451e':'lǜ','451f':'yí','452a':'shuǎng','452b':'*','452c':'yì','452d':'nìng','452e':'sī','452f':'kù','453a':'wéi','453b':'dūn','453c':'sè','453d':'ài','453e':'qì','453f':'zǔn','454a':'tán','454b':'táng','454c':'zhì','454d':'yì','454e':'fú','454f':'é','455a':'kuì','455b':'jiá','455c':'*','455d':'chēng','455e':'làng','455f':'xīng','456a':'zé','456b':'kuí','456c':'*','456d':'qián','456e':'jú','456f':'piáo','457a':'cóng','457b':'lì','457c':'rán','457d':'zhú','457e':'yín','457f':'hàn','458a':'yì','458b':'nüè','458c':'yì','458d':'qián','458e':'xiá','458f':'chǔ','459a':'wū','459b':'suǒ','459c':'yín','459d':'chóng','459e':'zhǒu','459f':'mǎng','45a0':'yuán','45a1':'nǜ','45a2':'miáo','45a3':'zǎo','45a4':'wǎn','45a5':'lí','45a6':'qū','45a7':'nà','45a8':'shí','45a9':'bì','45aa':'zī','45ab':'bàng','45ac':'*','45ad':'juàn','45ae':'xiǎng','45af':'kuí','45b0':'pài','45b1':'kuāng','45b2':'xún','45b3':'zhà','45b4':'yáo','45b5':'kūn','45b6':'huī','45b7':'xī','45b8':'é','45b9':'yáng','45ba':'tiáo','45bb':'yóu','45bc':'jué','45bd':'lí','45be':'*','45bf':'lí','45c0':'chēng','45c1':'jì','45c2':'hǔ','45c3':'zhàn','45c4':'fǔ','45c5':'cháng','45c6':'guǎn','45c7':'jú','45c8':'méng','45c9':'chāng','45ca':'tàn','45cb':'móu','45cc':'xīng','45cd':'lǐ','45ce':'yān','45cf':'sōu','45d0':'shī','45d1':'yì','45d2':'bìng','45d3':'cōng','45d4':'hóu','45d5':'wǎn','45d6':'dì','45d7':'jī','45d8':'gé','45d9':'hán','45da':'bó','45db':'xiū','45dc':'liú','45dd':'cán','45de':'cán','45df':'yì','45e0':'xuán','45e1':'yán','45e2':'zǎo','45e3':'hàn','45e4':'yóng','45e5':'zōng','45e6':'*','45e7':'kāng','45e8':'yú','45e9':'qī','45ea':'zhè','45eb':'má','45ec':'*','45ed':'*','45ee':'shuǎng','45ef':'jìn','45f0':'guàn','45f1':'pú','45f2':'lìn','45f3':'*','45f4':'tíng','45f5':'jiāng','45f6':'là','45f7':'yì','45f8':'yōng','45f9':'cì','45fa':'yǎn','45fb':'jié','45fc':'xūn','45fd':'wèi','45fe':'xiǎn','45ff':'níng','460a':'miè','460b':'jiān','460c':'nì','460d':'chài','460e':'wān','460f':'xù','461a':'zhú','461b':'*','461c':'*','461d':'yì','461e':'*','461f':'diāo','462a':'chōng','462b':'nòu','462c':'róng','462d':'zhì','462e':'sāng','462f':'*','463a':'zhàn','463b':'yù','463c':'wǎn','463d':'ní','463e':'guǎn','463f':'jué','464a':'xiè','464b':'*','464c':'kuì','464d':'*','464e':'xié','464f':'bó','465a':'niǎo','465b':'guàn','465c':'féng','465d':'xiè','465e':'dēng','465f':'wéi','466a':'lóng','466b':'*','466c':'yìng','466d':'*','466e':'guàn','466f':'cù','467a':'lián','467b':'*','467c':'shào','467d':'xié','467e':'shī','467f':'wèi','468a':'jiǎn','468b':'yùn','468c':'*','468d':'qì','468e':'*','468f':'lìn','469a':'xiǎn','469b':'hú','469c':'bī','469d':'zú','469e':'dǎi','469f':'dǎi','46a0':'hùn','46a1':'sāi','46a2':'chè','46a3':'tí','46a4':'*','46a5':'nuò','46a6':'zhì','46a7':'liú','46a8':'fèi','46a9':'jiǎo','46aa':'guān','46ab':'xí','46ac':'lín','46ad':'xuān','46ae':'réng','46af':'tǎo','46b0':'pǐ','46b1':'xìn','46b2':'shàn','46b3':'zhì','46b4':'wà','46b5':'tǒu','46b6':'tiān','46b7':'yī','46b8':'xiè','46b9':'pǐ','46ba':'yáo','46bb':'yáo','46bc':'nǜ','46bd':'hào','46be':'nín','46bf':'yìn','46c0':'fǎn','46c1':'nán','46c2':'yāo','46c3':'wàn','46c4':'yuǎn','46c5':'xiá','46c6':'zhòu','46c7':'yuǎn','46c8':'shì','46c9':'miàn','46ca':'xī','46cb':'jì','46cc':'táo','46cd':'fèi','46ce':'xuè','46cf':'ní','46d0':'cí','46d1':'mì','46d2':'biàn','46d3':'*','46d4':'ná','46d5':'yù','46d6':'è','46d7':'zhǐ','46d8':'rén','46d9':'xù','46da':'lüè','46db':'huì','46dc':'xùn','46dd':'náo','46de':'hàn','46df':'jiá','46e0':'dòu','46e1':'huà','46e2':'tū','46e3':'pīng','46e4':'cù','46e5':'xī','46e6':'sòng','46e7':'mí','46e8':'xìn','46e9':'wù','46ea':'qióng','46eb':'zhāng','46ec':'táo','46ed':'xìng','46ee':'jiù','46ef':'jù','46f0':'hùn','46f1':'tí','46f2':'mán','46f3':'yàn','46f4':'jī','46f5':'shòu','46f6':'lěi','46f7':'wǎn','46f8':'chè','46f9':'càn','46fa':'jiè','46fb':'yòu','46fc':'huǐ','46fd':'zhǎ','46fe':'sù','46ff':'gé','470a':'zāo','470b':'huì','470c':'luán','470d':'liáo','470e':'láo','470f':'tuō','471a':'tà','471b':'chán','471c':'wèi','471d':'tuǎn','471e':'jì','471f':'chén','472a':'qiú','472b':'jiāng','472c':'sǒng','472d':'jùn','472e':'liáo','472f':'jú','473a':'chǎi','473b':'chǐ','473c':'gú','473d':'yú','473e':'yīn','473f':'*','474a':'shà','474b':'zòng','474c':'jué','474d':'jùn','474e':'tuān','474f':'lóu','475a':'ní','475b':'bō','475c':'suān','475d':'yǐ','475e':'hào','475f':'yà','476a':'shǔ','476b':'zuó','476c':'zhù','476d':'gòu','476e':'xuàn','476f':'yì','477a':'guàn','477b':'jū','477c':'jìng','477d':'ài','477e':'fù','477f':'guì','478a':'xùn','478b':'chèn','478c':'shé','478d':'qíng','478e':'*','478f':'*','479a':'qí','479b':'yān','479c':'fù','479d':'yù','479e':'fú','479f':'pò','47a0':'zhī','47a1':'tǎn','47a2':'zuó','47a3':'chě','47a4':'qú','47a5':'yòu','47a6':'hé','47a7':'hòu','47a8':'guǐ','47a9':'è','47aa':'jiàng','47ab':'yǔn','47ac':'tòu','47ad':'cūn','47ae':'tū','47af':'fù','47b0':'zuó','47b1':'hú','47b2':'*','47b3':'bó','47b4':'zhāo','47b5':'juě','47b6':'tāng','47b7':'jué','47b8':'fù','47b9':'huáng','47ba':'chūn','47bb':'yǒng','47bc':'chuǐ','47bd':'suǒ','47be':'chí','47bf':'qiān','47c0':'cāi','47c1':'xiáo','47c2':'mán','47c3':'cān','47c4':'qì','47c5':'jiàn','47c6':'bì','47c7':'jī','47c8':'zhí','47c9':'zhú','47ca':'qú','47cb':'zhǎn','47cc':'jí','47cd':'biān','47ce':'*','47cf':'lì','47d0':'lì','47d1':'yuè','47d2':'quán','47d3':'chēng','47d4':'fù','47d5':'chà','47d6':'tàng','47d7':'shì','47d8':'hàng','47d9':'qiè','47da':'qí','47db':'bó','47dc':'nà','47dd':'tòu','47de':'chú','47df':'cù','47e0':'yuè','47e1':'zhī','47e2':'chén','47e3':'chù','47e4':'bì','47e5':'méng','47e6':'bá','47e7':'tián','47e8':'mín','47e9':'liě','47ea':'fěng','47eb':'chēng','47ec':'qiù','47ed':'tiáo','47ee':'fú','47ef':'kuò','47f0':'jiǎn','47f1':'*','47f2':'*','47f3':'*','47f4':'zhèn','47f5':'qiú','47f6':'zuò','47f7':'chì','47f8':'kuí','47f9':'liè','47fa':'bèi','47fb':'dù','47fc':'wǔ','47fd':'*','47fe':'zhuó','47ff':'lù','480a':'fèi','480b':'bì','480c':'*','480d':'xiā','480e':'wò','480f':'jì','481a':'wà','481b':'yáo','481c':'róng','481d':'xūn','481e':'cù','481f':'dié','482a':'duàn','482b':'zòu','482c':'dèng','482d':'lái','482e':'téng','482f':'yuè','483a':'*','483b':'qióng','483c':'shù','483d':'hái','483e':'shǎn','483f':'wài','484a':'fǎn','484b':'qí','484c':'hóng','484d':'fú','484e':'lú','484f':'hóng','485a':'mào','485b':'yìn','485c':'lù','485d':'yuān','485e':'jú','485f':'pì','486a':'shàn','486b':'péng','486c':'màn','486d':'xiū','486e':'*','486f':'cōng','487a':'wèi','487b':'mín','487c':'líng','487d':'zuān','487e':'niè','487f':'líng','488a':'yóu','488b':'jì','488c':'bó','488d':'fǎng','488e':'*','488f':'*','489a':'gēng','489b':'jiǒng','489c':'*','489d':'yà','489e':'shù','489f':'yóu','48a0':'sòng','48a1':'yè','48a2':'càng','48a3':'yáo','48a4':'shù','48a5':'yán','48a6':'shuài','48a7':'liào','48a8':'cōng','48a9':'yù','48aa':'bó','48ab':'suí','48ac':'*','48ad':'yàn','48ae':'lèi','48af':'lín','48b0':'tī','48b1':'dú','48b2':'yuè','48b3':'jǐ','48b4':'*','48b5':'yún','48b6':'*','48b7':'*','48b8':'jū','48b9':'jǔ','48ba':'chū','48bb':'chén','48bc':'gōng','48bd':'xiàng','48be':'xiǎn','48bf':'ān','48c0':'guǐ','48c1':'yǔ','48c2':'lěi','48c3':'*','48c4':'tú','48c5':'chén','48c6':'xíng','48c7':'qiú','48c8':'hàng','48c9':'*','48ca':'dǎng','48cb':'cǎi','48cc':'dǐ','48cd':'yǎn','48ce':'zī','48cf':'*','48d0':'yīng','48d1':'chán','48d2':'*','48d3':'lí','48d4':'suǒ','48d5':'mǎ','48d6':'mǎ','48d7':'*','48d8':'táng','48d9':'péi','48da':'lóu','48db':'qī','48dc':'cuó','48dd':'tú','48de':'è','48df':'cán','48e0':'jié','48e1':'yí','48e2':'jí','48e3':'dǎng','48e4':'jué','48e5':'bǐ','48e6':'lèi','48e7':'yì','48e8':'chún','48e9':'chún','48ea':'pò','48eb':'lí','48ec':'zǎi','48ed':'tài','48ee':'pò','48ef':'cú','48f0':'jù','48f1':'xù','48f2':'fàn','48f3':'*','48f4':'xù','48f5':'èr','48f6':'huó','48f7':'zhū','48f8':'rǎn','48f9':'fá','48fa':'juān','48fb':'hān','48fc':'liáng','48fd':'zhī','48fe':'mì','48ff':'yū','490a':'róng','490b':'yù','490c':'qiāng','490d':'mí','490e':'jú','490f':'pǐ','491a':'lǐ','491b':'qiú','491c':'dùn','491d':'yìng','491e':'yǔn','491f':'chén','492a':'duǒ','492b':'chán','492c':'shā','492d':'shì','492e':'shè','492f':'xíng','493a':'jīn','493b':'duò','493c':'xiàn','493d':'guān','493e':'tāo','493f':'qiè','494a':'*','494b':'pēng','494c':'zhèng','494d':'zhì','494e':'chún','494f':'yǔ','495a':'*','495b':'jiē','495c':'jiàn','495d':'áo','495e':'jiǎo','495f':'yè','496a':'xiǎn','496b':'tiě','496c':'bó','496d':'zhèng','496e':'zhú','496f':'bēi','497a':'yé','497b':'*','497c':'*','497d':'pō','497e':'xiě','497f':'*','498a':'niǎo','498b':'áo','498c':'chù','498d':'wù','498e':'guǎn','498f':'xiè','499a':'kuà','499b':'zhèng','499c':'wú','499d':'huō','499e':'rùn','499f':'wěn','49a0':'dū','49a1':'huán','49a2':'kuò','49a3':'fù','49a4':'chuài','49a5':'xián','49a6':'qín','49a7':'qié','49a8':'lán','49a9':'*','49aa':'yà','49ab':'yīng','49ac':'què','49ad':'hāng','49ae':'chǔn','49af':'zhì','49b0':'*','49b1':'wěi','49b2':'yán','49b3':'xiàng','49b4':'yì','49b5':'nǐ','49b6':'zhèng','49b7':'chuài','49b8':'*','49b9':'shí','49ba':'dīng','49bb':'zǐ','49bc':'jué','49bd':'xù','49be':'yuán','49bf':'*','49c0':'*','49c1':'xǔ','49c2':'dào','49c3':'tián','49c4':'gè','49c5':'yí','49c6':'hóng','49c7':'yī','49c8':'*','49c9':'lǐ','49ca':'kū','49cb':'xiǎn','49cc':'suī','49cd':'xì','49ce':'xuàn','49cf':'*','49d0':'*','49d1':'dī','49d2':'lái','49d3':'zhōu','49d4':'niàn','49d5':'chéng','49d6':'jiàn','49d7':'bì','49d8':'zhuàn','49d9':'líng','49da':'hào','49db':'bàng','49dc':'táng','49dd':'chī','49de':'mà','49df':'xiàn','49e0':'shuàn','49e1':'yōng','49e2':'qū','49e3':'*','49e4':'pú','49e5':'huì','49e6':'wéi','49e7':'yǐ','49e8':'yè','49e9':'*','49ea':'chè','49eb':'háo','49ec':'bīn','49ed':'*','49ee':'xiàn','49ef':'chán','49f0':'hùn','49f1':'*','49f2':'hàn','49f3':'cí','49f4':'zhī','49f5':'qí','49f6':'kuí','49f7':'róu','49f8':'*','49f9':'yīng','49fa':'xióng','49fb':'*','49fc':'hú','49fd':'cuǐ','49fe':'*','49ff':'què','4a00':'dí','4a01':'wù','4a02':'qiū','4a03':'*','4a04':'yàn','4a05':'liáo','4a06':'bí','4a07':'*','4a08':'bīn','4a09':'*','4a0a':'yuān','4a0b':'nüè','4a0c':'báo','4a0d':'yǐng','4a0e':'hóng','4a0f':'cí','4a10':'qià','4a11':'tí','4a12':'yù','4a13':'léi','4a14':'báo','4a15':'*','4a16':'jì','4a17':'fú','4a18':'xiàn','4a19':'cén','4a1a':'hū','4a1b':'sè','4a1c':'bēng','4a1d':'qīng','4a1e':'yǔ','4a1f':'wā','4a20':'ǎi','4a21':'hán','4a22':'dàn','4a23':'gé','4a24':'dí','4a25':'huò','4a26':'pāng','4a27':'*','4a28':'zhuī','4a29':'líng','4a2a':'mái','4a2b':'mài','4a2c':'lián','4a2d':'xiāo','4a2e':'xuě','4a2f':'zhèn','4a30':'pò','4a31':'fù','4a32':'nóu','4a33':'xì','4a34':'duì','4a35':'dàn','4a36':'yǔn','4a37':'xiàn','4a38':'yǐn','4a39':'shū','4a3a':'duì','4a3b':'bèng','4a3c':'hù','4a3d':'fěi','4a3e':'fèi','4a3f':'zá','4a40':'bèi','4a41':'fēi','4a42':'xiān','4a43':'shì','4a44':'miǎn','4a45':'zhǎn','4a46':'zhǎn','4a47':'zhān','4a48':'huì','4a49':'fǔ','4a4a':'wǎn','4a4b':'mǒ','4a4c':'qiáo','4a4d':'liǎo','4a4e':'*','4a4f':'miè','4a50':'hū','4a51':'hóng','4a52':'yú','4a53':'qí','4a54':'duò','4a55':'áng','4a56':'*','4a57':'bà','4a58':'dì','4a59':'xuàn','4a5a':'dì','4a5b':'bì','4a5c':'zhòu','4a5d':'páo','4a5e':'tié','4a5f':'yí','4a60':'*','4a61':'jiá','4a62':'zhì','4a63':'tú','4a64':'xié','4a65':'dàn','4a66':'tiáo','4a67':'xiè','4a68':'chàng','4a69':'yuǎn','4a6a':'guǎn','4a6b':'liǎng','4a6c':'běng','4a6d':'*','4a6e':'lù','4a6f':'jí','4a70':'xuàn','4a71':'shù','4a72':'dū','4a73':'sōu','4a74':'hú','4a75':'yùn','4a76':'chǎn','4a77':'bāng','4a78':'róng','4a79':'é','4a7a':'wēng','4a7b':'bà','4a7c':'féng','4a7d':'yū','4a7e':'zhè','4a7f':'fén','4a80':'guǎn','4a81':'bǔ','4a82':'gé','4a83':'dūn','4a84':'huáng','4a85':'dú','4a86':'tǐ','4a87':'bó','4a88':'qiàn','4a89':'liè','4a8a':'lóng','4a8b':'wèi','4a8c':'zhàn','4a8d':'lán','4a8e':'suī','4a8f':'nà','4a90':'bì','4a91':'tuó','4a92':'zhù','4a93':'diē','4a94':'bǔ','4a95':'jú','4a96':'pò','4a97':'xiá','4a98':'wěi','4a99':'pò','4a9a':'dā','4a9b':'fān','4a9c':'chān','4a9d':'hù','4a9e':'zá','4a9f':'*','4aa0':'*','4aa1':'*','4aa2':'*','4aa3':'*','4aa4':'fán','4aa5':'xiè','4aa6':'hóng','4aa7':'chí','4aa8':'báo','4aa9':'yín','4aaa':'*','4aab':'jīng','4aac':'bó','4aad':'ruǎn','4aae':'chǒu','4aaf':'yīng','4ab0':'yī','4ab1':'gǎi','4ab2':'kūn','4ab3':'yǔn','4ab4':'zhěn','4ab5':'yǎ','4ab6':'jū','4ab7':'hòu','4ab8':'mín','4ab9':'bāi','4aba':'gé','4abb':'biàn','4abc':'zhuō','4abd':'hào','4abe':'zhěn','4abf':'shěng','4ac0':'gěn','4ac1':'bì','4ac2':'duǒ','4ac3':'chún','4ac4':'chuà','4ac5':'sàn','4ac6':'chéng','4ac7':'rán','4ac8':'chěn','4ac9':'mào','4aca':'péi','4acb':'wēi','4acc':'pǐ','4acd':'fǔ','4ace':'zhuō','4acf':'qī','4ad0':'lín','4ad1':'yī','4ad2':'mén','4ad3':'wú','4ad4':'qì','4ad5':'dié','4ad6':'chěn','4ad7':'xiá','4ad8':'hé','4ad9':'sǎng','4ada':'guā','4adb':'hóu','4adc':'āo','4add':'fǔ','4ade':'qiāo','4adf':'hùn','4ae0':'pī','4ae1':'yán','4ae2':'sī','4ae3':'xí','4ae4':'míng','4ae5':'kuǐ','4ae6':'gé','4ae7':'*','4ae8':'ào','4ae9':'sǎn','4aea':'shuǎng','4aeb':'lóu','4aec':'zhěn','4aed':'huì','4aee':'chán','4aef':'*','4af0':'lìn','4af1':'ná','4af2':'hàn','4af3':'dú','4af4':'jìn','4af5':'mián','4af6':'fán','4af7':'è','4af8':'chāo','4af9':'hóng','4afa':'hóng','4afb':'yù','4afc':'xuè','4afd':'pāo','4afe':'bī','4aff':'chāo','4b00':'yǒu','4b01':'yí','4b02':'xuè','4b03':'sà','4b04':'xù','4b05':'lì','4b06':'lì','4b07':'yuàn','4b08':'duì','4b09':'huò','4b0a':'shà','4b0b':'léng','4b0c':'pōu','4b0d':'hū','4b0e':'guó','4b0f':'bù','4b10':'ruí','4b11':'wèi','4b12':'sōu','4b13':'àn','4b14':'yú','4b15':'xiāng','4b16':'héng','4b17':'yáng','4b18':'xiāo','4b19':'yáo','4b1a':'*','4b1b':'bì','4b1c':'*','4b1d':'héng','4b1e':'táo','4b1f':'liú','4b20':'*','4b21':'zhù','4b22':'*','4b23':'xì','4b24':'zàn','4b25':'yì','4b26':'dòu','4b27':'yuán','4b28':'jiù','4b29':'*','4b2a':'bó','4b2b':'tí','4b2c':'yǐng','4b2d':'*','4b2e':'yí','4b2f':'nián','4b30':'shào','4b31':'bèn','4b32':'gōu','4b33':'bǎn','4b34':'mò','4b35':'gāi','4b36':'èn','4b37':'shě','4b38':'*','4b39':'zhì','4b3a':'yàng','4b3b':'jiàn','4b3c':'yuàn','4b3d':'shuì','4b3e':'tí','4b3f':'wěi','4b40':'xùn','4b41':'zhì','4b42':'yì','4b43':'rěn','4b44':'shì','4b45':'hú','4b46':'nè','4b47':'yē','4b48':'jiàn','4b49':'suǐ','4b4a':'yǐng','4b4b':'bǎo','4b4c':'hú','4b4d':'hú','4b4e':'yè','4b4f':'*','4b50':'yàng','4b51':'lián','4b52':'xī','4b53':'èn','4b54':'duī','4b55':'zǎn','4b56':'zhù','4b57':'yǐng','4b58':'yǐng','4b59':'jǐn','4b5a':'chuáng','4b5b':'dàn','4b5c':'*','4b5d':'kuài','4b5e':'yì','4b5f':'yè','4b60':'jiǎn','4b61':'èn','4b62':'níng','4b63':'cí','4b64':'qiǎn','4b65':'xuè','4b66':'bō','4b67':'mǐ','4b68':'shuì','4b69':'mó','4b6a':'liáng','4b6b':'qǐ','4b6c':'qǐ','4b6d':'shǒu','4b6e':'fú','4b6f':'bó','4b70':'bèng','4b71':'bié','4b72':'yǐ','4b73':'wèi','4b74':'huán','4b75':'fán','4b76':'qí','4b77':'máo','4b78':'bǎo','4b79':'áng','4b7a':'ǎng','4b7b':'fù','4b7c':'qí','4b7d':'qún','4b7e':'tuó','4b7f':'yì','4b80':'bó','4b81':'pián','4b82':'bá','4b83':'*','4b84':'xuán','4b85':'*','4b86':'*','4b87':'yù','4b88':'chí','4b89':'lú','4b8a':'yí','4b8b':'lì','4b8c':'*','4b8d':'niǎo','4b8e':'xì','4b8f':'wú','4b90':'*','4b91':'lèi','4b92':'pū','4b93':'zhuō','4b94':'zuī','4b95':'zhuó','4b96':'chāng','4b97':'àn','4b98':'ér','4b99':'yù','4b9a':'lèng','4b9b':'fù','4b9c':'zhá','4b9d':'hún','4b9e':'chǔn','4b9f':'sōu','4ba0':'bī','4ba1':'bì','4ba2':'zhá','4ba3':'*','4ba4':'hé','4ba5':'lì','4ba6':'*','4ba7':'hàn','4ba8':'zǎi','4ba9':'gú','4baa':'chéng','4bab':'lóu','4bac':'mò','4bad':'mì','4bae':'mài','4baf':'ào','4bb0':'zhé','4bb1':'zhú','4bb2':'huáng','4bb3':'fán','4bb4':'dèng','4bb5':'tóng','4bb6':'*','4bb7':'dú','4bb8':'wò','4bb9':'wèi','4bba':'jì','4bbb':'chì','4bbc':'lín','4bbd':'biāo','4bbe':'lóng','4bbf':'jiǎn','4bc0':'niè','4bc1':'luó','4bc2':'shēn','4bc3':'*','4bc4':'guā','4bc5':'niè','4bc6':'yì','4bc7':'kū','4bc8':'wán','4bc9':'wā','4bca':'qià','4bcb':'bó','4bcc':'kāo','4bcd':'líng','4bce':'gàn','4bcf':'guā','4bd0':'hái','4bd1':'kuāng','4bd2':'héng','4bd3':'kuī','4bd4':'zé','4bd5':'tīng','4bd6':'láng','4bd7':'bì','4bd8':'huàn','4bd9':'pò','4bda':'yǎo','4bdb':'wàn','4bdc':'tì','4bdd':'suǐ','4bde':'kuā','4bdf':'duì','4be0':'ǎo','4be1':'jiàn','4be2':'mó','4be3':'kuì','4be4':'kuài','4be5':'àn','4be6':'mà','4be7':'qǐng','4be8':'qiāo','4be9':'*','4bea':'kǎo','4beb':'hào','4bec':'duǒ','4bed':'xiān','4bee':'nái','4bef':'suō','4bf0':'jiè','4bf1':'pī','4bf2':'pā','4bf3':'sōng','4bf4':'cháng','4bf5':'niè','4bf6':'mán','4bf7':'sōng','4bf8':'cì','4bf9':'xiān','4bfa':'kuò','4bfb':'*','4bfc':'dí','4bfd':'póu','4bfe':'tiáo','4bff':'zú','4c00':'wǒ','4c01':'fèi','4c02':'cài','4c03':'péng','4c04':'sāi','4c05':'*','4c06':'róu','4c07':'qí','4c08':'cuó','4c09':'pán','4c0a':'bó','4c0b':'mán','4c0c':'zǒng','4c0d':'cì','4c0e':'kuì','4c0f':'jì','4c10':'lán','4c11':'*','4c12':'méng','4c13':'mián','4c14':'pán','4c15':'lú','4c16':'zuǎn','4c17':'*','4c18':'liú','4c19':'yǐ','4c1a':'wén','4c1b':'lì','4c1c':'lì','4c1d':'zèng','4c1e':'zhǔ','4c1f':'hún','4c20':'shén','4c21':'chì','4c22':'xìng','4c23':'wǎng','4c24':'dōng','4c25':'huò','4c26':'pǐ','4c27':'hū','4c28':'mèi','4c29':'chě','4c2a':'mèi','4c2b':'chāo','4c2c':'jú','4c2d':'nòu','4c2e':'*','4c2f':'yì','4c30':'rú','4c31':'líng','4c32':'yà','4c33':'*','4c34':'qì','4c35':'zī','4c36':'*','4c37':'bàng','4c38':'gōng','4c39':'zé','4c3a':'jiè','4c3b':'yú','4c3c':'qín','4c3d':'bèi','4c3e':'bā','4c3f':'tuó','4c40':'yāng','4c41':'qiáo','4c42':'yǒu','4c43':'zhì','4c44':'jiè','4c45':'mò','4c46':'shéng','4c47':'shàn','4c48':'qí','4c49':'shàn','4c4a':'mǐ','4c4b':'gǒng','4c4c':'yí','4c4d':'gèng','4c4e':'gèng','4c4f':'tǒu','4c50':'fū','4c51':'xué','4c52':'yè','4c53':'tíng','4c54':'tiáo','4c55':'móu','4c56':'liú','4c57':'cān','4c58':'lí','4c59':'shū','4c5a':'lù','4c5b':'huò','4c5c':'cuò','4c5d':'pái','4c5e':'liú','4c5f':'jù','4c60':'zhàn','4c61':'jú','4c62':'zhēng','4c63':'zú','4c64':'xiàn','4c65':'zhì','4c66':'*','4c67':'*','4c68':'là','4c69':'*','4c6a':'*','4c6b':'là','4c6c':'xū','4c6d':'gèng','4c6e':'é','4c6f':'mú','4c70':'zhòng','4c71':'tí','4c72':'yuán','4c73':'zhān','4c74':'gèng','4c75':'wēng','4c76':'láng','4c77':'yú','4c78':'sōu','4c79':'zhǎ','4c7a':'hái','4c7b':'huá','4c7c':'zhǎn','4c7d':'*','4c7e':'lóu','4c7f':'chàn','4c80':'zhì','4c81':'wèi','4c82':'xuán','4c83':'zǎo','4c84':'mín','4c85':'guī','4c86':'sū','4c87':'*','4c88':'*','4c89':'sī','4c8a':'duò','4c8b':'cén','4c8c':'kuǎn','4c8d':'téng','4c8e':'něi','4c8f':'láo','4c90':'lǔ','4c91':'yí','4c92':'xiè','4c93':'yǎn','4c94':'qíng','4c95':'pū','4c96':'chóu','4c97':'xián','4c98':'guǎn','4c99':'jié','4c9a':'lài','4c9b':'méng','4c9c':'yè','4c9d':'*','4c9e':'lì','4c9f':'yìn','4ca0':'chūn','4ca1':'qiū','4ca2':'téng','4ca3':'yú','4ca4':'*','4ca5':'*','4ca6':'dài','4ca7':'dù','4ca8':'hóng','4ca9':'*','4caa':'xì','4cab':'*','4cac':'qí','4cad':'*','4cae':'yuán','4caf':'jí','4cb0':'yùn','4cb1':'fǎng','4cb2':'gōng','4cb3':'háng','4cb4':'zhèn','4cb5':'què','4cb6':'*','4cb7':'*','4cb8':'jiè','4cb9':'pí','4cba':'gàn','4cbb':'xuán','4cbc':'shēng','4cbd':'shí','4cbe':'qiǎo','4cbf':'cí','4cc0':'dié','4cc1':'bó','4cc2':'diāo','4cc3':'wǎn','4cc4':'cí','4cc5':'zhǐ','4cc6':'bái','4cc7':'wǔ','4cc8':'bǎo','4cc9':'dàn','4cca':'bá','4ccb':'tóng','4ccc':'*','4ccd':'gōng','4cce':'jiù','4ccf':'guì','4cd0':'cì','4cd1':'yǒu','4cd2':'yuán','4cd3':'lǎo','4cd4':'jú','4cd5':'fú','4cd6':'niè','4cd7':'é','4cd8':'é','4cd9':'xǐng','4cda':'kàn','4cdb':'yàn','4cdc':'tú','4cdd':'pǒu','4cde':'běng','4cdf':'míng','4ce0':'shuì','4ce1':'yàn','4ce2':'qí','4ce3':'yuán','4ce4':'biē','4ce5':'*','4ce6':'xuān','4ce7':'hóu','4ce8':'huáng','4ce9':'yāo','4cea':'juàn','4ceb':'kuí','4cec':'è','4ced':'jí','4cee':'mò','4cef':'chóng','4cf0':'bǎo','4cf1':'wù','4cf2':'zhèn','4cf3':'xù','4cf4':'tà','4cf5':'chì','4cf6':'xī','4cf7':'cóng','4cf8':'má','4cf9':'kòu','4cfa':'yàn','4cfb':'cán','4cfc':'*','4cfd':'hè','4cfe':'dēng','4cff':'rán','4d00':'tóng','4d01':'yù','4d02':'xiàng','4d03':'náo','4d04':'shùn','4d05':'fén','4d06':'pú','4d07':'líng','4d08':'ǎo','4d09':'huán','4d0a':'yí','4d0b':'huán','4d0c':'méng','4d0d':'yīng','4d0e':'lěi','4d0f':'yàn','4d10':'bǎo','4d11':'dié','4d12':'líng','4d13':'shī','4d14':'jiāo','4d15':'liè','4d16':'jīng','4d17':'jú','4d18':'tī','4d19':'pì','4d1a':'gǎng','4d1b':'xiāo','4d1c':'wāi','4d1d':'chuài','4d1e':'dí','4d1f':'huán','4d20':'yǎo','4d21':'lì','4d22':'mí','4d23':'hū','4d24':'shēng','4d25':'jiā','4d26':'yín','4d27':'wēi','4d28':'*','4d29':'piáo','4d2a':'lù','4d2b':'líng','4d2c':'yì','4d2d':'cái','4d2e':'shàn','4d2f':'hū','4d30':'shú','4d31':'tuō','4d32':'mò','4d33':'huá','4d34':'tiè','4d35':'bǐng','4d36':'péng','4d37':'hún','4d38':'fū','4d39':'guǒ','4d3a':'bù','4d3b':'lí','4d3c':'chàn','4d3d':'pí','4d3e':'cuó','4d3f':'méng','4d40':'suǒ','4d41':'qiàng','4d42':'zhí','4d43':'kuàng','4d44':'bí','4d45':'áo','4d46':'méng','4d47':'xiàn','4d48':'kù','4d49':'tóu','4d4a':'tuān','4d4b':'wěi','4d4c':'xiān','4d4d':'*','4d4e':'tuān','4d4f':'lǎo','4d50':'chǎn','4d51':'nì','4d52':'nì','4d53':'lí','4d54':'dǒng','4d55':'jù','4d56':'qiàn','4d57':'bó','4d58':'shài','4d59':'zhā','4d5a':'tǎo','4d5b':'qiàn','4d5c':'nǒng','4d5d':'yì','4d5e':'jìng','4d5f':'gǎn','4d60':'dí','4d61':'jiǎn','4d62':'mèi','4d63':'dá','4d64':'jiǎn','4d65':'yù','4d66':'xiè','4d67':'zài','4d68':'máng','4d69':'lí','4d6a':'gùn','4d6b':'xūn','4d6c':'tà','4d6d':'zhè','4d6e':'yàng','4d6f':'tuǎn','4d70':'shāng','4d71':'xì','4d72':'qiāo','4d73':'wèi','4d74':'yìng','4d75':'chuā','4d76':'qú','4d77':'wā','4d78':'*','4d79':'zhī','4d7a':'tǐng','4d7b':'gǔ','4d7c':'shāng','4d7d':'cà','4d7e':'fú','4d7f':'tiè','4d80':'tà','4d81':'tà','4d82':'zhuó','4d83':'hán','4d84':'píng','4d85':'hé','4d86':'zhuī','4d87':'zhòu','4d88':'bó','4d89':'liú','4d8a':'nǜ','4d8b':'xī','4d8c':'pào','4d8d':'dì','4d8e':'hē','4d8f':'tì','4d90':'wài','4d91':'tì','4d92':'qí','4d93':'jì','4d94':'chí','4d95':'bà','4d96':'jìn','4d97':'kè','4d98':'lì','4d99':'jù','4d9a':'qǔ','4d9b':'là','4d9c':'gǔ','4d9d':'qià','4d9e':'qí','4d9f':'xiàn','4da0':'jiǎn','4da1':'shí','4da2':'jiān','4da3':'ái','4da4':'huá','4da5':'zhā','4da6':'zé','4da7':'yǎo','4da8':'zhān','4da9':'jì','4daa':'chà','4dab':'yàn','4dac':'jiān','4dad':'*','4dae':'yǎn','4daf':'*','4db0':'jiāo','4db1':'tóng','4db2':'nán','4db3':'yuè','4db4':'*','4db5':'chí','4E00':'yī','4E01':'dīng','4E02':'kǎo','4E03':'qī','4E04':'shàng/shǎng','4E05':'xià','4E06':'shí','4E07':'wàn/mò','4E08':'zhàng','4E09':'sān','4E0A':'shàng/shǎng','4E0B':'xià','4E0C':'jī','4E0D':'bù','4E0E':'yǔ/yù','4E0F':'miǎn','4E10':'gài','4E11':'chǒu','4E12':'chǒu','4E13':'zhuān','4E14':'qiě','4E15':'pī','4E16':'shì','4E17':'shì','4E18':'qiū','4E19':'bǐng','4E1A':'yè','4E1B':'cóng','4E1C':'dōng','4E1D':'sī','4E1E':'chéng','4E1F':'diū','4E20':'qiū','4E21':'liǎng','4E22':'diū','4E23':'yǒu','4E24':'liǎng','4E25':'yán','4E26':'bìng','4E27':'sāng/sàng/sang','4E28':'shù','4E29':'jiū','4E2A':'gè','4E2B':'yā','4E2C':'qiáng/pán','4E2D':'zhōng/zhòng','4E2E':'jǐ','4E2F':'jiè','4E30':'fēng','4E31':'guàn','4E32':'chuàn','4E33':'chǎn','4E34':'lín','4E35':'zhuō','4E36':'zhǔ','4E37':'bā','4E38':'wán','4E39':'dān','4E3A':'wèi/wéi','4E3B':'zhǔ','4E3C':'jǐng/dǎn','4E3D':'lì','4E3E':'jǔ','4E3F':'piě','4E40':'fú','4E41':'yí','4E42':'yì','4E43':'nǎi','4E44':'wǔ','4E45':'jiǔ','4E46':'jiǔ','4E47':'tuō','4E48':'me','4E49':'yì','4E4A':'hū','4E4B':'zhī','4E4C':'wū/wù','4E4D':'zhà','4E4E':'hū','4E4F':'fá','4E50':'lè/yuè','4E51':'zhòng','4E52':'pīng','4E53':'pāng','4E54':'qiáo','4E55':'hǔ/hù','4E56':'guāi','4E57':'chéng/shèng','4E58':'chéng/shèng','4E59':'yǐ','4E5A':'yǐn','4E5B':'wān/zhé','4E5C':'miē/niè','4E5D':'jiǔ','4E5E':'qǐ','4E5F':'yě','4E60':'xí','4E61':'xiāng','4E62':'gài','4E63':'diū','4E64':'*','4E65':'*','4E66':'shū','4E67':'dǒu','4E68':'shǐ','4E69':'jī','4E6A':'nāng','4E6B':'jiā','4E6C':'*','4E6D':'shí','4E6E':'*','4E6F':'*','4E70':'mǎi','4E71':'luàn','4E72':'*','4E73':'rǔ','4E74':'xǐ','4E75':'yǎn','4E76':'fǔ','4E77':'shā','4E78':'nǎ','4E79':'gān/qián','4E7A':'*','4E7B':'*','4E7C':'*','4E7D':'*','4E7E':'qián','4E7F':'zhì','4E80':'guī/jūn/qiū','4E81':'gān','4E82':'luàn','4E83':'lǐn','4E84':'yì','4E85':'jué','4E86':'liǎo/le','4E87':'dīng','4E88':'yǔ','4E89':'zhēng','4E8A':'shì','4E8B':'shì','4E8C':'èr','4E8D':'chù','4E8E':'yú','4E8F':'kuī','4E90':'yú','4E91':'yún','4E92':'hù','4E93':'qí','4E94':'wǔ','4E95':'jǐng','4E96':'sì','4E97':'suì','4E98':'gèn','4E99':'gèn/gèng','4E9A':'yà','4E9B':'xiē','4E9C':'yà','4E9D':'qí','4E9E':'yà/yǎ','4E9F':'jí/qì','4EA0':'tóu','4EA1':'wáng','4EA2':'kàng','4EA3':'tà','4EA4':'jiāo','4EA5':'hài','4EA6':'yì','4EA7':'chǎn','4EA8':'hēng','4EA9':'mǔ','4EAA':'*','4EAB':'xiǎng','4EAC':'jīng','4EAD':'tíng','4EAE':'liàng','4EAF':'hēng','4EB0':'jīng','4EB1':'yè','4EB2':'qīn/qìng','4EB3':'bó','4EB4':'yòu','4EB5':'xiè','4EB6':'dǎn/dàn','4EB7':'lián','4EB8':'duǒ','4EB9':'wěi/wèi','4EBA':'rén','4EBB':'rén','4EBC':'jí','4EBD':'jí','4EBE':'wáng','4EBF':'yì','4EC0':'shí/shén','4EC1':'rén','4EC2':'lè','4EC3':'dīng','4EC4':'zè','4EC5':'jǐn','4EC6':'pū/pú','4EC7':'chóu/qiú','4EC8':'bā','4EC9':'zhǎng','4ECA':'jīn','4ECB':'jiè','4ECC':'bīng','4ECD':'réng','4ECE':'cóng','4ECF':'fó/fú','4ED0':'sǎn','4ED1':'lún','4ED2':'bīng','4ED3':'cāng','4ED4':'zǐ','4ED5':'shì','4ED6':'tā','4ED7':'zhàng','4ED8':'fù','4ED9':'xiān','4EDA':'xiān','4EDB':'chà','4EDC':'hóng','4EDD':'tóng','4EDE':'rèn','4EDF':'qiān','4EE0':'gǎn','4EE1':'gē','4EE2':'dí','4EE3':'dài','4EE4':'lìng/líng/lǐng','4EE5':'yǐ','4EE6':'chào','4EE7':'cháng','4EE8':'sā','4EE9':'shàng','4EEA':'yí','4EEB':'mù','4EEC':'men/mén','4EED':'rèn','4EEE':'jiǎ/jià','4EEF':'chào','4EF0':'yǎng','4EF1':'qián','4EF2':'zhòng','4EF3':'pǐ','4EF4':'wàn','4EF5':'wǔ','4EF6':'jiàn','4EF7':'jià','4EF8':'yǎo','4EF9':'fēng','4EFA':'cāng','4EFB':'rèn/rén','4EFC':'wáng','4EFD':'fèn','4EFE':'dī','4EFF':'fǎng','4F00':'zhōng','4F01':'qǐ','4F02':'pèi','4F03':'yú','4F04':'diào','4F05':'dùn','4F06':'wèn','4F07':'yì','4F08':'xǐn','4F09':'kàng','4F0A':'yī','4F0B':'jí','4F0C':'ài','4F0D':'wǔ','4F0E':'jì','4F0F':'fú','4F10':'fá','4F11':'xiū','4F12':'jìn','4F13':'bēi','4F14':'chén','4F15':'fū','4F16':'tǎng','4F17':'zhòng','4F18':'yōu','4F19':'huǒ','4F1A':'huì/kuài','4F1B':'yǔ','4F1C':'cuì/zú','4F1D':'yún','4F1E':'sǎn','4F1F':'wěi','4F20':'zhuàn/chuán','4F21':'chē','4F22':'yá','4F23':'xiàn','4F24':'shāng','4F25':'chāng','4F26':'lún','4F27':'cāng','4F28':'xùn','4F29':'xìn','4F2A':'wěi','4F2B':'zhù','4F2C':'chǐ','4F2D':'xuán','4F2E':'náo/nǔ','4F2F':'bó/bǎi','4F30':'gū/gù','4F31':'nǐ','4F32':'nì','4F33':'xiè','4F34':'bàn','4F35':'xù','4F36':'líng','4F37':'zhòu','4F38':'shēn','4F39':'qū','4F3A':'sì/cì','4F3B':'bēng','4F3C':'sì/shì','4F3D':'jiā/qié/gā','4F3E':'pī','4F3F':'yì','4F40':'sì/shì','4F41':'ǎi','4F42':'zhēng/zhèng','4F43':'diàn','4F44':'hán','4F45':'mài','4F46':'dàn','4F47':'zhù','4F48':'bù','4F49':'qū','4F4A':'bǐ','4F4B':'shào','4F4C':'cǐ','4F4D':'wèi','4F4E':'dī','4F4F':'zhù','4F50':'zuǒ','4F51':'yòu','4F52':'yāng','4F53':'tǐ','4F54':'zhàn','4F55':'hé','4F56':'bì','4F57':'tuó','4F58':'shé','4F59':'yú','4F5A':'yì','4F5B':'fó/fú','4F5C':'zuò/zuō','4F5D':'gōu','4F5E':'nìng','4F5F':'tóng','4F60':'nǐ','4F61':'xuān/sǎn','4F62':'jù','4F63':'yòng/yōng','4F64':'wǎ','4F65':'qiān','4F66':'shí','4F67':'kǎ','4F68':'bāo','4F69':'pèi','4F6A':'huái','4F6B':'hè','4F6C':'lǎo','4F6D':'xiáng','4F6E':'gé','4F6F':'yáng','4F70':'bǎi','4F71':'fǎ','4F72':'míng','4F73':'jiā','4F74':'nài','4F75':'bìng','4F76':'jí','4F77':'héng','4F78':'huó','4F79':'guǐ','4F7A':'quán','4F7B':'tiāo','4F7C':'jiǎo','4F7D':'cì','4F7E':'yì','4F7F':'shǐ','4F80':'xíng','4F81':'shēn','4F82':'tuō','4F83':'kǎn','4F84':'zhí','4F85':'gāi/kāi','4F86':'lái','4F87':'yí','4F88':'chǐ','4F89':'kuǎ','4F8A':'guāng','4F8B':'lì','4F8C':'yīn','4F8D':'shì','4F8E':'mǐ','4F8F':'zhū','4F90':'xù','4F91':'yòu','4F92':'ān','4F93':'lù','4F94':'móu','4F95':'ér','4F96':'lún','4F97':'dòng','4F98':'chà','4F99':'chì','4F9A':'xùn','4F9B':'gōng/gòng','4F9C':'zhōu','4F9D':'yī','4F9E':'rǔ','4F9F':'jiàn','4FA0':'xiá','4FA1':'jià/jiè','4FA2':'zài','4FA3':'lǚ','4FA4':'*','4FA5':'jiǎo/yáo','4FA6':'zhēn','4FA7':'cè','4FA8':'qiáo','4FA9':'kuài','4FAA':'chái','4FAB':'nìng','4FAC':'nóng','4FAD':'jǐn/jìn','4FAE':'wǔ','4FAF':'hóu/hòu','4FB0':'jiǒng','4FB1':'chěng','4FB2':'zhèn','4FB3':'cuò','4FB4':'chǒu','4FB5':'qīn','4FB6':'lǚ','4FB7':'jú','4FB8':'shù','4FB9':'tǐng','4FBA':'shèn','4FBB':'tuō','4FBC':'bó','4FBD':'nán','4FBE':'hāo','4FBF':'biàn/pián','4FC0':'tuǐ','4FC1':'yǔ','4FC2':'xì','4FC3':'cù','4FC4':'é','4FC5':'qiú','4FC6':'xú','4FC7':'kuǎng','4FC8':'kù','4FC9':'wú','4FCA':'jùn','4FCB':'yì','4FCC':'fǔ','4FCD':'láng','4FCE':'zǔ','4FCF':'qiào','4FD0':'lì','4FD1':'yǒng','4FD2':'hùn','4FD3':'jìng','4FD4':'xiàn','4FD5':'sàn','4FD6':'pǎi','4FD7':'sú','4FD8':'fú','4FD9':'xī','4FDA':'lǐ','4FDB':'miǎn','4FDC':'pīng','4FDD':'bǎo','4FDE':'yú','4FDF':'sì/qí','4FE0':'xiá','4FE1':'xìn','4FE2':'xiū','4FE3':'yǔ','4FE4':'tì','4FE5':'chē','4FE6':'chóu','4FE7':'zhì','4FE8':'yǎn','4FE9':'liǎ/liǎng','4FEA':'lì','4FEB':'lái','4FEC':'sī','4FED':'jiǎn','4FEE':'xiū','4FEF':'fǔ','4FF0':'hé','4FF1':'jù','4FF2':'xiào','4FF3':'pái','4FF4':'jiàn','4FF5':'biào','4FF6':'tì/chù','4FF7':'fèi','4FF8':'fèng','4FF9':'yà','4FFA':'ǎn','4FFB':'bèi','4FFC':'yù/zhōu','4FFD':'xīn','4FFE':'bǐ','4FFF':'chí','500A':'zǒng','500B':'gè','500C':'guān','500D':'bèi','500E':'tiān','500F':'shū','501A':'yǐ','501B':'qī','501C':'tì','501D':'gàn','501E':'jìng/liàng','501F':'jiè','502A':'ní','502B':'lún','502C':'zhuō','502D':'wō','502E':'luǒ','502F':'sōng','503A':'zhài','503B':'yē','503C':'zhí','503D':'shà','503E':'qīng','503F':'nìng/qiè','504A':'yǔ','504B':'bìng','504C':'ruò','504D':'tí','504E':'wēi','504F':'piān','505A':'zuò','505B':'chā','505C':'tíng','505D':'bēi','505E':'yè','505F':'huáng','506A':'bī','506B':'zhì','506C':'zǒng','506D':'miǎn','506E':'jí','506F':'yǐ','507A':'zá/zán','507B':'lǚ/lóu','507C':'jié','507D':'wèi','507E':'fèn','507F':'cháng','508A':'yǔn','508B':'gòu','508C':'mà','508D':'bàng','508E':'diān','508F':'táng','509A':'xiào','509B':'yóng','509C':'yáo','509D':'tà','509E':'suō','509F':'wāng','50A0':'fá','50A1':'bìng/bīng','50A2':'jiā','50A3':'dǎi','50A4':'zài','50A5':'tǎng','50A6':'gǔ','50A7':'bīn','50A8':'chǔ','50A9':'nuó','50AA':'zān','50AB':'lěi','50AC':'cuī','50AD':'yōng/yòng','50AE':'zāo','50AF':'zǒng','50B0':'péng','50B1':'sǒng','50B2':'ào','50B3':'chuán/zhuàn','50B4':'yǔ','50B5':'zhài','50B6':'zú','50B7':'shāng','50B8':'qiǎng','50B9':'qiāng','50BA':'chì','50BB':'shǎ','50BC':'hàn','50BD':'zhāng','50BE':'qīng','50BF':'yàn','50C0':'dì','50C1':'xī','50C2':'lǚ/lóu','50C3':'bèi','50C4':'piāo','50C5':'jǐn/jìn','50C6':'liǎn','50C7':'lù','50C8':'màn','50C9':'qiān','50CA':'xiān','50CB':'qiú','50CC':'yíng','50CD':'dòng','50CE':'zhuàn','50CF':'xiàng','50D0':'shǎn','50D1':'qiáo','50D2':'jiǒng','50D3':'tuí','50D4':'zǔn','50D5':'pú/pū','50D6':'xī','50D7':'lào','50D8':'chǎng','50D9':'guāng','50DA':'liáo','50DB':'qī','50DC':'dèng','50DD':'chán','50DE':'wěi','50DF':'zhǎng','50E0':'fān','50E1':'huì','50E2':'chuǎn','50E3':'tiě','50E4':'dàn','50E5':'jiǎo/yáo','50E6':'jiù','50E7':'sēng','50E8':'fèn','50E9':'xiàn','50EA':'jué','50EB':'è','50EC':'jiāo','50ED':'jiàn','50EE':'tóng','50EF':'lín','50F0':'bó','50F1':'gù','50F2':'xiān','50F3':'sù','50F4':'xiàn','50F5':'jiāng','50F6':'mǐn','50F7':'yè','50F8':'jìn','50F9':'jià','50FA':'qiào','50FB':'pì','50FC':'fēng','50FD':'zhòu','50FE':'ài','50FF':'sài','510A':'chù','510B':'dān','510C':'jiǎo','510D':'shǎ','510E':'zài/zǎi','510F':'càn','511A':'méng','511B':'wǔ','511C':'néng','511D':'qióng','511E':'nǐ','511F':'cháng','512A':'yōu','512B':'háo','512C':'qīn','512D':'chèn','512E':'lì','512F':'téng','513A':'nuó','513B':'tǎng','513C':'yǎn','513D':'lèi','513E':'nàng','513F':'ér','514A':'duì','514B':'kè','514C':'duì','514D':'miǎn','514E':'tù','514F':'cháng/zhǎng','515A':'dǎng','515B':'qiān','515C':'dōu','515D':'fēn','515E':'máo','515F':'xīn','516A':'yú/shù','516B':'bā','516C':'gōng','516D':'liù/lù','516E':'xī','516F':'jié','517A':'*','517B':'yǎng','517C':'jiān','517D':'shòu','517E':'jì','517F':'yì','518A':'cè','518B':'jiōng','518C':'cè','518D':'zài','518E':'guǎ','518F':'jiǒng','519A':'kǎn','519B':'jūn','519C':'nóng','519D':'yí','519E':'mí','519F':'shì','51A0':'guān/guàn','51A1':'méng','51A2':'zhǒng','51A3':'zuì','51A4':'yuān','51A5':'míng','51A6':'kòu','51A7':'lín/mín','51A8':'fù','51A9':'xiě','51AA':'mì','51AB':'bīng','51AC':'dōng','51AD':'tài','51AE':'gāng','51AF':'féng/píng','51B0':'bīng','51B1':'hù','51B2':'chōng/chòng','51B3':'jué','51B4':'hù','51B5':'kuàng','51B6':'yě','51B7':'lěng','51B8':'pàn','51B9':'fǔ','51BA':'mǐn','51BB':'dòng','51BC':'xiǎn','51BD':'liè','51BE':'xiá','51BF':'jiān','51C0':'jìng','51C1':'shù','51C2':'měi','51C3':'shàng','51C4':'qī','51C5':'gù','51C6':'zhǔn','51C7':'sōng','51C8':'jìng','51C9':'liáng/liàng','51CA':'qìng/jìng','51CB':'diāo','51CC':'líng','51CD':'dòng','51CE':'gàn','51CF':'jiǎn','51D0':'yīn/yín','51D1':'còu','51D2':'ái','51D3':'lì','51D4':'cāng','51D5':'mǐng','51D6':'zhǔn','51D7':'cuí','51D8':'sī','51D9':'duó','51DA':'jìn','51DB':'lǐn','51DC':'lǐn','51DD':'níng','51DE':'xī','51DF':'dú','51E0':'jī/jǐ','51E1':'fán','51E2':'fán','51E3':'fán','51E4':'fèng','51E5':'jū','51E6':'chǔ/chù','51E7':'zhēng','51E8':'fēng','51E9':'mù','51EA':'zhǐ','51EB':'fú','51EC':'fēng','51ED':'píng','51EE':'fēng','51EF':'kǎi','51F0':'huáng','51F1':'kǎi','51F2':'gān','51F3':'dèng','51F4':'píng','51F5':'qū/kǎn','51F6':'xiōng','51F7':'kuài','51F8':'tū','51F9':'āo','51FA':'chū','51FB':'jī','51FC':'dàng','51FD':'hán','51FE':'hán','51FF':'záo','520A':'kān','520B':'qiàn','520C':'cǔn','520D':'chú','520E':'wěn','520F':'jī','521A':'gāng','521B':'chuàng/chuāng','521C':'fú','521D':'chū','521E':'qù','521F':'jū','522A':'shān','522B':'bié/biè','522C':'chǎn','522D':'jǐng','522E':'guā','522F':'gēn','523A':'cì','523B':'kè','523C':'jié','523D':'guì','523E':'cì','523F':'guì','524A':'xuē/xiāo','524B':'kè','524C':'là','524D':'qián','524E':'chà','524F':'chuàn','525A':'zì','525B':'gāng','525C':'wān','525D':'bō','525E':'jī','525F':'duō','526A':'jiǎn','526B':'duó','526C':'duān','526D':'wū','526E':'guǎ','526F':'fù','527A':'lí','527B':'fóu','527C':'shān','527D':'piāo','527E':'kōu','527F':'jiǎo/chāo','528A':'guì','528B':'jiǎo','528C':'guì','528D':'jiàn','528E':'jiàn','528F':'tāng','529A':'zhú','529B':'lì','529C':'yà','529D':'quàn','529E':'bàn','529F':'gōng','52A0':'jiā','52A1':'wù','52A2':'mài','52A3':'liè','52A4':'jìng','52A5':'kēng','52A6':'xié','52A7':'zhǐ','52A8':'dòng','52A9':'zhù','52AA':'nǔ','52AB':'jié','52AC':'qú','52AD':'shào','52AE':'yì','52AF':'zhū','52B0':'mò','52B1':'lì','52B2':'jìng/jìn','52B3':'láo','52B4':'láo','52B5':'juàn','52B6':'kǒu','52B7':'yáng','52B8':'wā','52B9':'xiào','52BA':'móu','52BB':'kuāng','52BC':'jié','52BD':'liè','52BE':'hé','52BF':'shì','52C0':'kè','52C1':'jìng/jìn','52C2':'háo','52C3':'bó','52C4':'mǐn','52C5':'chì','52C6':'láng','52C7':'yǒng','52C8':'yǒng','52C9':'miǎn','52CA':'kè','52CB':'xūn','52CC':'juàn','52CD':'qíng','52CE':'lù','52CF':'bù','52D0':'měng','52D1':'lài','52D2':'lè/lēi','52D3':'kài','52D4':'miǎn','52D5':'dòng','52D6':'xù','52D7':'xù','52D8':'kān','52D9':'wù','52DA':'yì','52DB':'xūn','52DC':'wěng','52DD':'shèng/shēng','52DE':'láo/lào','52DF':'mù','52E0':'lù','52E1':'piāo','52E2':'shì','52E3':'jī','52E4':'qín','52E5':'qiǎng','52E6':'jiǎo/chāo','52E7':'quàn','52E8':'xiàng','52E9':'yì','52EA':'qiāo','52EB':'fán','52EC':'juān','52ED':'tóng','52EE':'jù','52EF':'dān','52F0':'xié','52F1':'mài','52F2':'xūn','52F3':'xūn','52F4':'lǜ','52F5':'lì','52F6':'chè','52F7':'ráng','52F8':'quàn','52F9':'bāo','52FA':'sháo','52FB':'yún','52FC':'jiū','52FD':'bào','52FE':'gōu/gòu','52FF':'wù','530A':'jú','530B':'táo','530C':'gé','530D':'pú','530E':'àn','530F':'páo','531A':'fāng/xǐ','531B':'jiù','531C':'yí','531D':'zā','531E':'jiàng','531F':'kàng','532A':'fěi','532B':'hū','532C':'yǔ','532D':'guǐ','532E':'kuì','532F':'huì','533A':'qū/ōu','533B':'yī','533C':'àn','533D':'yǎn','533E':'biǎn','533F':'nì','534A':'bàn','534B':'shì','534C':'xì','534D':'wàn','534E':'huá/huà','534F':'xié','535A':'bó','535B':'shuài/lǜ','535C':'bǔ/bo','535D':'kuàng','535E':'biàn','535F':'bǔ','536A':'jié','536B':'wèi','536C':'áng/yǎng','536D':'qióng','536E':'zhī','536F':'mǎo','537A':'jǐn','537B':'què','537C':'wù','537D':'jí','537E':'è','537F':'qīng','538A':'yǎ','538B':'yā/yà','538C':'yàn','538D':'shè','538E':'zhǐ','538F':'zhǎ','539A':'hòu','539B':'tīng','539C':'zuī','539D':'cuò','539E':'fèi','539F':'yuán','53A0':'cè/si','53A1':'yuán','53A2':'xiāng','53A3':'yǎn','53A4':'lì','53A5':'jué','53A6':'shà/xià','53A7':'diān','53A8':'chú','53A9':'jiù','53AA':'qín/jǐn','53AB':'áo','53AC':'guǐ','53AD':'yàn','53AE':'sī','53AF':'lì','53B0':'chǎng/ān','53B1':'lán','53B2':'lì','53B3':'yán','53B4':'yǎn','53B5':'yuán','53B6':'sī','53B7':'sī','53B8':'lín','53B9':'qiú','53BA':'qù','53BB':'qù','53BC':'*','53BD':'lěi','53BE':'dū','53BF':'xiàn','53C0':'zhuān','53C1':'sān','53C2':'cān/cēn/shēn','53C3':'cān/cēn/shēn','53C4':'sān','53C5':'cān/cēn/shēn','53C6':'ài','53C7':'dài','53C8':'yòu','53C9':'chā/chá/chǎ/chà','53CA':'jí','53CB':'yǒu','53CC':'shuāng','53CD':'fǎn','53CE':'shōu','53CF':'guài','53D0':'bá','53D1':'fā/fà','53D2':'ruò','53D3':'shì','53D4':'shū','53D5':'zhuì','53D6':'qǔ','53D7':'shòu','53D8':'biàn','53D9':'xù','53DA':'jiǎ','53DB':'pàn','53DC':'sǒu','53DD':'jí','53DE':'yù','53DF':'sǒu','53E0':'dié','53E1':'ruì','53E2':'cóng','53E3':'kǒu','53E4':'gǔ','53E5':'jù','53E6':'lìng','53E7':'guǎ','53E8':'tāo/dāo/dáo','53E9':'kòu','53EA':'zhǐ/zhī','53EB':'jiào','53EC':'zhào','53ED':'bā','53EE':'dīng','53EF':'kě/kè','53F0':'tái','53F1':'chì','53F2':'shǐ','53F3':'yòu','53F4':'qiú','53F5':'pǒ','53F6':'yè/xié','53F7':'hào/háo','53F8':'sī','53F9':'tàn','53FA':'chǐ','53FB':'lè','53FC':'diāo','53FD':'jī','53FE':'*','53FF':'hōng','540A':'diào','540B':'cùn','540C':'tóng/tòng','540D':'míng','540E':'hòu','540F':'lì','541A':'yī','541B':'jūn','541C':'chǒu','541D':'lìn','541E':'tūn','541F':'yín','542A':'é','542B':'hán','542C':'tīng','542D':'háng/kēng','542E':'shǔn','542F':'qǐ','543A':'dōu','543B':'wěn','543C':'hǒu','543D':'óu/hōng','543E':'wú','543F':'gào/gù','544A':'gào','544B':'fū','544C':'jiào','544D':'hōng','544E':'chǐ','544F':'shēng','545A':'wěn','545B':'qiāng/qiàng','545C':'wū','545D':'è','545E':'shī','545F':'quǎn','546A':'zhòu','546B':'zhān','546C':'líng','546D':'yì','546E':'qì','546F':'píng','547A':'xiāo','547B':'shēn','547C':'hū','547D':'mìng','547E':'dá','547F':'qū','548A':'hé/hè/huó/huò/huo','548B':'zǎ/zé/zhā','548C':'hé/hè/huó/huò/huo','548D':'hāi','548E':'jiù','548F':'yǒng','549A':'dōng','549B':'níng','549C':'zhà','549D':'sī','549E':'xiàn','549F':'huò','54A0':'qī','54A1':'èr','54A2':'è','54A3':'guāng','54A4':'zhà','54A5':'xì/dié','54A6':'yí','54A7':'liě/liē','54A8':'zī','54A9':'miē','54AA':'mī','54AB':'zhǐ','54AC':'yǎo','54AD':'jī','54AE':'zhòu','54AF':'gē/kǎ/lo/luò','54B0':'shuài','54B1':'zán','54B2':'xiào','54B3':'ké/hāi','54B4':'huī','54B5':'kuā','54B6':'huài','54B7':'táo','54B8':'xián','54B9':'è','54BA':'xuǎn','54BB':'xiū','54BC':'guō/kuāi','54BD':'yān/yàn/yè','54BE':'lǎo','54BF':'yī','54C0':'āi','54C1':'pǐn','54C2':'shěn','54C3':'tóng','54C4':'hōng/hǒng/hòng','54C5':'xiōng/hōng','54C6':'duō','54C7':'wā/wa','54C8':'hā/hǎ/hà','54C9':'zāi','54CA':'yòu','54CB':'dì','54CC':'pài','54CD':'xiǎng','54CE':'āi','54CF':'gén','54D0':'kuāng','54D1':'yā/yǎ','54D2':'dā','54D3':'xiāo','54D4':'bì','54D5':'huì/yuě','54D6':'nián','54D7':'huā/huá','54D8':'xíng','54D9':'kuài','54DA':'duǒ','54DB':'*','54DC':'jì','54DD':'nóng','54DE':'mōu','54DF':'yo/yō','54E0':'hào','54E1':'yuán/yún/yùn','54E2':'lòng','54E3':'pǒu','54E4':'máng','54E5':'gē','54E6':'é/ó/ò','54E7':'chī','54E8':'shào','54E9':'lī','54EA':'nǎ/na/né','54EB':'zú','54EC':'hē','54ED':'kū','54EE':'xiào','54EF':'xiàn','54F0':'láo','54F1':'bèi','54F2':'zhé','54F3':'zhā','54F4':'liàng','54F5':'bā','54F6':'mǐ','54F7':'lè','54F8':'suī','54F9':'fóu','54FA':'bǔ','54FB':'hàn','54FC':'hēng','54FD':'gěng','54FE':'shuō','54FF':'gě','550A':'jiá','550B':'tǔ','550C':'xián','550D':'guān/guǎn','550E':'lì','550F':'xī','551A':'qìn','551B':'mà','551C':'*','551D':'gòng','551E':'dǒu','551F':'*','552A':'fěng','552B':'yín','552C':'hǔ','552D':'qī','552E':'shòu','552F':'wéi','553A':'tiǎn','553B':'lái','553C':'shà','553D':'xī','553E':'tuò','553F':'hū','554A':'a/ā/á/ǎ/à','554B':'xiāo','554C':'xiāng','554D':'tūn','554E':'wǔ','554F':'wèn','555A':'bǐ','555B':'cuì','555C':'chuò','555D':'hé','555E':'yǎ/yā','555F':'qǐ','556A':'pā','556B':'zhě','556C':'sè','556D':'zhuàn','556E':'niè','556F':'guō','557A':'táng','557B':'chì','557C':'tí','557D':'án','557E':'jiū','557F':'dàn','558A':'hǎn','558B':'dié/zhá','558C':'zhōu','558D':'chái','558E':'kuāi','558F':'rě/nuò','559A':'huàn','559B':'huàn','559C':'xǐ','559D':'hē/hè','559E':'jī','559F':'kuì','55A0':'zhǒng','55A1':'wěi','55A2':'shà','55A3':'xǔ','55A4':'huáng','55A5':'dù','55A6':'niè','55A7':'xuān','55A8':'liàng','55A9':'yù','55AA':'sāng/sàng','55AB':'chī','55AC':'qiáo','55AD':'yàn','55AE':'dān/chán','55AF':'pēn','55B0':'shí/sì','55B1':'lí','55B2':'yo/yō','55B3':'zhā/chā','55B4':'wēi','55B5':'miāo','55B6':'yíng','55B7':'pēn/pèn/pen','55B8':'*','55B9':'kuí','55BA':'xì','55BB':'yù','55BC':'jié','55BD':'lou/lóu','55BE':'kù','55BF':'cāo','55C0':'huò','55C1':'tí','55C2':'yáo','55C3':'hè','55C4':'á','55C5':'xiù','55C6':'qiāng/qiàng','55C7':'sè','55C8':'yōng','55C9':'sù','55CA':'hǒng','55CB':'xiē','55CC':'ài','55CD':'suō','55CE':'ma/mǎ','55CF':'chā','55D0':'hài','55D1':'kè','55D2':'dā','55D3':'sǎng','55D4':'chēn','55D5':'rù/nòu','55D6':'sōu','55D7':'gōng','55D8':'jī','55D9':'pǎng','55DA':'wū','55DB':'qiàn','55DC':'shì','55DD':'gé','55DE':'zī','55DF':'jiē','55E0':'luò','55E1':'wēng','55E2':'wà','55E3':'sì','55E4':'chī','55E5':'háo','55E6':'suō','55E7':'jiā/lún','55E8':'hāi','55E9':'suǒ','55EA':'qín','55EB':'niè','55EC':'hē','55ED':'*','55EE':'sài','55EF':'ng','55F0':'gè','55F1':'ná','55F2':'diǎ','55F3':'ài/ǎi','55F4':'qiāng','55F5':'tōng','55F6':'bì','55F7':'áo','55F8':'áo','55F9':'lián','55FA':'cuī','55FB':'zhē','55FC':'mò','55FD':'sòu','55FE':'sǒu','55FF':'tǎn','560A':'ai/ái','560B':'xiāo','560C':'piào','560D':'lou/lóu','560E':'gā/gǎ','560F':'gǔ/jiǎ','561A':'dē/dēi','561B':'ma','561C':'mà/mǎ/mò','561D':'hú','561E':'lei','561F':'dū','562A':'mǎi','562B':'rán','562C':'zuō/chuài','562D':'pēng','562E':'láo/lào','562F':'xiào','563A':'qiáo','563B':'xī','563C':'xù','563D':'chǎn','563E':'dàn','563F':'hēi','564A':'yù','564B':'tūn','564C':'chēng/cēng','564D':'jiào','564E':'yē','564F':'xī','565A':'xún','565B':'niè','565C':'lū','565D':'sī','565E':'yàn','565F':'yìng','566A':'zào','566B':'yī','566C':'shì','566D':'jiào','566E':'yuàn','566F':'ài/ǎi','567A':'xīn','567B':'sāi','567C':'pī','567D':'pǐ','567E':'yīn','567F':'zuǐ','568A':'pì','568B':'chóu','568C':'jì','568D':'jìn','568E':'háo','568F':'tì','569A':'yín','569B':'hù','569C':'mò','569D':'huāng','569E':'zhé','569F':'lí','56A0':'liú','56A1':'hái/hài','56A2':'náng/nāng','56A3':'xiāo','56A4':'mó','56A5':'yàn','56A6':'lì','56A7':'lú','56A8':'lóng','56A9':'mó','56AA':'dān','56AB':'chèn','56AC':'pín','56AD':'pǐ','56AE':'xiàng','56AF':'huò','56B0':'mó','56B1':'xī','56B2':'duǒ','56B3':'kù','56B4':'yán','56B5':'chán','56B6':'yīng','56B7':'rǎng/rāng','56B8':'diǎn','56B9':'lā','56BA':'tà','56BB':'xiāo','56BC':'jiáo/jiào/jué','56BD':'chuò','56BE':'huàn','56BF':'huò','56C0':'zhuàn/zhuǎn','56C1':'niè','56C2':'xiāo/áo','56C3':'cà','56C4':'lí','56C5':'chǎn','56C6':'chài','56C7':'lì','56C8':'yì','56C9':'luō/luó','56CA':'náng/nāng','56CB':'zàn','56CC':'sū','56CD':'xǐ','56CE':'zèn','56CF':'jiān','56D0':'zá','56D1':'zhǔ','56D2':'lán','56D3':'niè','56D4':'nāng','56D5':'*','56D6':'luō/luó','56D7':'wéi','56D8':'huí','56D9':'yīn','56DA':'qiú','56DB':'sì','56DC':'nín','56DD':'jiǎn','56DE':'huí','56DF':'xìn','56E0':'yīn','56E1':'nān','56E2':'tuán','56E3':'tuán','56E4':'dùn/tún','56E5':'kàng','56E6':'yuān','56E7':'jiǒng','56E8':'piān','56E9':'yùn','56EA':'cōng/chuāng','56EB':'hú','56EC':'huí','56ED':'yuán','56EE':'é','56EF':'guó','56F0':'kùn','56F1':'cōng','56F2':'wéi','56F3':'tú','56F4':'wéi','56F5':'lún','56F6':'guó','56F7':'jūn','56F8':'rì','56F9':'líng','56FA':'gù','56FB':'guó','56FC':'tāi','56FD':'guó','56FE':'tú','56FF':'yòu','570A':'qīng','570B':'guó','570C':'chuí','570D':'wéi','570E':'yuán','570F':'quān/juān/juàn','571A':'huì','571B':'yì','571C':'yuán/huán','571D':'luán','571E':'luán','571F':'tǔ','572A':'gē','572B':'yù','572C':'wū','572D':'guī','572E':'pǐ','572F':'yí','573A':'cháng/chǎng/chang','573B':'qí','573C':'niè','573D':'mò','573E':'jī','573F':'jiá','574A':'fāng/fáng','574B':'fèn','574C':'bèn','574D':'tān','574E':'kǎn','574F':'huài','575A':'jiān','575B':'tán','575C':'lì','575D':'bà','575E':'wù','575F':'fén','576A':'píng','576B':'diàn','576C':'wā','576D':'ní','576E':'tái/tāi','576F':'pī','577A':'bá','577B':'chí/dǐ','577C':'chè','577D':'líng','577E':'zhù','577F':'fù','578A':'mín','578B':'xíng','578C':'tóng','578D':'jì','578E':'kè','578F':'lù','579A':'yáo','579B':'duǒ/duò','579C':'duǒ/duò','579D':'guǐ','579E':'chá','579F':'yáng','57A0':'yín','57A1':'fá','57A2':'gòu','57A3':'yuán','57A4':'dié','57A5':'xié','57A6':'kěn','57A7':'shǎng','57A8':'shǒu','57A9':'è','57AA':'bìng','57AB':'diàn','57AC':'hóng','57AD':'yā','57AE':'kuǎ','57AF':'da','57B0':'kǎ','57B1':'dàng','57B2':'kǎi','57B3':'háng','57B4':'nǎo','57B5':'ān','57B6':'xīng','57B7':'xiàn','57B8':'huàn/huán','57B9':'bāng','57BA':'pēi','57BB':'bà','57BC':'yì','57BD':'yìn','57BE':'hàn','57BF':'xù','57C0':'chuí','57C1':'cén','57C2':'gěng','57C3':'āi','57C4':'péng','57C5':'fáng','57C6':'què','57C7':'yǒng','57C8':'jùn','57C9':'jiá','57CA':'dì','57CB':'mái/mán','57CC':'làng','57CD':'xuàn','57CE':'chéng','57CF':'shān','57D0':'jīn','57D1':'zhé','57D2':'liè','57D3':'liè','57D4':'bù/pǔ','57D5':'chéng','57D6':'huā','57D7':'bù','57D8':'shí','57D9':'xūn','57DA':'guō','57DB':'jiōng','57DC':'yě','57DD':'niàn','57DE':'dī','57DF':'yù','57E0':'bù','57E1':'wù/yā','57E2':'juǎn','57E3':'suì','57E4':'pí/bēi/bì','57E5':'chēng','57E6':'wǎn','57E7':'jù','57E8':'lǔn','57E9':'zhēng','57EA':'kōng','57EB':'zhǒng','57EC':'dōng','57ED':'dài','57EE':'tàn','57EF':'ǎn','57F0':'cài','57F1':'shú','57F2':'běng','57F3':'kǎn','57F4':'zhí','57F5':'duǒ','57F6':'yì','57F7':'zhí','57F8':'yì','57F9':'péi','57FA':'jī','57FB':'zhǔn','57FC':'qí','57FD':'sào','57FE':'jù','57FF':'ní/nì','580A':'è','580B':'péng/bèng','580C':'gù','580D':'tù','580E':'lèng/líng','580F':'fāng/fáng','581A':'hún','581B':'bì','581C':'liàn','581D':'guō','581E':'dié','581F':'zhuàn','582A':'kān','582B':'zōng','582C':'yú','582D':'huáng','582E':'è','582F':'yáo','583A':'jiè','583B':'zhēn','583C':'hèng','583D':'gāng','583E':'chuǎn','583F':'jiǎn','584A':'kuài','584B':'yíng','584C':'tā','584D':'chéng','584E':'yǒng','584F':'kǎi','585A':'zhǒng','585B':'lì','585C':'péng','585D':'bàng','585E':'sāi/sài/sè','585F':'zàng','586A':'kǎn','586B':'tián','586C':'yuán','586D':'wēn','586E':'xiè','586F':'liù','587A':'méi','587B':'mò','587C':'zhuān','587D':'shuǎng','587E':'shú','587F':'lǒu','588A':'diàn','588B':'chěn','588C':'zhí','588D':'jì','588E':'guō','588F':'qiǎng','589A':'liáng','589B':'wèi','589C':'zhuì','589D':'qiāo','589E':'zēng','589F':'xū','58A0':'shàn','58A1':'shàn','58A2':'bá','58A3':'pú','58A4':'kuài','58A5':'dǒng','58A6':'fán','58A7':'què','58A8':'mò','58A9':'dūn','58AA':'dūn','58AB':'zūn/zǔn','58AC':'zuì','58AD':'shèng','58AE':'duò/huī','58AF':'duò','58B0':'tán','58B1':'dèng/yàn','58B2':'mú','58B3':'fén','58B4':'huáng','58B5':'tán','58B6':'da','58B7':'yè','58B8':'chú','58B9':'jiàn','58BA':'ào','58BB':'qiáng','58BC':'jī','58BD':'qiāo','58BE':'kěn','58BF':'yì','58C0':'pí','58C1':'bì','58C2':'diàn','58C3':'jiāng','58C4':'yě','58C5':'yōng','58C6':'xué','58C7':'tán','58C8':'lǎn','58C9':'jù','58CA':'huài/pī','58CB':'dàng','58CC':'rǎng','58CD':'qiàn','58CE':'xuān','58CF':'làn','58D0':'mí','58D1':'hè','58D2':'kài','58D3':'yā/yà','58D4':'dǎo','58D5':'háo','58D6':'ruán','58D7':'jìn','58D8':'lěi','58D9':'kuàng','58DA':'lú','58DB':'yán','58DC':'tán','58DD':'wěi','58DE':'huài/pī','58DF':'lǒng','58E0':'lǒng','58E1':'ruì','58E2':'lì','58E3':'lín','58E4':'rǎng','58E5':'chán','58E6':'xūn','58E7':'yán','58E8':'léi','58E9':'bà','58EA':'wān','58EB':'shì','58EC':'rén','58ED':'*','58EE':'zhuàng','58EF':'zhuàng','58F0':'shēng','58F1':'yī','58F2':'mài','58F3':'ké/qiào','58F4':'zhǔ','58F5':'zhuàng','58F6':'hú','58F7':'hú','58F8':'kǔn','58F9':'yī','58FA':'hú','58FB':'xù','58FC':'kǔn','58FD':'shòu','58FE':'mǎng','58FF':'zūn','590A':'suī','590B':'qūn','590C':'líng','590D':'fù','590E':'zuò','590F':'xià','591A':'duō','591B':'duō','591C':'yè','591D':'qíng','591E':'*','591F':'gòu','592A':'tài','592B':'fū','592C':'guài','592D':'yāo','592E':'yāng','592F':'hāng','593A':'duó','593B':'huà','593C':'kuǎng','593D':'yùn','593E':'jiā/jiá','593F':'bā','594A':'xié','594B':'fèn','594C':'diǎn','594D':'juàn/yǎng','594E':'kuí','594F':'zòu','595A':'xī','595B':'huǎng','595C':'fěi','595D':'diāo','595E':'suī','595F':'bēng','596A':'duó','596B':'yūn','596C':'jiǎng','596D':'shì','596E':'fèn','596F':'huò','597A':'jiǔ','597B':'nán','597C':'chà','597D':'hǎo/hào','597E':'xiān','597F':'fàn','598A':'rèn','598B':'fū','598C':'jìng','598D':'yán','598E':'xiè','598F':'wèn','599A':'pēi','599B':'chī','599C':'yuè','599D':'zhuāng','599E':'niū','599F':'yàn','59A0':'nà','59A1':'xīn/xìn','59A2':'fén','59A3':'bǐ','59A4':'yú','59A5':'tuǒ','59A6':'fēng','59A7':'yuán','59A8':'fáng','59A9':'wǔ','59AA':'yù','59AB':'guī','59AC':'dù','59AD':'bá','59AE':'nī','59AF':'zhóu','59B0':'zhóu','59B1':'zhāo','59B2':'dá','59B3':'nǎi/nǐ','59B4':'yuǎn','59B5':'tǒu','59B6':'xuán','59B7':'zhí','59B8':'ē','59B9':'mèi','59BA':'mò','59BB':'qī','59BC':'bì','59BD':'shēn','59BE':'qiè','59BF':'ē','59C0':'hé','59C1':'xǔ','59C2':'fá','59C3':'zhēng','59C4':'nī','59C5':'bàn','59C6':'mǔ','59C7':'fū/fù','59C8':'líng','59C9':'zǐ','59CA':'zǐ','59CB':'shǐ','59CC':'rǎn','59CD':'shān','59CE':'yāng','59CF':'qián','59D0':'jiě','59D1':'gū','59D2':'sì','59D3':'xìng','59D4':'wěi','59D5':'zī','59D6':'jù','59D7':'shān','59D8':'pīn','59D9':'rèn','59DA':'yáo','59DB':'tǒng','59DC':'jiāng','59DD':'shū','59DE':'jí','59DF':'gāi','59E0':'shàng','59E1':'kuò','59E2':'juān','59E3':'jiāo','59E4':'gòu','59E5':'lǎo','59E6':'jiān','59E7':'jiān','59E8':'yí','59E9':'nián','59EA':'zhí','59EB':'jī','59EC':'jī','59ED':'xiàn','59EE':'héng','59EF':'guāng','59F0':'jūn','59F1':'kuā','59F2':'yàn','59F3':'mǐng','59F4':'liè','59F5':'pèi','59F6':'yǎn','59F7':'yòu','59F8':'yán','59F9':'chà','59FA':'xiǎn','59FB':'yīn','59FC':'chǐ','59FD':'guǐ','59FE':'quán','59FF':'zī','5A00':'sōng','5A01':'wēi','5A02':'hóng','5A03':'wá','5A04':'lóu','5A05':'yà','5A06':'rǎo/ráo','5A07':'jiāo','5A08':'luán','5A09':'pīng','5A0A':'xiàn','5A0B':'shào','5A0C':'lǐ','5A0D':'chéng','5A0E':'xiè','5A0F':'máng','5A10':'fū','5A11':'suō','5A12':'mǔ','5A13':'wěi','5A14':'kè','5A15':'lài','5A16':'chuò','5A17':'dìng','5A18':'niáng','5A19':'kēng','5A1A':'nán','5A1B':'yú','5A1C':'nuó/nà','5A1D':'pēi','5A1E':'suī','5A1F':'juān','5A20':'shēn','5A21':'zhì','5A22':'hán','5A23':'dì','5A24':'zhuāng','5A25':'é','5A26':'pín','5A27':'tuì','5A28':'xiàn','5A29':'miǎn','5A2A':'wú','5A2B':'yán','5A2C':'wǔ','5A2D':'xī','5A2E':'yán','5A2F':'yú','5A30':'sì','5A31':'yú','5A32':'wā','5A33':'lì','5A34':'xián','5A35':'jū','5A36':'qǔ','5A37':'chuí','5A38':'qī','5A39':'xián','5A3A':'zhuī','5A3B':'dōng','5A3C':'chāng','5A3D':'lù','5A3E':'ái','5A3F':'ē','5A40':'ē','5A41':'lóu/lǚ','5A42':'mián','5A43':'cóng','5A44':'pǒu','5A45':'jú','5A46':'pó','5A47':'cǎi','5A48':'líng','5A49':'wǎn','5A4A':'biǎo','5A4B':'xiāo','5A4C':'shǔ','5A4D':'qǐ','5A4E':'huī','5A4F':'fù','5A50':'wǒ','5A51':'ruí','5A52':'tán','5A53':'fēi','5A54':'fēi','5A55':'jié','5A56':'tiān','5A57':'ní','5A58':'quán','5A59':'jìng','5A5A':'hūn','5A5B':'jīng','5A5C':'qiān','5A5D':'diàn','5A5E':'xìng','5A5F':'hù','5A60':'wán','5A61':'lái','5A62':'bì','5A63':'yīn','5A64':'chōu/zhōu','5A65':'chuò','5A66':'fù','5A67':'jìng','5A68':'lún','5A69':'yàn/àn','5A6A':'lán','5A6B':'kūn','5A6C':'yín','5A6D':'yà','5A6E':'jū','5A6F':'lì','5A70':'diǎn','5A71':'xián','5A72':'huā','5A73':'huà','5A74':'yīng','5A75':'chán','5A76':'shěn','5A77':'tíng','5A78':'yáng','5A79':'yǎo','5A7A':'wù','5A7B':'nàn','5A7C':'chuò','5A7D':'jiǎ','5A7E':'tōu','5A7F':'xù','5A80':'yú','5A81':'wēi','5A82':'tí','5A83':'róu','5A84':'měi','5A85':'dān','5A86':'ruǎn','5A87':'qīn','5A88':'huī','5A89':'wū','5A8A':'qián','5A8B':'chūn','5A8C':'máo','5A8D':'fù','5A8E':'jiě','5A8F':'duān','5A90':'xī','5A91':'zhòng','5A92':'méi','5A93':'huáng','5A94':'mián','5A95':'ān','5A96':'yíng','5A97':'xuān','5A98':'jiē','5A99':'wēi','5A9A':'mèi','5A9B':'yuàn/yuán','5A9C':'zhēn','5A9D':'qiū','5A9E':'tí/shì','5A9F':'xiè','5AA0':'tuǒ','5AA1':'liàn','5AA2':'mào','5AA3':'rǎn','5AA4':'sī','5AA5':'piān','5AA6':'wèi','5AA7':'wā','5AA8':'jiù','5AA9':'hú','5AAA':'ǎo','5AAB':'jié','5AAC':'bǎo','5AAD':'xū','5AAE':'tōu/tǒu','5AAF':'guī','5AB0':'zōu','5AB1':'yáo','5AB2':'pì','5AB3':'xí','5AB4':'yuán','5AB5':'yìng','5AB6':'róng','5AB7':'rù','5AB8':'chī','5AB9':'liú','5ABA':'měi','5ABB':'pán','5ABC':'ǎo','5ABD':'mā','5ABE':'gòu','5ABF':'kuì','5AC0':'qín','5AC1':'jià','5AC2':'sǎo','5AC3':'zhēn','5AC4':'yuán','5AC5':'chā','5AC6':'yóng','5AC7':'míng','5AC8':'yīng','5AC9':'jí','5ACA':'sù','5ACB':'niǎo','5ACC':'xián','5ACD':'tāo/yǎo','5ACE':'páng','5ACF':'láng','5AD0':'niǎo','5AD1':'báo','5AD2':'ài','5AD3':'pì','5AD4':'pín','5AD5':'yì','5AD6':'piáo','5AD7':'yù','5AD8':'léi','5AD9':'xuán','5ADA':'màn/mān','5ADB':'yī','5ADC':'zhāng','5ADD':'kāng','5ADE':'yóng','5ADF':'nì','5AE0':'lí','5AE1':'dí','5AE2':'guī','5AE3':'yān','5AE4':'jìn','5AE5':'zhuān','5AE6':'cháng','5AE7':'cè','5AE8':'hān/rǎn','5AE9':'nèn','5AEA':'lào','5AEB':'mó','5AEC':'zhē','5AED':'hù','5AEE':'hù','5AEF':'ào','5AF0':'nèn','5AF1':'qiáng','5AF2':'má','5AF3':'bì','5AF4':'gū','5AF5':'wǔ','5AF6':'qiáo','5AF7':'tuǒ','5AF8':'zhǎn','5AF9':'máo','5AFA':'xián','5AFB':'xián','5AFC':'mò','5AFD':'liáo','5AFE':'lián','5AFF':'huà','5B00':'guī','5B01':'dēng','5B02':'zhí','5B03':'xū','5B04':'yī','5B05':'huà','5B06':'xī','5B07':'huì','5B08':'rǎo/ráo','5B09':'xī','5B0A':'yàn','5B0B':'chán','5B0C':'jiāo','5B0D':'měi','5B0E':'fàn','5B0F':'fān','5B10':'xiān','5B11':'yì','5B12':'wèi','5B13':'chān','5B14':'fàn','5B15':'shì','5B16':'bì','5B17':'shàn','5B18':'suì','5B19':'qiáng','5B1A':'lián','5B1B':'huán/qióng/xuān','5B1C':'xīn','5B1D':'niǎo','5B1E':'dǒng','5B1F':'yì','5B20':'cán','5B21':'ài','5B22':'niáng','5B23':'níng','5B24':'mā','5B25':'tiǎo','5B26':'chóu','5B27':'jìn','5B28':'cí','5B29':'yú','5B2A':'pín','5B2B':'róng','5B2C':'xū','5B2D':'nǎi','5B2E':'yān','5B2F':'tái','5B30':'yīng','5B31':'cán','5B32':'niǎo','5B33':'yuē/yuè','5B34':'yíng','5B35':'mián','5B36':'bí','5B37':'mā','5B38':'shěn','5B39':'xìng','5B3A':'nì','5B3B':'dú','5B3C':'liú','5B3D':'yuān','5B3E':'lǎn','5B3F':'yàn','5B40':'shuāng','5B41':'líng','5B42':'jiǎo','5B43':'niáng','5B44':'lǎn','5B45':'xiān','5B46':'yīng','5B47':'shuāng','5B48':'shuāi','5B49':'quán','5B4A':'mǐ','5B4B':'lí','5B4C':'luán','5B4D':'yán','5B4E':'zhǔ','5B4F':'lǎn','5B50':'zǐ/zi','5B51':'jié','5B52':'jué','5B53':'jué','5B54':'kǒng','5B55':'yùn','5B56':'zī','5B57':'zì','5B58':'cún','5B59':'sūn','5B5A':'fú','5B5B':'bèi/bó','5B5C':'zī','5B5D':'xiào','5B5E':'xìn','5B5F':'mèng','5B60':'sì','5B61':'tāi','5B62':'bāo','5B63':'jì','5B64':'gū','5B65':'nú','5B66':'xué','5B67':'yòu','5B68':'chán','5B69':'hái','5B6A':'luán','5B6B':'sūn','5B6C':'nāo','5B6D':'miē','5B6E':'cóng','5B6F':'jiān','5B70':'shú','5B71':'chán/càn','5B72':'yā','5B73':'zī','5B74':'nǐ','5B75':'fū','5B76':'zī','5B77':'lí','5B78':'xué/xiáo','5B79':'bò','5B7A':'rú','5B7B':'nái','5B7C':'niè','5B7D':'niè','5B7E':'yīng','5B7F':'luán','5B80':'mián','5B81':'níng/nìng','5B82':'rǒng','5B83':'tā','5B84':'guǐ','5B85':'zhái','5B86':'qióng','5B87':'yǔ','5B88':'shǒu','5B89':'ān','5B8A':'tū','5B8B':'sòng','5B8C':'wán','5B8D':'ròu','5B8E':'yǎo','5B8F':'hóng','5B90':'yí','5B91':'jǐng','5B92':'zhūn','5B93':'mì','5B94':'guāi','5B95':'dàng','5B96':'hóng','5B97':'zōng','5B98':'guān','5B99':'zhòu','5B9A':'dìng','5B9B':'wǎn','5B9C':'yí','5B9D':'bǎo','5B9E':'shí','5B9F':'shí','5BA0':'chǒng','5BA1':'shěn','5BA2':'kè','5BA3':'xuān','5BA4':'shì','5BA5':'yòu','5BA6':'huàn','5BA7':'yí','5BA8':'tiǎo','5BA9':'shǐ','5BAA':'xiàn','5BAB':'gōng','5BAC':'chéng','5BAD':'qún','5BAE':'gōng','5BAF':'xiāo','5BB0':'zǎi','5BB1':'zhā','5BB2':'bǎo','5BB3':'hài','5BB4':'yàn','5BB5':'xiāo','5BB6':'jiā','5BB7':'shěn','5BB8':'chén','5BB9':'róng','5BBA':'huǎng','5BBB':'mì','5BBC':'kòu','5BBD':'kuān','5BBE':'bīn','5BBF':'sù/xiǔ/xiù','5BC0':'cǎi/shěn','5BC1':'zǎn','5BC2':'jì','5BC3':'yuān','5BC4':'jì','5BC5':'yín','5BC6':'mì','5BC7':'kòu','5BC8':'qīng','5BC9':'hè','5BCA':'zhēn','5BCB':'jiǎn','5BCC':'fù','5BCD':'níng','5BCE':'bìng','5BCF':'huán','5BD0':'mèi','5BD1':'qǐn','5BD2':'hán','5BD3':'yù','5BD4':'shí','5BD5':'níng','5BD6':'jìn','5BD7':'níng','5BD8':'zhì','5BD9':'yǔ','5BDA':'bǎo','5BDB':'kuān','5BDC':'níng','5BDD':'qǐn','5BDE':'mò','5BDF':'chá','5BE0':'jù','5BE1':'guǎ','5BE2':'qǐn','5BE3':'hū','5BE4':'wù','5BE5':'liáo','5BE6':'shí','5BE7':'níng/nìng','5BE8':'zhài','5BE9':'shěn','5BEA':'wěi','5BEB':'xiě','5BEC':'kuān','5BED':'huì','5BEE':'liáo','5BEF':'jùn','5BF0':'huán','5BF1':'yì','5BF2':'yí','5BF3':'bǎo','5BF4':'qīn','5BF5':'chǒng','5BF6':'bǎo','5BF7':'fēng','5BF8':'cùn','5BF9':'duì','5BFA':'sì','5BFB':'xún','5BFC':'dǎo','5BFD':'lǚ/luō','5BFE':'duì','5BFF':'shòu','5C00':'pǒ','5C01':'fēng','5C02':'zhuān','5C03':'fū','5C04':'shè','5C05':'kè','5C06':'jiāng/jiàng','5C07':'jiāng/jiàng','5C08':'zhuān','5C09':'wèi/yù','5C0A':'zūn','5C0B':'xún/xín','5C0C':'shù','5C0D':'duì','5C0E':'dǎo/dào','5C0F':'xiǎo','5C10':'jī','5C11':'shǎo/shào','5C12':'ěr','5C13':'ěr','5C14':'ěr','5C15':'gǎ','5C16':'jiān','5C17':'shū','5C18':'chén','5C19':'shàng','5C1A':'shàng','5C1B':'yuán','5C1C':'gá','5C1D':'cháng','5C1E':'liáo/liǎo','5C1F':'xiǎn','5C20':'xiān','5C21':'kūn','5C22':'wāng/yóu','5C23':'wāng/yóu','5C24':'yóu','5C25':'liào','5C26':'liào','5C27':'yáo','5C28':'máng/páng','5C29':'wāng','5C2A':'wāng','5C2B':'wāng','5C2C':'gà','5C2D':'yáo','5C2E':'duò','5C2F':'kuì','5C30':'zhǒng/zhòng','5C31':'jiù','5C32':'gān','5C33':'gǔ','5C34':'gān','5C35':'gān','5C36':'gān','5C37':'gān','5C38':'shī','5C39':'yǐn','5C3A':'chǐ','5C3B':'kāo','5C3C':'ní','5C3D':'jǐn/jìn','5C3E':'wěi/yǐ','5C3F':'niào/suī','5C40':'jú','5C41':'pì','5C42':'céng','5C43':'xì','5C44':'bī/bǐ','5C45':'jū','5C46':'jiè','5C47':'tiān','5C48':'qū','5C49':'tì','5C4A':'jiè','5C4B':'wū','5C4C':'diǎo','5C4D':'shī','5C4E':'shǐ','5C4F':'píng/bǐng','5C50':'jī','5C51':'xiè','5C52':'chén','5C53':'xì','5C54':'ní','5C55':'zhǎn','5C56':'xī','5C57':'wěi','5C58':'mǎn','5C59':'ē','5C5A':'lòu','5C5B':'píng','5C5C':'tì','5C5D':'fèi','5C5E':'shǔ/zhǔ','5C5F':'xiè','5C60':'tú','5C61':'lǚ','5C62':'lǚ','5C63':'xǐ','5C64':'céng','5C65':'lǚ','5C66':'jù','5C67':'xiè','5C68':'jù','5C69':'jué','5C6A':'liáo','5C6B':'jué','5C6C':'shǔ/zhǔ','5C6D':'xì','5C6E':'chè','5C6F':'tún','5C70':'nì','5C71':'shān','5C72':'wā','5C73':'xiān','5C74':'lì','5C75':'è','5C76':'dāo/huì','5C77':'huì','5C78':'lóng','5C79':'yì','5C7A':'qǐ','5C7B':'rèn','5C7C':'wù','5C7D':'hàn','5C7E':'shēn','5C7F':'yǔ','5C80':'chū','5C81':'suì','5C82':'qǐ','5C83':'rèn','5C84':'yuè','5C85':'bǎn','5C86':'yǎo','5C87':'áng','5C88':'yá','5C89':'wù','5C8A':'jié','5C8B':'è','5C8C':'jí','5C8D':'qiān','5C8E':'fēn','5C8F':'wán','5C90':'qí','5C91':'cén','5C92':'qián','5C93':'qí','5C94':'chà','5C95':'jiè','5C96':'qū','5C97':'gǎng','5C98':'xiàn','5C99':'ào','5C9A':'lán','5C9B':'dǎo','5C9C':'bā','5C9D':'zhǎi','5C9E':'zuò','5C9F':'yǎng','5CA0':'jù','5CA1':'gāng','5CA2':'kě','5CA3':'gǒu','5CA4':'xuè','5CA5':'bō','5CA6':'lì','5CA7':'tiáo','5CA8':'qū','5CA9':'yán','5CAA':'fú','5CAB':'xiù','5CAC':'jiǎ','5CAD':'lǐng','5CAE':'tuó','5CAF':'pēi','5CB0':'yǒu','5CB1':'dài','5CB2':'kuàng','5CB3':'yuè','5CB4':'qū','5CB5':'hù','5CB6':'pò','5CB7':'mín','5CB8':'àn','5CB9':'tiáo','5CBA':'lǐng','5CBB':'chí','5CBC':'píng','5CBD':'dōng','5CBE':'zhān','5CBF':'kuī','5CC0':'xiù','5CC1':'mǎo','5CC2':'tóng','5CC3':'xué','5CC4':'yì','5CC5':'biàn','5CC6':'hē','5CC7':'kē','5CC8':'luò','5CC9':'ē','5CCA':'fù','5CCB':'xún','5CCC':'dié','5CCD':'lù','5CCE':'lǎng','5CCF':'ěr','5CD0':'gāi','5CD1':'quán','5CD2':'tóng/dòng','5CD3':'yí','5CD4':'mǔ','5CD5':'shí','5CD6':'ān','5CD7':'wěi','5CD8':'hū','5CD9':'zhì/shì','5CDA':'mì','5CDB':'lǐ','5CDC':'jī','5CDD':'tóng','5CDE':'kuǐ','5CDF':'yòu','5CE0':'kǎ/qiǎ','5CE1':'xiá','5CE2':'lǐ','5CE3':'yáo','5CE4':'jiào/qiáo','5CE5':'zhēng','5CE6':'luán','5CE7':'jiāo','5CE8':'é','5CE9':'é','5CEA':'yù','5CEB':'yé','5CEC':'bū','5CED':'qiào','5CEE':'qūn','5CEF':'fēng','5CF0':'fēng','5CF1':'náo/nāo','5CF2':'lì','5CF3':'yóu','5CF4':'xiàn','5CF5':'hóng','5CF6':'dǎo','5CF7':'shēn','5CF8':'chéng','5CF9':'tú','5CFA':'gěng','5CFB':'jùn','5CFC':'hào','5CFD':'xiá','5CFE':'yīn','5CFF':'wú/yū','5D00':'làng','5D01':'kǎn','5D02':'láo','5D03':'lái','5D04':'xiǎn','5D05':'què','5D06':'kōng','5D07':'chóng','5D08':'chóng','5D09':'tà','5D0A':'lín','5D0B':'huá/huà','5D0C':'jū','5D0D':'lái','5D0E':'qí','5D0F':'mín','5D10':'kūn','5D11':'kūn','5D12':'zú','5D13':'gù','5D14':'cuī','5D15':'yá','5D16':'yá','5D17':'gǎng/gāng','5D18':'lún','5D19':'lún','5D1A':'léng','5D1B':'jué','5D1C':'duō','5D1D':'chēng','5D1E':'guō','5D1F':'yín','5D20':'dōng','5D21':'hán','5D22':'zhēng','5D23':'wěi','5D24':'yáo','5D25':'pǐ','5D26':'yān','5D27':'sōng','5D28':'jié','5D29':'bēng','5D2A':'zú','5D2B':'jué','5D2C':'dōng','5D2D':'zhǎn','5D2E':'gù','5D2F':'yín','5D30':'zī','5D31':'zé','5D32':'huáng','5D33':'yú','5D34':'wēi/wǎi','5D35':'yáng','5D36':'fēng','5D37':'qiú','5D38':'dùn','5D39':'tí','5D3A':'yǐ','5D3B':'zhì','5D3C':'shì','5D3D':'zǎi','5D3E':'yǎo','5D3F':'è','5D40':'zhù','5D41':'kān','5D42':'lǜ','5D43':'yǎn','5D44':'měi','5D45':'gān/gàn','5D46':'jī','5D47':'jī','5D48':'huàn','5D49':'tíng','5D4A':'shèng','5D4B':'méi','5D4C':'qiàn','5D4D':'wù','5D4E':'yú','5D4F':'zōng','5D50':'lán','5D51':'jié/hé','5D52':'yán','5D53':'yán','5D54':'wěi','5D55':'zōng','5D56':'chá','5D57':'suì','5D58':'róng','5D59':'kē','5D5A':'qīn','5D5B':'yú','5D5C':'qí','5D5D':'lǒu','5D5E':'tú','5D5F':'duī','5D60':'xī','5D61':'wēng','5D62':'cāng','5D63':'dāng','5D64':'róng','5D65':'jié','5D66':'ái','5D67':'liú','5D68':'wǔ','5D69':'sōng','5D6A':'qiāo','5D6B':'zī','5D6C':'wéi','5D6D':'bēng','5D6E':'diān','5D6F':'cuó','5D70':'qiǎn','5D71':'yóng','5D72':'niè','5D73':'cuó','5D74':'jí','5D75':'shí','5D76':'ruò','5D77':'sǒng','5D78':'zōng','5D79':'jiàng','5D7A':'liáo','5D7B':'kāng','5D7C':'chǎn','5D7D':'dì','5D7E':'cēn','5D7F':'dǐng','5D80':'tū/dié','5D81':'lǒu','5D82':'zhàng','5D83':'zhǎn','5D84':'zhǎn','5D85':'áo','5D86':'cáo','5D87':'qū','5D88':'qiāng','5D89':'zuī','5D8A':'zuǐ','5D8B':'dǎo','5D8C':'dǎo','5D8D':'xí','5D8E':'yù','5D8F':'bó','5D90':'lóng','5D91':'xiǎng','5D92':'céng','5D93':'bō','5D94':'qīn','5D95':'jiāo','5D96':'yǎn','5D97':'láo','5D98':'zhàn','5D99':'lín','5D9A':'liáo','5D9B':'liáo','5D9C':'jīn','5D9D':'dèng','5D9E':'duò','5D9F':'zūn','5DA0':'jiào/qiáo','5DA1':'guì','5DA2':'yáo','5DA3':'qiáo','5DA4':'yáo','5DA5':'jué','5DA6':'zhān','5DA7':'yì','5DA8':'xuē','5DA9':'náo','5DAA':'yè','5DAB':'yè','5DAC':'yī','5DAD':'è','5DAE':'xiǎn','5DAF':'jí','5DB0':'xiè','5DB1':'kě','5DB2':'suǐ','5DB3':'dì','5DB4':'ào','5DB5':'zuì','5DB6':'wēi','5DB7':'yí','5DB8':'róng','5DB9':'dǎo','5DBA':'lǐng','5DBB':'zá','5DBC':'yǔ','5DBD':'yuè','5DBE':'yǐn','5DBF':'nuò/rū','5DC0':'jié','5DC1':'lì','5DC2':'suǐ/xī','5DC3':'lóng','5DC4':'lóng','5DC5':'diān','5DC6':'yíng','5DC7':'xī','5DC8':'jú','5DC9':'chán','5DCA':'yǐng','5DCB':'kuī','5DCC':'yán','5DCD':'wēi','5DCE':'náo','5DCF':'quán','5DD0':'chāo','5DD1':'cuán','5DD2':'luán','5DD3':'diān','5DD4':'diān','5DD5':'niè','5DD6':'yán','5DD7':'yán','5DD8':'yǎn','5DD9':'náo','5DDA':'yǎn','5DDB':'chuān','5DDC':'guì','5DDD':'chuān','5DDE':'zhōu','5DDF':'huāng','5DE0':'jīng','5DE1':'xún','5DE2':'cháo','5DE3':'cháo','5DE4':'liè','5DE5':'gōng','5DE6':'zuǒ','5DE7':'qiǎo','5DE8':'jù','5DE9':'gǒng','5DEA':'jù','5DEB':'wū','5DEC':'pū','5DED':'bū','5DEE':'chāi/chā/chà/cī','5DEF':'qiú','5DF0':'qiú','5DF1':'jǐ','5DF2':'yǐ','5DF3':'sì','5DF4':'bā','5DF5':'zhī','5DF6':'zhāo','5DF7':'xiàng/hàng','5DF8':'yí','5DF9':'jǐn','5DFA':'xùn','5DFB':'juàn/juǎn','5DFC':'*','5DFD':'xùn','5DFE':'jīn','5DFF':'fú','5E00':'zā','5E01':'bì','5E02':'shì','5E03':'bù','5E04':'dīng','5E05':'shuài','5E06':'fān','5E07':'niè','5E08':'shī','5E09':'fēn','5E0A':'pà','5E0B':'zhǐ','5E0C':'xī','5E0D':'hù','5E0E':'dàn','5E0F':'wéi','5E10':'zhàng','5E11':'tǎng','5E12':'dài','5E13':'mà','5E14':'pèi','5E15':'pà','5E16':'tiē/tiě/tiè','5E17':'fú','5E18':'lián','5E19':'zhì','5E1A':'zhǒu','5E1B':'bó','5E1C':'zhì','5E1D':'dì','5E1E':'mò','5E1F':'yì','5E20':'yì','5E21':'píng','5E22':'qià','5E23':'juàn','5E24':'rú','5E25':'shuài/shuò','5E26':'dài','5E27':'zhēn','5E28':'shuì','5E29':'qiào','5E2A':'zhēn','5E2B':'shī','5E2C':'qún','5E2D':'xí','5E2E':'bāng','5E2F':'dài','5E30':'guī','5E31':'chóu/dào','5E32':'píng','5E33':'zhàng','5E34':'shā','5E35':'wān','5E36':'dài','5E37':'wéi','5E38':'cháng','5E39':'shà','5E3A':'qí','5E3B':'zé','5E3C':'guó','5E3D':'mào','5E3E':'dǔ','5E3F':'hóu','5E40':'zhēn','5E41':'xū','5E42':'mì','5E43':'wéi','5E44':'wò','5E45':'fú','5E46':'yì','5E47':'bāng','5E48':'píng','5E49':'dié','5E4A':'gōng','5E4B':'pán','5E4C':'huǎng','5E4D':'dāo/tāo','5E4E':'mì','5E4F':'jiā','5E50':'téng','5E51':'huī','5E52':'zhōng','5E53':'sēn','5E54':'màn','5E55':'mù','5E56':'biāo','5E57':'guó','5E58':'zé','5E59':'mù','5E5A':'bāng','5E5B':'zhàng','5E5C':'jiǒng','5E5D':'chǎn','5E5E':'fú','5E5F':'zhì','5E60':'hū','5E61':'fān','5E62':'chuáng/zhuàng','5E63':'bì','5E64':'bì','5E65':'zhǎng','5E66':'mì','5E67':'qiāo','5E68':'dàn','5E69':'fén','5E6A':'méng','5E6B':'bāng','5E6C':'chóu/dào','5E6D':'miè','5E6E':'chú','5E6F':'jiē','5E70':'xiǎn','5E71':'lán','5E72':'gān/gàn','5E73':'píng','5E74':'nián','5E75':'jiān','5E76':'bìng','5E77':'bìng','5E78':'xìng','5E79':'gàn/gān','5E7A':'yāo','5E7B':'huàn','5E7C':'yòu','5E7D':'yōu','5E7E':'jǐ/jī','5E7F':'guǎng','5E80':'pǐ','5E81':'tīng','5E82':'zè','5E83':'guǎng/ān','5E84':'zhuāng','5E85':'mo','5E86':'qìng','5E87':'bì','5E88':'qín','5E89':'dùn','5E8A':'chuáng','5E8B':'guǐ','5E8C':'yǎ','5E8D':'bài','5E8E':'jiè','5E8F':'xù','5E90':'lú','5E91':'wǔ','5E92':'zhuāng','5E93':'kù','5E94':'yìng/yīng','5E95':'dǐ','5E96':'páo','5E97':'diàn','5E98':'yā','5E99':'miào','5E9A':'gēng','5E9B':'cī','5E9C':'fǔ','5E9D':'tóng','5E9E':'páng','5E9F':'fèi','5EA0':'xiáng','5EA1':'yǐ','5EA2':'zhì','5EA3':'tiāo','5EA4':'zhì','5EA5':'xiū','5EA6':'dù/duó','5EA7':'zuò','5EA8':'xiāo','5EA9':'tú','5EAA':'guǐ','5EAB':'kù','5EAC':'páng/mǎng','5EAD':'tíng','5EAE':'yǒu','5EAF':'bū','5EB0':'bǐng','5EB1':'chěng','5EB2':'lái','5EB3':'bì','5EB4':'jí','5EB5':'ān','5EB6':'shù','5EB7':'kāng','5EB8':'yōng','5EB9':'tuǒ','5EBA':'sōng','5EBB':'shù','5EBC':'qǐng','5EBD':'yù','5EBE':'yǔ','5EBF':'miào','5EC0':'sōu','5EC1':'cè','5EC2':'xiāng','5EC3':'fèi','5EC4':'jiù','5EC5':'hé','5EC6':'huì','5EC7':'liù','5EC8':'shà/xià','5EC9':'lián','5ECA':'láng','5ECB':'sōu','5ECC':'jiān','5ECD':'pǒu','5ECE':'qǐng','5ECF':'jiù','5ED0':'jiù','5ED1':'qín/jǐn','5ED2':'áo','5ED3':'kuò','5ED4':'lóu','5ED5':'yìn','5ED6':'liào','5ED7':'dài','5ED8':'lù','5ED9':'yì','5EDA':'chú','5EDB':'chán','5EDC':'tú','5EDD':'sī','5EDE':'xīn','5EDF':'miào','5EE0':'chǎng/ān','5EE1':'wǔ','5EE2':'fèi','5EE3':'guǎng/ān','5EE4':'*','5EE5':'guài','5EE6':'bì','5EE7':'qiáng','5EE8':'xiè','5EE9':'lǐn','5EEA':'lǐn','5EEB':'liáo','5EEC':'lú','5EED':'jì','5EEE':'yíng','5EEF':'xiān','5EF0':'tīng','5EF1':'yōng','5EF2':'lí','5EF3':'tīng','5EF4':'yǐn','5EF5':'xún','5EF6':'yán','5EF7':'tíng','5EF8':'dí','5EF9':'pò','5EFA':'jiàn','5EFB':'huí','5EFC':'nǎi','5EFD':'huí','5EFE':'gǒng','5EFF':'niàn','5F00':'kāi','5F01':'biàn','5F02':'yì','5F03':'qì','5F04':'nòng/lòng','5F05':'fén','5F06':'jǔ','5F07':'yǎn','5F08':'yì','5F09':'zàng/zhuǎng','5F0A':'bì','5F0B':'yì','5F0C':'yī','5F0D':'èr','5F0E':'sān','5F0F':'shì','5F10':'èr','5F11':'shì','5F12':'shì','5F13':'gōng','5F14':'diào','5F15':'yǐn','5F16':'hù','5F17':'fú','5F18':'hóng','5F19':'wū','5F1A':'tuí','5F1B':'chí','5F1C':'qiáng/qiǎng','5F1D':'bà','5F1E':'shěn','5F1F':'dì','5F20':'zhāng','5F21':'jué','5F22':'tāo','5F23':'fǔ','5F24':'dǐ','5F25':'mí','5F26':'xián','5F27':'hú','5F28':'chāo','5F29':'nǔ','5F2A':'jìng','5F2B':'zhěn','5F2C':'yí','5F2D':'mǐ','5F2E':'quān','5F2F':'wān','5F30':'shāo','5F31':'ruò','5F32':'xuān','5F33':'jìng','5F34':'diāo','5F35':'zhāng','5F36':'jiàng','5F37':'qiáng/jiàng/qiǎng','5F38':'bēng','5F39':'dàn/tán','5F3A':'qiáng/qiǎng/jiàng','5F3B':'bì','5F3C':'bì','5F3D':'shè','5F3E':'dàn/tán','5F3F':'jiǎn','5F40':'gòu','5F41':'gē','5F42':'fā','5F43':'bì','5F44':'kōu','5F45':'jiǎn','5F46':'biè','5F47':'xiāo','5F48':'dàn/tán','5F49':'kuàng','5F4A':'qiáng/jiàng','5F4B':'hóng','5F4C':'mí','5F4D':'kuò','5F4E':'wān','5F4F':'jué','5F50':'jì','5F51':'jì','5F52':'guī','5F53':'dāng/dàng','5F54':'lù','5F55':'lù','5F56':'tuàn','5F57':'huì','5F58':'zhì','5F59':'huì','5F5A':'huì','5F5B':'yí','5F5C':'yí','5F5D':'yí','5F5E':'yí','5F5F':'huò','5F60':'huò','5F61':'shān','5F62':'xíng','5F63':'zhāng','5F64':'tóng','5F65':'yàn','5F66':'yàn','5F67':'yù','5F68':'chī','5F69':'cǎi','5F6A':'biāo','5F6B':'diāo','5F6C':'bīn','5F6D':'péng','5F6E':'yǒng','5F6F':'piào','5F70':'zhāng','5F71':'yǐng','5F72':'chī','5F73':'chì','5F74':'zhuó','5F75':'tuǒ','5F76':'jí','5F77':'páng','5F78':'zhōng','5F79':'yì','5F7A':'wáng','5F7B':'chè','5F7C':'bǐ','5F7D':'dī','5F7E':'lǐng','5F7F':'fú','5F80':'wǎng','5F81':'zhēng','5F82':'cú','5F83':'wǎng/wàng','5F84':'jìng','5F85':'dài','5F86':'xī','5F87':'xùn','5F88':'hěn','5F89':'yáng','5F8A':'huái','5F8B':'lǜ','5F8C':'hòu','5F8D':'wǎng','5F8E':'chěng','5F8F':'zhì','5F90':'xú','5F91':'jìng','5F92':'tú','5F93':'cóng','5F94':'xī/zhī','5F95':'lái','5F96':'cóng','5F97':'dé/de/děi','5F98':'pái','5F99':'xǐ','5F9A':'dōng','5F9B':'qī','5F9C':'cháng','5F9D':'zhì','5F9E':'cóng/cōng/zòng','5F9F':'zhōu','5FA0':'lái','5FA1':'yù','5FA2':'xiè','5FA3':'jiè','5FA4':'jiàn','5FA5':'chí/shì','5FA6':'jiǎ','5FA7':'biàn','5FA8':'huáng','5FA9':'fù','5FAA':'xún','5FAB':'wěi','5FAC':'páng','5FAD':'yáo','5FAE':'wēi','5FAF':'xī','5FB0':'zhēng','5FB1':'piào','5FB2':'chí','5FB3':'dé','5FB4':'zhēng','5FB5':'zhǐ','5FB6':'bié','5FB7':'dé','5FB8':'chōng','5FB9':'chè','5FBA':'jiǎo','5FBB':'wèi','5FBC':'jiào/jiǎo','5FBD':'huī','5FBE':'méi','5FBF':'lòng','5FC0':'xiāng','5FC1':'bào','5FC2':'qú','5FC3':'xīn','5FC4':'xīn','5FC5':'bì','5FC6':'yì','5FC7':'lè','5FC8':'rén','5FC9':'dāo','5FCA':'dìng','5FCB':'gǎi','5FCC':'jì','5FCD':'rěn','5FCE':'rén','5FCF':'chàn','5FD0':'tǎn','5FD1':'tè','5FD2':'tè','5FD3':'gān','5FD4':'qì','5FD5':'dài','5FD6':'cǔn','5FD7':'zhì','5FD8':'wàng','5FD9':'máng','5FDA':'xī','5FDB':'fán','5FDC':'yīng/yìng','5FDD':'tiǎn','5FDE':'mín','5FDF':'mín','5FE0':'zhōng','5FE1':'chōng','5FE2':'wù','5FE3':'jí','5FE4':'wǔ','5FE5':'xì','5FE6':'yè','5FE7':'yōu','5FE8':'wàn','5FE9':'zǒng','5FEA':'zhōng/sōng','5FEB':'kuài','5FEC':'yù','5FED':'biàn','5FEE':'zhì','5FEF':'chí','5FF0':'cuì','5FF1':'chén','5FF2':'tài','5FF3':'tún','5FF4':'qián','5FF5':'niàn','5FF6':'hún','5FF7':'xiōng','5FF8':'niǔ','5FF9':'wǎng','5FFA':'xiān','5FFB':'xīn','5FFC':'kāng','5FFD':'hū','5FFE':'kài','5FFF':'fèn','600A':'chāo','600B':'mín','600C':'pī','600D':'zuò','600E':'zěn','600F':'yàng','601A':'jù','601B':'dá','601C':'lián','601D':'sī','601E':'zhòu','601F':'dì','602A':'guài','602B':'fú','602C':'xì','602D':'bì','602E':'yōu','602F':'qiè','603A':'yǒng','603B':'zǒng','603C':'duì','603D':'mò','603E':'*','603F':'yì','604A':'xié','604B':'liàn','604C':'tiāo','604D':'huǎng','604E':'dié','604F':'hǎo','605A':'huì','605B':'huí','605C':'chì','605D':'jiá','605E':'yí','605F':'xiōng','606A':'kè','606B':'dòng','606C':'tián','606D':'gōng','606E':'quán','606F':'xī','607A':'kǎi','607B':'cè','607C':'nǎo','607D':'yùn','607E':'máng','607F':'yǒng','608A':'zhé/qī','608B':'lìn','608C':'tì','608D':'hàn','608E':'hào','608F':'qiè','609A':'sǒng','609B':'quān','609C':'chěng','609D':'kuī','609E':'wù','609F':'wù','60A0':'yōu','60A1':'lí','60A2':'liàng','60A3':'huàn','60A4':'cōng','60A5':'yì','60A6':'yuè','60A7':'lì','60A8':'nín','60A9':'nǎo','60AA':'è/ě/wù','60AB':'què','60AC':'xuán','60AD':'qiān','60AE':'wù','60AF':'mǐn','60B0':'cóng','60B1':'fěi','60B2':'bēi','60B3':'dé','60B4':'cuì','60B5':'chàng','60B6':'mèn/mēn','60B7':'lì','60B8':'jì','60B9':'guàn','60BA':'guàn','60BB':'xìng','60BC':'dào','60BD':'qī','60BE':'kōng','60BF':'tiǎn','60C0':'lún','60C1':'xī','60C2':'kǎn','60C3':'kūn','60C4':'nì','60C5':'qíng','60C6':'chóu','60C7':'dūn','60C8':'guǒ','60C9':'chān','60CA':'jīng','60CB':'wǎn','60CC':'yuān','60CD':'jīn','60CE':'jì','60CF':'lín','60D0':'yù','60D1':'huò','60D2':'hé','60D3':'quān','60D4':'yǎn','60D5':'tì','60D6':'tì','60D7':'niē','60D8':'wǎng','60D9':'chuò','60DA':'hū','60DB':'hūn','60DC':'xī','60DD':'chǎng','60DE':'xīn','60DF':'wéi','60E0':'huì','60E1':'è/ě/wù','60E2':'ruǐ','60E3':'zǒng','60E4':'jiān','60E5':'yǒng','60E6':'diàn','60E7':'jù','60E8':'cǎn','60E9':'chéng','60EA':'dé','60EB':'bèi','60EC':'qiè','60ED':'cán','60EE':'dàn','60EF':'guàn','60F0':'duò','60F1':'nǎo','60F2':'yùn','60F3':'xiǎng','60F4':'zhuì','60F5':'dié','60F6':'huáng','60F7':'chǔn','60F8':'qióng','60F9':'rě','60FA':'xīng','60FB':'cè','60FC':'biǎn','60FD':'hūn','60FE':'zōng','60FF':'tí','610A':'bì','610B':'xuān','610C':'huàn','610D':'mǐn','610E':'bì','610F':'yì','611A':'yú','611B':'ài','611C':'qiè','611D':'yǎn','611E':'nuò','611F':'gǎn','612A':'yún','612B':'sù','612C':'sù','612D':'qí','612E':'yáo','612F':'sǒng','613A':'cǎo','613B':'sùn','613C':'shèn','613D':'bó','613E':'kài','613F':'yuàn','614A':'qiàn/qiè','614B':'tài','614C':'huāng/huang','614D':'yùn','614E':'shèn','614F':'mǐng','615A':'cán','615B':'cuí','615C':'mǐn','615D':'nì','615E':'zhāng','615F':'tòng','616A':'òu/ōu','616B':'sǒng','616C':'jǐn','616D':'yìn','616E':'lǜ','616F':'shāng','617A':'lǘ','617B':'juàn','617C':'qī','617D':'qī','617E':'yù','617F':'píng','618A':'bèi','618B':'biē','618C':'chún','618D':'jiāo','618E':'zēng','618F':'chì','619A':'dàn','619B':'tán','619C':'duò','619D':'duì','619E':'duì','619F':'sù','61A0':'juè','61A1':'cè','61A2':'xiāo','61A3':'fán','61A4':'fèn','61A5':'láo','61A6':'lào','61A7':'chōng','61A8':'hān','61A9':'qì','61AA':'xián','61AB':'mǐn','61AC':'jǐng','61AD':'liǎo','61AE':'wǔ','61AF':'cǎn','61B0':'jué','61B1':'chòu','61B2':'xiàn','61B3':'tǎn','61B4':'shéng','61B5':'pī','61B6':'yì','61B7':'chù','61B8':'xiān','61B9':'náo','61BA':'dàn','61BB':'tǎn','61BC':'jǐng','61BD':'sōng','61BE':'hàn','61BF':'jiāo','61C0':'wèi','61C1':'huán','61C2':'dǒng','61C3':'qín','61C4':'qín','61C5':'qú','61C6':'cǎo','61C7':'kěn','61C8':'xiè','61C9':'yìng/yīng','61CA':'ào','61CB':'mào','61CC':'yì','61CD':'lǐn','61CE':'sè','61CF':'jùn','61D0':'huái','61D1':'mèn','61D2':'lǎn','61D3':'ài','61D4':'lǐn','61D5':'yān','61D6':'guā','61D7':'xià','61D8':'chì','61D9':'yǔ','61DA':'yìn','61DB':'dāi','61DC':'měng','61DD':'ài','61DE':'měng','61DF':'duì','61E0':'qí','61E1':'mǒ','61E2':'lán','61E3':'mèn','61E4':'chóu','61E5':'zhì','61E6':'nuò','61E7':'nuò','61E8':'yān/yàn','61E9':'yǎng','61EA':'bó','61EB':'zhí','61EC':'xìng','61ED':'kuàng','61EE':'yōu','61EF':'fú','61F0':'liú','61F1':'miè','61F2':'chéng','61F3':'huì','61F4':'chàn','61F5':'měng','61F6':'lǎn','61F7':'huái','61F8':'xuán','61F9':'ràng','61FA':'chàn','61FB':'jì','61FC':'jù','61FD':'huān','61FE':'shè/zhé','61FF':'yì','620A':'wù','620B':'jiān','620C':'xū/qu','620D':'shù','620E':'róng','620F':'xì','621A':'qī','621B':'jiá','621C':'dié','621D':'cái','621E':'jiá','621F':'jǐ','622A':'jié','622B':'yù','622C':'jiǎn','622D':'yǎn','622E':'lù','622F':'xì/hū','623A':'shì','623B':'lì','623C':'mǎo','623D':'hù','623E':'lì','623F':'fáng','624A':'yǎn','624B':'shǒu','624C':'shǒu','624D':'cái','624E':'zhā/zā/zhá','624F':'qiú','625A':'diāo','625B':'káng/gāng','625C':'yū','625D':'kū','625E':'hàn','625F':'shēn','626A':'mén','626B':'sǎo/sào','626C':'yáng','626D':'niǔ','626E':'bàn','626F':'chě','627A':'zhǐ','627B':'zì','627C':'è','627D':'dùn','627E':'zhǎo','627F':'chéng','628A':'bǎ/bà','628B':'qìn','628C':'zhěn','628D':'zhěng','628E':'yǔn','628F':'wán','629A':'fǔ','629B':'pāo','629C':'bá','629D':'ǎo','629E':'zé/zhái','629F':'tuán','62A0':'kōu','62A1':'lún/lūn','62A2':'qiǎng','62A3':'jūn/yún','62A4':'hù','62A5':'bào','62A6':'bǐng','62A7':'zhǐ','62A8':'pēng','62A9':'tān','62AA':'pū','62AB':'pī','62AC':'tái','62AD':'yǎo','62AE':'zhěn','62AF':'zhā','62B0':'yǎng','62B1':'bào','62B2':'hē','62B3':'nǐ','62B4':'yì','62B5':'dǐ','62B6':'chì','62B7':'pī','62B8':'zā','62B9':'mǒ/mā/mò','62BA':'mǒ','62BB':'chēn','62BC':'yā','62BD':'chōu','62BE':'qū','62BF':'mǐn','62C0':'chù','62C1':'jiā','62C2':'fú','62C3':'zhǎ','62C4':'zhǔ','62C5':'dàn/dān','62C6':'chāi','62C7':'mǔ','62C8':'niān','62C9':'lā/lá/lǎ','62CA':'fǔ','62CB':'pāo','62CC':'bàn','62CD':'pāi','62CE':'līn','62CF':'ná','62D0':'guǎi','62D1':'qián','62D2':'jù','62D3':'tuò/tà','62D4':'bá','62D5':'tuō','62D6':'tuō','62D7':'ào/niù','62D8':'jū','62D9':'zhuō','62DA':'pàn','62DB':'zhāo','62DC':'bài','62DD':'bài','62DE':'dǐ','62DF':'nǐ','62E0':'jù/jū','62E1':'kuò','62E2':'lǒng','62E3':'jiǎn','62E4':'qiá','62E5':'yōng','62E6':'lán','62E7':'nǐng/níng','62E8':'bō','62E9':'zé/zhái','62EA':'qiān','62EB':'hén','62EC':'kuò','62ED':'shì','62EE':'jié','62EF':'zhěng','62F0':'nǐn','62F1':'gǒng','62F2':'gǒng','62F3':'quán','62F4':'shuān','62F5':'tún','62F6':'zǎn/zā','62F7':'kǎo','62F8':'chǐ','62F9':'xié','62FA':'cè','62FB':'huī','62FC':'pīn','62FD':'zhuài','62FE':'shí','62FF':'ná','630A':'nòng/lòng','630B':'zhèn','630C':'gé','630D':'jiào','630E':'kuà','630F':'dòng','631A':'zhì','631B':'luán','631C':'yà','631D':'zhuā/wō','631E':'tà','631F':'xié','632A':'nuó','632B':'cuò','632C':'bó','632D':'gěng','632E':'tǐ','632F':'zhèn','633A':'tǐng','633B':'shān','633C':'nuò','633D':'wǎn','633E':'xié','633F':'chā','634A':'póu','634B':'lǚ/luō','634C':'bā','634D':'hàn','634E':'shāo/shào','634F':'niē','635A':'zhāi','635B':'lǚ','635C':'sōu','635D':'tuō','635E':'lāo','635F':'sǔn','636A':'mín','636B':'mén','636C':'fǔ','636D':'bǎi','636E':'jù/jū','636F':'dáo','637A':'nà','637B':'niǎn','637C':'nuó','637D':'zú','637E':'wò','637F':'xī/qī','638A':'póu/pǒu','638B':'dǐ','638C':'zhǎng','638D':'gǔn','638E':'jǐ','638F':'tāo','639A':'liǎng','639B':'guà','639C':'yǐ','639D':'huò','639E':'shàn','639F':'dìng','63A0':'lüè','63A1':'cǎi','63A2':'tàn','63A3':'chè','63A4':'bīng','63A5':'jiē','63A6':'tī','63A7':'kòng','63A8':'tuī','63A9':'yǎn','63AA':'cuò','63AB':'zōu','63AC':'jū','63AD':'tiàn','63AE':'qián','63AF':'kèn','63B0':'bāi','63B1':'shǒu/pá','63B2':'jiē','63B3':'lǔ','63B4':'guāi','63B5':'mìng','63B6':'gēng/jié','63B7':'zhì','63B8':'dǎn','63B9':'mēng/méng','63BA':'chān/shǎn','63BB':'sāo','63BC':'guàn','63BD':'pèng','63BE':'yuàn','63BF':'nuò','63C0':'jiǎn','63C1':'zhēng','63C2':'jiū','63C3':'jiān','63C4':'yú','63C5':'yán','63C6':'kuí','63C7':'nǎn','63C8':'hōng','63C9':'róu','63CA':'pì','63CB':'wēi','63CC':'sāi','63CD':'zòu','63CE':'xuān','63CF':'miáo','63D0':'tí/dī','63D1':'niē','63D2':'chā','63D3':'shì','63D4':'zǒng','63D5':'zhèn','63D6':'yī','63D7':'shǔn','63D8':'héng','63D9':'biàn','63DA':'yáng','63DB':'huàn','63DC':'yǎn','63DD':'zǎn','63DE':'ǎn','63DF':'xū/jū','63E0':'yà','63E1':'wò','63E2':'kè','63E3':'chuǎi/chuāi/chuài','63E4':'jí/jié','63E5':'tì','63E6':'lá','63E7':'là','63E8':'chéng','63E9':'kāi','63EA':'jiū','63EB':'jiū','63EC':'tú','63ED':'jiē','63EE':'huī','63EF':'gēng','63F0':'chòng','63F1':'shuò','63F2':'shé/dié','63F3':'xiē','63F4':'yuán','63F5':'qián','63F6':'yé','63F7':'chā','63F8':'zhā','63F9':'bēi','63FA':'yáo','63FB':'wēi','63FC':'bèng','63FD':'lǎn','63FE':'wèn','63FF':'qìn','640A':'chōu','640B':'chuāi','640C':'zhǎn','640D':'sǔn','640E':'sūn','640F':'bó','641A':'xié','641B':'jiān','641C':'sōu','641D':'qiǔ','641E':'gǎo','641F':'xiǎn','642A':'táng','642B':'pán','642C':'bān','642D':'dā','642E':'lì','642F':'tāo','643A':'xié','643B':'nuò','643C':'quán','643D':'chá','643E':'zhà','643F':'gé','644A':'tān','644B':'shā','644C':'chǎn','644D':'suō','644E':'liáo','644F':'chōng','645A':'chēng','645B':'chī','645C':'guàn','645D':'lù','645E':'luò','645F':'lǒu/lōu','646A':'jiāng','646B':'guī','646C':'yìng','646D':'zhí','646E':'áo','646F':'zhì','647A':'zhé','647B':'chān/shǎn','647C':'kēng','647D':'biāo/biào','647E':'jiàng','647F':'yīn','648A':'xiàn','648B':'ruán','648C':'kuì','648D':'zǎn','648E':'yì','648F':'xián','649A':'niǎn','649B':'lǐn','649C':'zhěng','649D':'huī','649E':'zhuàng','649F':'jiǎo/jiǎ','64A0':'jǐ','64A1':'cāo','64A2':'dǎn','64A3':'dǎn/shǎn/shàn','64A4':'chè','64A5':'bō','64A6':'chě','64A7':'jué','64A8':'xiāo','64A9':'liáo/liāo','64AA':'bèn','64AB':'fǔ','64AC':'qiào','64AD':'bō','64AE':'cuō/zuǒ','64AF':'zhuó','64B0':'zhuàn','64B1':'tuǒ','64B2':'pū','64B3':'qìn','64B4':'dūn','64B5':'niǎn','64B6':'huá','64B7':'xié','64B8':'lū','64B9':'jiǎo/jiǎ','64BA':'cuān','64BB':'tà','64BC':'hàn','64BD':'qiào','64BE':'zhuā/wō','64BF':'jiǎn','64C0':'gǎn','64C1':'yǒng/yōng','64C2':'léi/lèi','64C3':'kuǒ','64C4':'lǔ','64C5':'shàn','64C6':'zhuó','64C7':'zé/zhái','64C8':'pū','64C9':'chuò','64CA':'jí/jī','64CB':'dǎng/dàng','64CC':'sè','64CD':'cāo','64CE':'qíng','64CF':'jìng','64D0':'huàn','64D1':'jiē','64D2':'qín','64D3':'kuǎi','64D4':'dān/dǎn/dàn','64D5':'xié','64D6':'gě','64D7':'pǐ','64D8':'bò','64D9':'ào','64DA':'jù/jū','64DB':'yè','64DC':'è','64DD':'mēng','64DE':'sǒu/sòu','64DF':'mí','64E0':'jǐ','64E1':'tái','64E2':'zhuó','64E3':'dǎo','64E4':'xǐng','64E5':'lǎn','64E6':'cā','64E7':'jǔ','64E8':'yé','64E9':'rǔ','64EA':'yè','64EB':'yè','64EC':'nǐ','64ED':'huò','64EE':'jí','64EF':'bìn','64F0':'nǐng/níng','64F1':'gē/gé','64F2':'zhì','64F3':'jié','64F4':'kuò','64F5':'mó/mā','64F6':'jiàn','64F7':'xié','64F8':'liè','64F9':'tān','64FA':'bǎi','64FB':'sǒu/sòu','64FC':'lū','64FD':'lüè','64FE':'rǎo','64FF':'zhí','650A':'lüè','650B':'là','650C':'hàn','650D':'yíng','650E':'lú','650F':'lǒng','651A':'wěng/yíng','651B':'cuān','651C':'xié','651D':'shè','651E':'luō','651F':'jùn','652A':'jiǎo/gǎo/jiǎ','652B':'jué','652C':'lǎn','652D':'lì','652E':'nǎng','652F':'zhī','653A':'gǎi','653B':'gōng','653C':'gān','653D':'bān','653E':'fàng','653F':'zhèng','654A':'chù','654B':'gé','654C':'dí','654D':'xù','654E':'jiào','654F':'mǐn','655A':'duó','655B':'liǎn','655C':'niè','655D':'bì','655E':'chǎng','655F':'diàn','656A':'duó','656B':'jiǎo','656C':'jìng','656D':'yáng','656E':'xiá','656F':'hūn/mǐn','657A':'qū','657B':'xiòng','657C':'xǐ','657D':'jiǎo','657E':'shàn','657F':'qiáo','658A':'qí/jì/qì','658B':'zhāi','658C':'bīn','658D':'jué','658E':'zhāi','658F':'lǎng','659A':'jiǎ','659B':'hú','659C':'xié','659D':'jiǎ','659E':'yǔ','659F':'zhēn','65A0':'jiào','65A1':'wò','65A2':'tiǎo/tòu','65A3':'dòu','65A4':'jīn/jin','65A5':'chì','65A6':'yín','65A7':'fǔ','65A8':'qiāng','65A9':'zhǎn','65AA':'qú/jū','65AB':'zhuó','65AC':'zhǎn','65AD':'duàn','65AE':'zhuó','65AF':'sī','65B0':'xīn','65B1':'zhuó','65B2':'zhuó','65B3':'qín','65B4':'lín','65B5':'zhuó','65B6':'chù','65B7':'duàn','65B8':'zhǔ','65B9':'fāng','65BA':'xiè','65BB':'háng','65BC':'wū/yū','65BD':'shī','65BE':'pèi','65BF':'yóu','65C0':'*','65C1':'páng','65C2':'qí','65C3':'zhān','65C4':'máo','65C5':'lǚ','65C6':'pèi','65C7':'pī','65C8':'liú','65C9':'fū','65CA':'fǎng','65CB':'xuán/xuàn','65CC':'jīng','65CD':'jīng','65CE':'nǐ','65CF':'zú','65D0':'zhào','65D1':'yǐ','65D2':'liú','65D3':'shāo','65D4':'jiàn','65D5':'*','65D6':'yǐ','65D7':'qí','65D8':'zhì','65D9':'fān','65DA':'piāo','65DB':'fān','65DC':'zhān','65DD':'guài','65DE':'suì','65DF':'yú','65E0':'wú','65E1':'jì','65E2':'jì','65E3':'jì','65E4':'huò','65E5':'rì','65E6':'dàn','65E7':'jiù','65E8':'zhǐ','65E9':'zǎo','65EA':'xié','65EB':'tiāo','65EC':'xún','65ED':'xù','65EE':'gā','65EF':'lá','65F0':'gàn','65F1':'hàn','65F2':'tái','65F3':'dì','65F4':'xū','65F5':'chǎn','65F6':'shí','65F7':'kuàng','65F8':'yáng','65F9':'shí','65FA':'wàng','65FB':'mín','65FC':'mín','65FD':'tūn','65FE':'chūn','65FF':'wù','660A':'hào','660B':'guì','660C':'chāng','660D':'xuān','660E':'míng','660F':'hūn','661A':'shèn','661B':'jù','661C':'yáng','661D':'zǎn','661E':'bǐng','661F':'xīng','662A':'biàn','662B':'xù','662C':'hūn','662D':'zhāo','662E':'zòng','662F':'shì','663A':'bǐng','663B':'áng','663C':'zhòu','663D':'lóng','663E':'xiǎn','663F':'kuàng','664A':'zhǐ','664B':'jìn','664C':'shǎng','664D':'tóng','664E':'hǒng','664F':'yàn','665A':'wǎn','665B':'xiàn','665C':'kūn','665D':'zhòu','665E':'xī','665F':'shèng','666A':'tiǎn','666B':'zhuō','666C':'zuì','666D':'zhǒu','666E':'pǔ','666F':'jǐng','667A':'zhì','667B':'ǎn','667C':'wǎn','667D':'lín','667E':'liàng','667F':'chāng','668A':'fǔ','668B':'mǐn/mín','668C':'kuí','668D':'hè','668E':'yìng','668F':'dǔ','669A':'yáo','669B':'suǒ','669C':'pǔ','669D':'míng','669E':'jiǎo','669F':'kǎi','66A0':'gǎo','66A1':'wěng','66A2':'chàng','66A3':'qì','66A4':'hào','66A5':'yàn','66A6':'lì','66A7':'ài','66A8':'jì','66A9':'guì','66AA':'měn','66AB':'zàn','66AC':'xiè','66AD':'hào','66AE':'mù','66AF':'mò','66B0':'cōng','66B1':'nì','66B2':'zhāng','66B3':'huì','66B4':'bào/pù','66B5':'hàn','66B6':'xuán','66B7':'chuán','66B8':'liǎo','66B9':'xiān','66BA':'dàn','66BB':'jǐng','66BC':'piē','66BD':'lín','66BE':'tūn','66BF':'xǐ','66C0':'yì','66C1':'jì','66C2':'kuàng','66C3':'dài','66C4':'yè','66C5':'yè','66C6':'lì','66C7':'tán','66C8':'tóng','66C9':'xiǎo','66CA':'fèi','66CB':'qǐn','66CC':'zhào','66CD':'hào','66CE':'yì','66CF':'xiàng','66D0':'xīng','66D1':'sēn','66D2':'jiǎo','66D3':'bào','66D4':'jìng','66D5':'yàn','66D6':'ài','66D7':'yè','66D8':'rú','66D9':'shǔ','66DA':'méng','66DB':'xūn','66DC':'yào','66DD':'pù','66DE':'lì','66DF':'chén','66E0':'kuàng','66E1':'dié','66E2':'liǎo','66E3':'yàn','66E4':'huò','66E5':'lú','66E6':'xī','66E7':'róng','66E8':'lóng','66E9':'nǎng','66EA':'luǒ','66EB':'luán','66EC':'shài','66ED':'tǎng','66EE':'yǎn','66EF':'chú','66F0':'yuē','66F1':'yuē','66F2':'qǔ/qū','66F3':'yè','66F4':'gèng/gēng','66F5':'zhuài','66F6':'hū','66F7':'hé','66F8':'shū','66F9':'cáo','66FA':'cáo','66FB':'shēng','66FC':'màn','66FD':'céng/zēng','66FE':'céng/zēng','66FF':'tì','670A':'ruǎn','670B':'péng','670C':'bān','670D':'fú/fù','670E':'líng','670F':'fěi','671A':'huāng','671B':'wàng','671C':'tūn','671D':'zhāo/cháo','671E':'jī/qī','671F':'qī','672A':'wèi','672B':'mò','672C':'běn','672D':'zhá','672E':'zhú','672F':'zhú/shù','673A':'jī','673B':'jiū','673C':'bǐ','673D':'xiǔ','673E':'tíng','673F':'cì','674A':'xún','674B':'fán','674C':'wù','674D':'zǐ','674E':'lǐ','674F':'xìng','675A':'gǔ','675B':'gōng','675C':'dù','675D':'yí','675E':'qǐ','675F':'shù','676A':'miǎo','676B':'sì','676C':'yuán','676D':'háng','676E':'fèi','676F':'bēi','677A':'xín','677B':'chǒu/niǔ','677C':'zhù','677D':'chǒu','677E':'sōng','677F':'bǎn','678A':'àng','678B':'fāng','678C':'fén','678D':'yì','678E':'fú','678F':'nán','679A':'méi','679B':'zhào','679C':'guǒ','679D':'zhī','679E':'zōng/cōng','679F':'yùn','67A0':'zuì','67A1':'dǒu','67A2':'shū','67A3':'zǎo','67A4':'dì','67A5':'lì','67A6':'lú','67A7':'jiǎn','67A8':'chéng','67A9':'sōng','67AA':'qiāng','67AB':'fēng','67AC':'nán','67AD':'xiāo','67AE':'xiān','67AF':'kū','67B0':'píng','67B1':'tái','67B2':'xǐ','67B3':'zhǐ','67B4':'guǎi','67B5':'xiāo','67B6':'jià','67B7':'jiā','67B8':'gǒu/gōu/jǔ','67B9':'bāo/fú','67BA':'mò','67BB':'yì','67BC':'yè','67BD':'sāng','67BE':'shì','67BF':'niè','67C0':'bǐ','67C1':'tuó','67C2':'yí','67C3':'líng','67C4':'bǐng','67C5':'nǐ','67C6':'lā','67C7':'hé','67C8':'bàn','67C9':'fán/biān','67CA':'zhōng','67CB':'dài','67CC':'cí','67CD':'yāng','67CE':'fū','67CF':'bó/bǎi','67D0':'mǒu','67D1':'gān','67D2':'qī','67D3':'rǎn','67D4':'róu','67D5':'mào','67D6':'zhāo','67D7':'sōng','67D8':'zhè','67D9':'xiá','67DA':'yòu/yóu','67DB':'shēn','67DC':'jǔ/guì','67DD':'tuò','67DE':'zuò/zhà','67DF':'nán','67E0':'níng','67E1':'yǒng','67E2':'dǐ','67E3':'zhí','67E4':'zhā','67E5':'chá/zhā','67E6':'dàn','67E7':'gū','67E8':'bù','67E9':'jiù','67EA':'āo','67EB':'fú/bì','67EC':'jiǎn','67ED':'bō','67EE':'duò','67EF':'kē','67F0':'nài','67F1':'zhù','67F2':'bì','67F3':'liǔ','67F4':'chái','67F5':'zhà','67F6':'sì','67F7':'zhù','67F8':'pēi','67F9':'shì','67FA':'guǎi','67FB':'chá/zhā','67FC':'yáo','67FD':'chēng','67FE':'jiù','67FF':'shì','680A':'lóng','680B':'dòng','680C':'lú','680D':'*','680E':'lì/yuè','680F':'lán','681A':'zhèn','681B':'lì','681C':'sù','681D':'guā','681E':'kān','681F':'bīng/bēn','682A':'zhū','682B':'jiàn','682C':'zuì','682D':'ér','682E':'ěr','682F':'yù','683A':'zhǐ','683B':'chì','683C':'gé/gē','683D':'zāi','683E':'luán','683F':'fá','684A':'juàn','684B':'yí','684C':'zhuō','684D':'kū','684E':'zhì','684F':'qióng','685A':'zǎn','685B':'*','685C':'yīng','685D':'jié','685E':'liǔ','685F':'zhàn','686A':'xún','686B':'suō','686C':'suō','686D':'zhèn','686E':'bēi','686F':'tīng','687A':'liǔ','687B':'fēng','687C':'qī','687D':'wěn','687E':'jūn','687F':'gǎn','688A':'dì','688B':'xuān','688C':'tú','688D':'zào','688E':'āo','688F':'gù','689A':'wǎn','689B':'nuó','689C':'jiá','689D':'tiáo','689E':'jì','689F':'xiāo','68A0':'lǚ','68A1':'kuǎn','68A2':'shāo','68A3':'cén','68A4':'fēn','68A5':'sōng','68A6':'mèng','68A7':'wú','68A8':'lí','68A9':'lí','68AA':'dòu','68AB':'cēn','68AC':'yǐng','68AD':'suō','68AE':'jú','68AF':'tī','68B0':'xiè','68B1':'kǔn','68B2':'zhuó','68B3':'shū','68B4':'chān','68B5':'fàn','68B6':'wěi','68B7':'jìng','68B8':'lí','68B9':'bīng/bīn','68BA':'xià','68BB':'fó','68BC':'táo','68BD':'zhì','68BE':'lái','68BF':'lián','68C0':'jiǎn','68C1':'zhuō','68C2':'líng','68C3':'lí','68C4':'qì','68C5':'bǐng','68C6':'lún','68C7':'cōng','68C8':'qiàn','68C9':'mián','68CA':'qí','68CB':'qí','68CC':'cǎi','68CD':'gùn','68CE':'chán','68CF':'dé','68D0':'fěi','68D1':'pái','68D2':'bàng','68D3':'pǒu/bàng','68D4':'hūn','68D5':'zōng','68D6':'chéng','68D7':'zǎo','68D8':'jí','68D9':'lì','68DA':'péng','68DB':'yù','68DC':'yù','68DD':'gù','68DE':'hún','68DF':'dòng','68E0':'táng','68E1':'gāng','68E2':'wǎng','68E3':'dì','68E4':'xí','68E5':'fán','68E6':'chēng','68E7':'zhàn','68E8':'qǐ','68E9':'yuān','68EA':'yǎn','68EB':'yù','68EC':'quān','68ED':'yì','68EE':'sēn','68EF':'rěn','68F0':'chuí','68F1':'léng/líng','68F2':'qī/xī','68F3':'zhuó','68F4':'fú','68F5':'kē','68F6':'lái','68F7':'zōu','68F8':'zōu','68F9':'zhào','68FA':'guān','68FB':'fēn','68FC':'fén','68FD':'chēn','68FE':'qióng','68FF':'niè','690A':'zuó','690B':'liáng','690C':'qiāng','690D':'zhí','690E':'zhuī','690F':'yā','691A':'mēn','691B':'huā','691C':'jiǎn','691D':'guī','691E':'xì','691F':'dú','692A':'pèng','692B':'shàn','692C':'yí','692D':'tuǒ','692E':'sēn','692F':'duó','693A':'xí','693B':'yàn','693C':'yǎn','693D':'chuán','693E':'zhàn','693F':'chūn','694A':'yáng','694B':'là','694C':'yán','694D':'běn','694E':'hún','694F':'kuí','695A':'chǔ','695B':'hù/kǔ','695C':'hú','695D':'liàn','695E':'léng','695F':'tíng','696A':'dié','696B':'jí','696C':'jié','696D':'yè','696E':'chǔ','696F':'shǔn/dùn','697A':'róu','697B':'héng','697C':'lóu','697D':'lè/yuè','697E':'quán','697F':'guì','698A':'shén','698B':'chu','698C':'bī','698D':'xiè','698E':'jiǎ','698F':'yì','699A':'yǎo','699B':'zhēn','699C':'bǎng','699D':'shā','699E':'yuán','699F':'zǐ','69A0':'míng','69A1':'sù','69A2':'jià','69A3':'yáo','69A4':'jié','69A5':'huǎng','69A6':'gàn/hán','69A7':'fěi','69A8':'zhà','69A9':'qián','69AA':'mà','69AB':'sǔn','69AC':'yuán','69AD':'xiè','69AE':'róng','69AF':'shí','69B0':'zhī','69B1':'cuī','69B2':'yún','69B3':'tíng','69B4':'liú','69B5':'róng','69B6':'táng','69B7':'què','69B8':'zhāi','69B9':'sī','69BA':'shèng','69BB':'tà','69BC':'kè/ké','69BD':'xī','69BE':'gù','69BF':'qī','69C0':'kǎo','69C1':'gǎo','69C2':'sūn','69C3':'pán','69C4':'tāo','69C5':'gé','69C6':'xún','69C7':'diān/zhěn','69C8':'nòu','69C9':'jí','69CA':'shuò','69CB':'gòu','69CC':'chuí','69CD':'qiāng','69CE':'chá','69CF':'qiǎn','69D0':'huái','69D1':'méi','69D2':'xù','69D3':'gàng','69D4':'gāo','69D5':'zhuó','69D6':'tuó','69D7':'qiáo','69D8':'yàng','69D9':'diān','69DA':'jiǎ','69DB':'jiàn/kǎn','69DC':'zuì','69DD':'dǎo','69DE':'lóng','69DF':'bīn/bīng','69E0':'zhū','69E1':'sāng','69E2':'xí','69E3':'qǐ','69E4':'lián','69E5':'huì','69E6':'yóng','69E7':'qiàn','69E8':'guǒ','69E9':'gài','69EA':'gài','69EB':'tuán','69EC':'huà','69ED':'qī','69EE':'sēn','69EF':'cuī','69F0':'bèng','69F1':'yǒu','69F2':'hú','69F3':'jiǎng','69F4':'hù','69F5':'huàn','69F6':'kuì','69F7':'yì','69F8':'yì','69F9':'gāo','69FA':'kāng','69FB':'guī','69FC':'guī','69FD':'cáo','69FE':'mán/màn','69FF':'jǐn','6A00':'dì','6A01':'zhuāng','6A02':'lè/yuè','6A03':'lǎng','6A04':'chén','6A05':'cōng/zōng','6A06':'lí','6A07':'xiū','6A08':'qíng','6A09':'shuǎng','6A0A':'fán','6A0B':'tōng','6A0C':'guàn','6A0D':'jī','6A0E':'suō','6A0F':'lěi','6A10':'lǔ','6A11':'liáng','6A12':'mì','6A13':'lóu','6A14':'cháo','6A15':'sù','6A16':'kē','6A17':'chū','6A18':'táng','6A19':'biāo','6A1A':'lù','6A1B':'jiū','6A1C':'shù','6A1D':'zhā','6A1E':'shū','6A1F':'zhāng','6A20':'mén','6A21':'mó/mú','6A22':'niǎo','6A23':'yàng','6A24':'tiáo','6A25':'péng','6A26':'zhù','6A27':'shā','6A28':'xī','6A29':'quán','6A2A':'héng/hèng','6A2B':'jiān','6A2C':'cōng','6A2D':'jī','6A2E':'yān','6A2F':'qiáng','6A30':'xuě','6A31':'yīng','6A32':'èr','6A33':'xín','6A34':'zhí','6A35':'qiáo','6A36':'zuī','6A37':'cóng','6A38':'pú/pò/pǔ','6A39':'shù','6A3A':'huà/huá','6A3B':'kuì','6A3C':'zhēn','6A3D':'zūn','6A3E':'yuè','6A3F':'zhǎn','6A40':'xī','6A41':'xún','6A42':'diàn','6A43':'fā','6A44':'gǎn','6A45':'mó/mú','6A46':'wǔ','6A47':'qiāo','6A48':'ráo','6A49':'lìn','6A4A':'liú','6A4B':'qiáo','6A4C':'xiàn','6A4D':'rùn','6A4E':'fán','6A4F':'zhǎn','6A50':'tuó','6A51':'lǎo','6A52':'yún','6A53':'shùn','6A54':'tuí','6A55':'chēng','6A56':'táng','6A57':'méng','6A58':'jú','6A59':'chéng','6A5A':'sù','6A5B':'jué','6A5C':'jué','6A5D':'tán','6A5E':'huì','6A5F':'jī','6A60':'nuǒ','6A61':'xiàng','6A62':'tuǒ','6A63':'nǐng','6A64':'ruǐ','6A65':'zhū','6A66':'tóng','6A67':'zēng','6A68':'fèn','6A69':'qióng','6A6A':'rǎn','6A6B':'héng/hèng','6A6C':'cén','6A6D':'gū/kū','6A6E':'liǔ','6A6F':'lào','6A70':'gāo','6A71':'chú','6A72':'xǐ','6A73':'shèng','6A74':'zǐ','6A75':'sǎn','6A76':'jí','6A77':'dōu','6A78':'jīng','6A79':'lǔ','6A7A':'jiàn','6A7B':'chu','6A7C':'yuán','6A7D':'tà','6A7E':'shū','6A7F':'jiāng','6A80':'tán','6A81':'lǐn','6A82':'nóng','6A83':'yǐn','6A84':'xí','6A85':'suì','6A86':'shān','6A87':'zuì','6A88':'xuán','6A89':'chēng','6A8A':'gàn','6A8B':'jù','6A8C':'zuì','6A8D':'yì','6A8E':'qín','6A8F':'pǔ','6A90':'yán','6A91':'léi','6A92':'fēng','6A93':'huǐ','6A94':'dǎng','6A95':'jì','6A96':'suì','6A97':'bò','6A98':'bì','6A99':'dǐng','6A9A':'chǔ','6A9B':'zhuā','6A9C':'guì/huì','6A9D':'jì','6A9E':'jiǎ','6A9F':'jiǎ','6AA0':'qíng','6AA1':'zhè','6AA2':'jiǎn','6AA3':'qiáng','6AA4':'dào','6AA5':'yǐ','6AA6':'biǎo','6AA7':'sōng','6AA8':'shē','6AA9':'lǐn','6AAA':'lì/yuè','6AAB':'chá','6AAC':'méng','6AAD':'yín','6AAE':'táo','6AAF':'tái','6AB0':'mián','6AB1':'qí','6AB2':'tuán','6AB3':'bīn/bīng','6AB4':'huò','6AB5':'jì','6AB6':'qiān','6AB7':'mí/nǐ','6AB8':'níng','6AB9':'yī','6ABA':'gǎo','6ABB':'jiàn/kǎn','6ABC':'yìn','6ABD':'ér','6ABE':'qǐng','6ABF':'yǎn','6AC0':'qí','6AC1':'mì','6AC2':'zhào','6AC3':'guì/jǔ','6AC4':'chūn','6AC5':'jī','6AC6':'kuí','6AC7':'pó','6AC8':'dèng','6AC9':'chú','6ACA':'gé','6ACB':'mián','6ACC':'yōu','6ACD':'zhì','6ACE':'guàng','6ACF':'qiān','6AD0':'lěi','6AD1':'léi','6AD2':'sà','6AD3':'lǔ','6AD4':'lì','6AD5':'cuán','6AD6':'lǘ','6AD7':'miè','6AD8':'huì','6AD9':'ōu','6ADA':'lǘ','6ADB':'zhì','6ADC':'gāo','6ADD':'dú','6ADE':'yuán','6ADF':'lì/yuè','6AE0':'fèi','6AE1':'zhù','6AE2':'sǒu','6AE3':'lián','6AE4':'jiàng','6AE5':'chú','6AE6':'qìng','6AE7':'zhū','6AE8':'lú','6AE9':'yán','6AEA':'lì','6AEB':'zhū','6AEC':'chèn','6AED':'jié','6AEE':'è','6AEF':'sū','6AF0':'huái','6AF1':'niè','6AF2':'yù','6AF3':'lóng','6AF4':'lài','6AF5':'jiáo','6AF6':'xiǎn','6AF7':'guī','6AF8':'jǔ','6AF9':'xiāo','6AFA':'líng','6AFB':'yīng','6AFC':'jiān','6AFD':'yǐn','6AFE':'yóu','6AFF':'yíng','6B00':'xiāng','6B01':'nóng','6B02':'bó','6B03':'chān','6B04':'lán','6B05':'jǔ','6B06':'shuāng','6B07':'shè','6B08':'wéi','6B09':'còng','6B0A':'quán','6B0B':'qú','6B0C':'cáng/zāng','6B0D':'jiù','6B0E':'yù','6B0F':'luó','6B10':'lì','6B11':'zàn','6B12':'luán','6B13':'dǎng','6B14':'jué','6B15':'yán','6B16':'lǎn','6B17':'lán','6B18':'zhǔ','6B19':'léi','6B1A':'lǐ/jī','6B1B':'bà/bǎ','6B1C':'náng','6B1D':'yù','6B1E':'líng','6B1F':'guāng','6B20':'qiàn/qian','6B21':'cì','6B22':'huān','6B23':'xīn','6B24':'yú','6B25':'yù','6B26':'qiān','6B27':'ōu','6B28':'xū','6B29':'chāo','6B2A':'chù','6B2B':'qì','6B2C':'kài','6B2D':'yì','6B2E':'jué','6B2F':'xí','6B30':'xū','6B31':'xià','6B32':'yù','6B33':'kuài','6B34':'láng','6B35':'kuǎn','6B36':'shuò','6B37':'xī','6B38':'ǎi/ễ/ế/ể/ề','6B39':'yī/qī','6B3A':'qī','6B3B':'hū','6B3C':'chǐ','6B3D':'qīn','6B3E':'kuǎn','6B3F':'kǎn','6B40':'kuǎn','6B41':'kǎn','6B42':'chuán','6B43':'shà','6B44':'guā','6B45':'yīn','6B46':'xīn','6B47':'xiē','6B48':'yú','6B49':'qiàn','6B4A':'xiāo','6B4B':'yí','6B4C':'gē','6B4D':'wū','6B4E':'tàn','6B4F':'jìn','6B50':'ōu','6B51':'hū','6B52':'tì','6B53':'huān','6B54':'xū','6B55':'pēn','6B56':'xī','6B57':'xiào','6B58':'hū','6B59':'shè/xī','6B5A':'shàn','6B5B':'liàn','6B5C':'chù','6B5D':'yì','6B5E':'kǎn','6B5F':'yú','6B60':'chuò','6B61':'huān','6B62':'zhǐ','6B63':'zhèng/zhēng','6B64':'cǐ','6B65':'bù','6B66':'wǔ','6B67':'qí','6B68':'bù','6B69':'bù','6B6A':'wāi','6B6B':'jù','6B6C':'qián','6B6D':'chí','6B6E':'sè','6B6F':'chǐ','6B70':'sè','6B71':'zhǒng','6B72':'suì','6B73':'suì','6B74':'lì','6B75':'cuò','6B76':'yú','6B77':'lì','6B78':'guī','6B79':'dǎi','6B7A':'dǎi','6B7B':'sǐ','6B7C':'jiān','6B7D':'zhé','6B7E':'mò','6B7F':'mò','6B80':'yǎo','6B81':'mò','6B82':'cú','6B83':'yāng','6B84':'tiǎn','6B85':'shēng','6B86':'dài','6B87':'shāng','6B88':'xū','6B89':'xùn','6B8A':'shū','6B8B':'cán','6B8C':'jué','6B8D':'piǎo','6B8E':'qià','6B8F':'qiú','6B90':'sù','6B91':'qíng','6B92':'yǔn','6B93':'liàn','6B94':'yì','6B95':'fǒu','6B96':'zhí/shi','6B97':'yè','6B98':'cán','6B99':'hūn','6B9A':'dān','6B9B':'jí','6B9C':'yè','6B9D':'zhēn','6B9E':'yǔn','6B9F':'wēn','6BA0':'chòu/xiù','6BA1':'bìn','6BA2':'tì','6BA3':'jìn','6BA4':'shāng','6BA5':'yín','6BA6':'diāo','6BA7':'cù','6BA8':'huì','6BA9':'cuàn','6BAA':'yì','6BAB':'dān/dàn','6BAC':'dù','6BAD':'jiāng','6BAE':'liàn','6BAF':'bìn','6BB0':'dú','6BB1':'jiān','6BB2':'jiān','6BB3':'shū','6BB4':'ōu','6BB5':'duàn','6BB6':'zhù','6BB7':'yīn/yān','6BB8':'qìng','6BB9':'yī','6BBA':'shā/shài','6BBB':'ké/qiào','6BBC':'ké/qiào','6BBD':'yáo','6BBE':'xùn','6BBF':'diàn','6BC0':'huǐ','6BC1':'huǐ','6BC2':'gǔ','6BC3':'què','6BC4':'jī','6BC5':'yì','6BC6':'ōu','6BC7':'huǐ','6BC8':'duàn','6BC9':'yī','6BCA':'xiāo','6BCB':'wú','6BCC':'guàn','6BCD':'mǔ','6BCE':'měi','6BCF':'měi','6BD0':'ǎi','6BD1':'zuǒ','6BD2':'dú','6BD3':'yù','6BD4':'bǐ','6BD5':'bì','6BD6':'bì','6BD7':'pí','6BD8':'pí','6BD9':'bì','6BDA':'chán','6BDB':'máo','6BDC':'háo','6BDD':'cǎi','6BDE':'pí','6BDF':'liě','6BE0':'jiā','6BE1':'zhān','6BE2':'sāi','6BE3':'mù','6BE4':'tuò','6BE5':'xún','6BE6':'èr','6BE7':'róng','6BE8':'xiǎn','6BE9':'jú','6BEA':'mú','6BEB':'háo','6BEC':'qiú','6BED':'dòu','6BEE':'shā','6BEF':'tǎn','6BF0':'péi','6BF1':'jū','6BF2':'duó','6BF3':'cuì','6BF4':'bī','6BF5':'sān','6BF6':'sān','6BF7':'mào','6BF8':'suī','6BF9':'shū','6BFA':'yū','6BFB':'tuò','6BFC':'hé','6BFD':'jiàn','6BFE':'tà','6BFF':'sān','6C00':'lǘ','6C01':'mú','6C02':'lí','6C03':'tóng','6C04':'rǒng','6C05':'chǎng','6C06':'pǔ','6C07':'lǔ','6C08':'zhān','6C09':'sào','6C0A':'zhān','6C0B':'méng','6C0C':'lǔ','6C0D':'qú','6C0E':'dié','6C0F':'shì','6C10':'dǐ/dī','6C11':'mín','6C12':'jué','6C13':'máng','6C14':'qì','6C15':'piē','6C16':'nǎi','6C17':'qì','6C18':'dāo','6C19':'xiān','6C1A':'chuān','6C1B':'fēn','6C1C':'rì','6C1D':'nèi/nǎi','6C1E':'bìn','6C1F':'fú','6C20':'shēn','6C21':'dōng','6C22':'qīng','6C23':'qì','6C24':'yīn','6C25':'xī','6C26':'hài','6C27':'yǎng','6C28':'ān','6C29':'yà','6C2A':'kè','6C2B':'qīng','6C2C':'yà','6C2D':'dōng','6C2E':'dàn','6C2F':'lǜ','6C30':'qíng','6C31':'yǎng','6C32':'yūn','6C33':'yūn','6C34':'shuǐ','6C35':'shuǐ','6C36':'zhěng','6C37':'bīng','6C38':'yǒng','6C39':'dàng','6C3A':'shuǐ','6C3B':'lè','6C3C':'nì','6C3D':'tǔn','6C3E':'fàn','6C3F':'guǐ','6C40':'tīng','6C41':'zhī','6C42':'qiú','6C43':'bīn','6C44':'zè','6C45':'miǎn','6C46':'cuān','6C47':'huì','6C48':'diāo','6C49':'hàn','6C4A':'chà','6C4B':'zhuó','6C4C':'chuàn','6C4D':'wán','6C4E':'fàn','6C4F':'dài','6C50':'xī','6C51':'tuō','6C52':'mǎng','6C53':'qiú','6C54':'qì','6C55':'shàn','6C56':'pài','6C57':'hàn/hán','6C58':'qiān','6C59':'wū','6C5A':'wū','6C5B':'xùn','6C5C':'sì','6C5D':'rǔ','6C5E':'gǒng','6C5F':'jiāng','6C60':'chí','6C61':'wū','6C62':'tǔ','6C63':'jiǔ','6C64':'tāng','6C65':'zhī','6C66':'chí','6C67':'qiān','6C68':'mì','6C69':'gǔ','6C6A':'wāng','6C6B':'qìng','6C6C':'jǐng','6C6D':'ruì','6C6E':'jūn','6C6F':'hóng','6C70':'tài','6C71':'quǎn','6C72':'jí','6C73':'biàn','6C74':'biàn','6C75':'gàn','6C76':'wèn','6C77':'zhōng','6C78':'fāng','6C79':'xiōng','6C7A':'jué','6C7B':'hǔ','6C7C':'niú/yóu','6C7D':'qì','6C7E':'fén','6C7F':'xù','6C80':'xù','6C81':'qìn','6C82':'yí','6C83':'wò','6C84':'yún','6C85':'yuán','6C86':'hàng','6C87':'yǎn','6C88':'shěn','6C89':'chén','6C8A':'dàn','6C8B':'yóu','6C8C':'dùn/zhuàn','6C8D':'hù','6C8E':'huò','6C8F':'qī','6C90':'mù','6C91':'róu','6C92':'méi/mò','6C93':'tà/dá/ta','6C94':'miǎn','6C95':'wù','6C96':'chōng','6C97':'tiān','6C98':'bǐ','6C99':'shā','6C9A':'zhǐ','6C9B':'pèi','6C9C':'pàn','6C9D':'zhuǐ','6C9E':'zā','6C9F':'gōu','6CA0':'liú','6CA1':'méi/mò','6CA2':'zé','6CA3':'fēng','6CA4':'òu/ōu','6CA5':'lì','6CA6':'lún','6CA7':'cāng','6CA8':'fēng','6CA9':'wéi','6CAA':'hù','6CAB':'mò','6CAC':'mèi','6CAD':'shù','6CAE':'jǔ/jù','6CAF':'zǎn','6CB0':'tuō','6CB1':'tuó','6CB2':'duò','6CB3':'hé','6CB4':'lì','6CB5':'mǐ','6CB6':'yí','6CB7':'fú','6CB8':'fèi','6CB9':'yóu','6CBA':'tián','6CBB':'zhì','6CBC':'zhǎo','6CBD':'gū','6CBE':'zhān','6CBF':'yán','6CC0':'sī','6CC1':'kuàng','6CC2':'jiǒng','6CC3':'jū','6CC4':'xiè','6CC5':'qiú','6CC6':'yì','6CC7':'jiā','6CC8':'zhōng','6CC9':'quán','6CCA':'bó/pō','6CCB':'huì','6CCC':'mì/bì','6CCD':'bēn','6CCE':'zhuó','6CCF':'chù','6CD0':'lè','6CD1':'yǒu','6CD2':'gū','6CD3':'hóng','6CD4':'gān','6CD5':'fǎ','6CD6':'mǎo','6CD7':'sì','6CD8':'hū','6CD9':'píng','6CDA':'cǐ','6CDB':'fàn','6CDC':'zhī','6CDD':'sù','6CDE':'nìng','6CDF':'chēng','6CE0':'líng','6CE1':'pào/pāo','6CE2':'bō','6CE3':'qì','6CE4':'sì','6CE5':'ní/nì','6CE6':'jú','6CE7':'yuè','6CE8':'zhù','6CE9':'shēng','6CEA':'lèi','6CEB':'xuàn','6CEC':'xuè','6CED':'fū','6CEE':'pàn','6CEF':'mǐn','6CF0':'tài','6CF1':'yāng','6CF2':'jǐ','6CF3':'yǒng','6CF4':'guàn','6CF5':'bèng','6CF6':'xué','6CF7':'lóng/shuāng','6CF8':'lú','6CF9':'dàn','6CFA':'luò','6CFB':'xiè','6CFC':'pō','6CFD':'zé','6CFE':'jīng','6CFF':'yín','6D00':'zhōu','6D01':'jié','6D02':'yì','6D03':'huī','6D04':'huí','6D05':'zuǐ','6D06':'chéng','6D07':'yīn','6D08':'wéi','6D09':'hòu','6D0A':'jiàn','6D0B':'yáng','6D0C':'liè','6D0D':'sì','6D0E':'jì','6D0F':'ér','6D10':'xíng','6D11':'fú/fù','6D12':'sǎ','6D13':'zì','6D14':'zhǐ','6D15':'yīn','6D16':'wú','6D17':'xǐ/xiǎn','6D18':'kǎo','6D19':'zhū','6D1A':'jiàng','6D1B':'luò','6D1C':'luò','6D1D':'àn','6D1E':'dòng','6D1F':'yí','6D20':'móu','6D21':'lěi','6D22':'yī','6D23':'mǐ','6D24':'quán','6D25':'jīn','6D26':'pò','6D27':'wěi','6D28':'xiáo','6D29':'xiè','6D2A':'hóng','6D2B':'xù','6D2C':'sù','6D2D':'kuāng','6D2E':'táo','6D2F':'qiè/jié','6D30':'jù','6D31':'ěr','6D32':'zhōu','6D33':'rù','6D34':'píng','6D35':'xún','6D36':'xiōng','6D37':'zhì','6D38':'guāng/huǎng','6D39':'huán','6D3A':'míng','6D3B':'huó','6D3C':'wā','6D3D':'qià','6D3E':'pài','6D3F':'wū','6D40':'qǔ','6D41':'liú','6D42':'yì','6D43':'jiā','6D44':'jìng','6D45':'qiǎn','6D46':'jiāng','6D47':'jiāo','6D48':'zhēn','6D49':'shī','6D4A':'zhuó','6D4B':'cè','6D4C':'fá','6D4D':'huì','6D4E':'jì/jǐ','6D4F':'liú','6D50':'chǎn','6D51':'hún','6D52':'hǔ/xǔ','6D53':'nóng','6D54':'xún','6D55':'jìn','6D56':'liè','6D57':'qiú','6D58':'wěi','6D59':'zhè','6D5A':'jùn/xùn','6D5B':'hán','6D5C':'bāng','6D5D':'máng','6D5E':'zhuó','6D5F':'yóu','6D60':'xī','6D61':'bó','6D62':'dòu','6D63':'huàn','6D64':'hóng','6D65':'yì','6D66':'pǔ','6D67':'yǐng','6D68':'lǎn','6D69':'hào','6D6A':'làng','6D6B':'hǎn','6D6C':'lǐ','6D6D':'gēng','6D6E':'fú','6D6F':'wú','6D70':'lì','6D71':'chún','6D72':'féng','6D73':'yì','6D74':'yù','6D75':'tóng','6D76':'láo','6D77':'hǎi','6D78':'jìn','6D79':'jiá/jiā','6D7A':'chōng','6D7B':'wěng','6D7C':'měi','6D7D':'suī','6D7E':'chēng','6D7F':'pèi','6D80':'xiàn','6D81':'shèn','6D82':'tú','6D83':'kùn','6D84':'pīn','6D85':'niè','6D86':'hàn','6D87':'jīng','6D88':'xiāo','6D89':'shè','6D8A':'niǎn','6D8B':'tū','6D8C':'yǒng','6D8D':'xiāo','6D8E':'xián','6D8F':'tǐng','6D90':'é','6D91':'sù','6D92':'tūn','6D93':'juān','6D94':'cén','6D95':'tì','6D96':'lì','6D97':'shuì','6D98':'sì','6D99':'lèi','6D9A':'shuì','6D9B':'tāo','6D9C':'dú','6D9D':'lào','6D9E':'lái','6D9F':'lián','6DA0':'wéi','6DA1':'wō/guō','6DA2':'yún','6DA3':'huàn','6DA4':'dí','6DA5':'hēng','6DA6':'rùn','6DA7':'jiàn','6DA8':'zhǎng/zhàng','6DA9':'sè','6DAA':'fú','6DAB':'guàn','6DAC':'xìng','6DAD':'shòu','6DAE':'shuàn','6DAF':'yá','6DB0':'chuò','6DB1':'zhàng','6DB2':'yè','6DB3':'kōng','6DB4':'wǎn','6DB5':'hán','6DB6':'tuō','6DB7':'dōng','6DB8':'hé','6DB9':'wō','6DBA':'jū','6DBB':'gàn','6DBC':'liáng','6DBD':'hūn','6DBE':'tà','6DBF':'zhuō','6DC0':'diàn','6DC1':'qiè','6DC2':'dé','6DC3':'juàn','6DC4':'zī','6DC5':'xī','6DC6':'xiáo','6DC7':'qí','6DC8':'gǔ','6DC9':'guǒ','6DCA':'hàn','6DCB':'lín/lìn','6DCC':'tǎng','6DCD':'zhōu','6DCE':'pěng','6DCF':'hào','6DD0':'chāng','6DD1':'shū','6DD2':'qī','6DD3':'fāng','6DD4':'chì','6DD5':'lù','6DD6':'nào','6DD7':'jú','6DD8':'táo','6DD9':'cóng','6DDA':'lèi','6DDB':'zhì','6DDC':'péng','6DDD':'féi','6DDE':'sōng','6DDF':'tiǎn','6DE0':'pì','6DE1':'dàn','6DE2':'yù','6DE3':'ní','6DE4':'yū','6DE5':'lù','6DE6':'gàn','6DE7':'mì','6DE8':'jìng','6DE9':'líng','6DEA':'lún','6DEB':'yín','6DEC':'cuì','6DED':'qú','6DEE':'huái','6DEF':'yù','6DF0':'niàn','6DF1':'shēn','6DF2':'piáo/hū','6DF3':'chún','6DF4':'hū','6DF5':'yuān','6DF6':'lái','6DF7':'hún/hùn','6DF8':'qīng','6DF9':'yān','6DFA':'qiǎn/jiān','6DFB':'tiān','6DFC':'miǎo','6DFD':'zhǐ','6DFE':'yǐn','6DFF':'mì','6E00':'bēn','6E01':'yuān','6E02':'wèn','6E03':'rè','6E04':'fēi','6E05':'qīng','6E06':'yuān','6E07':'kě','6E08':'jì','6E09':'shè','6E0A':'yuān','6E0B':'sè','6E0C':'lù','6E0D':'zì','6E0E':'dú','6E0F':'qí/yī','6E10':'jiàn/jiān','6E11':'miǎn/shéng','6E12':'pì','6E13':'xī','6E14':'yú','6E15':'yuān','6E16':'shěn','6E17':'shèn','6E18':'róu','6E19':'huàn','6E1A':'zhǔ','6E1B':'jiǎn','6E1C':'nuǎn','6E1D':'yú','6E1E':'qiú','6E1F':'tíng','6E20':'qú','6E21':'dù','6E22':'féng','6E23':'zhā','6E24':'bó','6E25':'wò','6E26':'wō/guō','6E27':'dì','6E28':'wēi','6E29':'wēn','6E2A':'rú','6E2B':'xiè','6E2C':'cè','6E2D':'wèi','6E2E':'gē','6E2F':'gǎng','6E30':'yǎn','6E31':'hóng','6E32':'xuàn','6E33':'mǐ','6E34':'kě','6E35':'máo','6E36':'yīng','6E37':'yǎn','6E38':'yóu','6E39':'hōng','6E3A':'miǎo','6E3B':'xǐng','6E3C':'měi','6E3D':'zāi','6E3E':'hún','6E3F':'nài','6E40':'kuí','6E41':'shí','6E42':'è','6E43':'pài','6E44':'méi','6E45':'liàn','6E46':'qì','6E47':'qì','6E48':'méi','6E49':'tián','6E4A':'còu','6E4B':'wéi','6E4C':'cān','6E4D':'tuān','6E4E':'miǎn','6E4F':'xū','6E50':'mò','6E51':'xǔ','6E52':'jí','6E53':'pén','6E54':'jiān','6E55':'jiǎn','6E56':'hú','6E57':'fèng','6E58':'xiāng','6E59':'yì','6E5A':'yìn','6E5B':'zhàn','6E5C':'shí','6E5D':'jiē','6E5E':'zhēn','6E5F':'huáng','6E60':'tàn','6E61':'yú','6E62':'bì','6E63':'mǐn','6E64':'shī','6E65':'tú','6E66':'shēng','6E67':'yǒng/chōng','6E68':'jú','6E69':'zhòng','6E6A':'nuǎn/tuàn','6E6B':'qiū','6E6C':'jiǎo','6E6D':'qiú','6E6E':'yīn/yān','6E6F':'tāng/shāng','6E70':'lóng','6E71':'huò','6E72':'yuán','6E73':'nǎn','6E74':'bàn','6E75':'yǒu','6E76':'quán','6E77':'chuí','6E78':'liàng','6E79':'chán','6E7A':'yán','6E7B':'chún','6E7C':'niè','6E7D':'zī','6E7E':'wān','6E7F':'shī','6E80':'mǎn','6E81':'yíng','6E82':'là','6E83':'kuì/huì','6E84':'fēng/féng','6E85':'jiàn','6E86':'xù','6E87':'lóu','6E88':'guī','6E89':'gài','6E8A':'bō/xiá','6E8B':'yíng','6E8C':'pō','6E8D':'jìn','6E8E':'guì','6E8F':'táng','6E90':'yuán','6E91':'suǒ','6E92':'yuán','6E93':'lián','6E94':'yǎo','6E95':'mèng','6E96':'zhǔn','6E97':'shéng','6E98':'kè','6E99':'tài','6E9A':'tǎ','6E9B':'wā','6E9C':'liū/liù','6E9D':'gōu','6E9E':'sāo','6E9F':'míng','6EA0':'zhà','6EA1':'shí','6EA2':'yì','6EA3':'lùn','6EA4':'mǎ','6EA5':'pǔ','6EA6':'wēi','6EA7':'lì','6EA8':'cái','6EA9':'wù','6EAA':'xī','6EAB':'wēn','6EAC':'qiāng','6EAD':'cè','6EAE':'shī','6EAF':'sù','6EB0':'yī','6EB1':'zhēn','6EB2':'sōu','6EB3':'yún','6EB4':'xiù','6EB5':'yīn','6EB6':'róng','6EB7':'hùn','6EB8':'sù','6EB9':'sù','6EBA':'nì','6EBB':'tà','6EBC':'shī','6EBD':'rù','6EBE':'wēi','6EBF':'pàn','6EC0':'chù','6EC1':'chú','6EC2':'pāng','6EC3':'wēng','6EC4':'cāng','6EC5':'miè','6EC6':'hé','6EC7':'diān','6EC8':'hào','6EC9':'huǎng','6ECA':'xì','6ECB':'zī','6ECC':'dí','6ECD':'zhì','6ECE':'yíng/xíng','6ECF':'fǔ','6ED0':'jié','6ED1':'huá','6ED2':'gē','6ED3':'zǐ','6ED4':'tāo','6ED5':'téng','6ED6':'suī','6ED7':'bì','6ED8':'jiào','6ED9':'huì','6EDA':'gǔn','6EDB':'yín','6EDC':'gāo','6EDD':'lóng/shuāng','6EDE':'zhì','6EDF':'yàn','6EE0':'shè','6EE1':'mǎn','6EE2':'yíng','6EE3':'chún','6EE4':'lǜ','6EE5':'làn','6EE6':'luán','6EE7':'xiào','6EE8':'bīn','6EE9':'tān','6EEA':'yù','6EEB':'xiǔ','6EEC':'hù','6EED':'bì','6EEE':'biāo','6EEF':'zhì','6EF0':'jiǎng','6EF1':'kòu','6EF2':'shèn','6EF3':'shāng','6EF4':'dī','6EF5':'mì','6EF6':'áo','6EF7':'lǔ','6EF8':'hǔ/xǔ','6EF9':'hū','6EFA':'yóu','6EFB':'chǎn','6EFC':'fàn','6EFD':'yōng','6EFE':'gǔn','6EFF':'mǎn','6F00':'qìng','6F01':'yú','6F02':'piāo/piǎo/piào','6F03':'jí','6F04':'yá','6F05':'jiǎo','6F06':'qī','6F07':'xǐ','6F08':'jì','6F09':'lù','6F0A':'lǚ/lóu','6F0B':'lóng','6F0C':'jǐn','6F0D':'guó','6F0E':'cóng','6F0F':'lòu','6F10':'zhí','6F11':'gài','6F12':'qiáng','6F13':'lí','6F14':'yǎn','6F15':'cáo','6F16':'jiào','6F17':'cōng','6F18':'chún','6F19':'tuán','6F1A':'òu/ōu','6F1B':'téng','6F1C':'yě','6F1D':'xí','6F1E':'mì','6F1F':'táng','6F20':'mò','6F21':'shāng','6F22':'hàn','6F23':'lián','6F24':'lǎn','6F25':'wā','6F26':'lí','6F27':'qián','6F28':'féng','6F29':'xuán','6F2A':'yī','6F2B':'màn','6F2C':'zì','6F2D':'mǎng','6F2E':'kāng','6F2F':'luò/tà','6F30':'pēng','6F31':'shù','6F32':'zhǎng/zhàng','6F33':'zhāng','6F34':'chóng','6F35':'xù','6F36':'huàn','6F37':'kuò/huǒ','6F38':'jiàn/jiān','6F39':'yān','6F3A':'chuǎng/shuǎng','6F3B':'liáo','6F3C':'cuǐ','6F3D':'tí','6F3E':'yàng','6F3F':'jiāng/jiàng','6F40':'cóng','6F41':'yǐng','6F42':'hóng','6F43':'xiū','6F44':'shù','6F45':'guàn','6F46':'yíng','6F47':'xiāo','6F48':'cóng/zóng','6F49':'kūn','6F4A':'xù','6F4B':'liàn','6F4C':'zhì','6F4D':'wéi','6F4E':'pì','6F4F':'yù','6F50':'jiào','6F51':'pō','6F52':'xiàng','6F53':'huì','6F54':'jié','6F55':'wǔ','6F56':'pá','6F57':'jí','6F58':'pān','6F59':'wéi','6F5A':'xiāo/sù','6F5B':'qián','6F5C':'qián','6F5D':'xī','6F5E':'lù','6F5F':'xì','6F60':'sùn','6F61':'dùn','6F62':'huáng','6F63':'mǐn','6F64':'rùn','6F65':'sù','6F66':'liǎo','6F67':'zhēn','6F68':'zhōng','6F69':'yì','6F6A':'dí','6F6B':'wān','6F6C':'dàn','6F6D':'tán','6F6E':'cháo','6F6F':'xún','6F70':'kuì/huì','6F71':'yē','6F72':'shào','6F73':'tú','6F74':'zhū','6F75':'sǎ','6F76':'hēi','6F77':'bǐ/bì','6F78':'shān','6F79':'chán','6F7A':'chán','6F7B':'shǔ','6F7C':'tóng','6F7D':'pū','6F7E':'lín','6F7F':'wéi','6F80':'sè','6F81':'sè','6F82':'chéng/dèng','6F83':'jiǒng','6F84':'chéng/dèng','6F85':'huà','6F86':'jiāo','6F87':'lào/láo','6F88':'chè','6F89':'gǎn','6F8A':'cūn','6F8B':'hèng','6F8C':'sī','6F8D':'shù','6F8E':'péng','6F8F':'hàn','6F90':'yún','6F91':'liù/liū','6F92':'hòng','6F93':'fú','6F94':'hào','6F95':'hé','6F96':'xiān','6F97':'jiàn','6F98':'shān','6F99':'xì','6F9A':'ào','6F9B':'lǔ','6F9C':'lán','6F9D':'nìng','6F9E':'yú','6F9F':'lǐn','6FA0':'mǐn/miǎn/shéng','6FA1':'zǎo','6FA2':'dāng','6FA3':'huǎn','6FA4':'zé','6FA5':'xiè','6FA6':'yù','6FA7':'lǐ','6FA8':'shì','6FA9':'xué','6FAA':'líng','6FAB':'màn','6FAC':'zī','6FAD':'yōng','6FAE':'kuài/huì','6FAF':'càn','6FB0':'liàn','6FB1':'diàn','6FB2':'yè','6FB3':'ào','6FB4':'huán','6FB5':'liàn','6FB6':'chán','6FB7':'màn','6FB8':'dǎn','6FB9':'dàn/tán','6FBA':'yì','6FBB':'suì','6FBC':'pì','6FBD':'jù','6FBE':'tà','6FBF':'qín','6FC0':'jī','6FC1':'zhuó','6FC2':'lián','6FC3':'nóng','6FC4':'guō','6FC5':'jìn','6FC6':'fén','6FC7':'sè','6FC8':'jí','6FC9':'suī','6FCA':'huì','6FCB':'chǔ','6FCC':'tà','6FCD':'sōng','6FCE':'dǐng','6FCF':'sè','6FD0':'zhǔ','6FD1':'lài','6FD2':'bīn','6FD3':'lián','6FD4':'mǐ','6FD5':'shī','6FD6':'shù','6FD7':'mì','6FD8':'nìng','6FD9':'yíng','6FDA':'yíng/xíng','6FDB':'méng','6FDC':'jìn','6FDD':'qí','6FDE':'bì','6FDF':'jì','6FE0':'háo','6FE1':'rú','6FE2':'zuǐ/cuì','6FE3':'wò','6FE4':'tāo/táo','6FE5':'yìn','6FE6':'yǐn','6FE7':'duì','6FE8':'cí','6FE9':'huò','6FEA':'jìng','6FEB':'làn','6FEC':'jùn','6FED':'ài','6FEE':'pú','6FEF':'zhuó','6FF0':'wéi','6FF1':'bīn','6FF2':'gǔ','6FF3':'qián','6FF4':'xíng','6FF5':'bīn','6FF6':'kuò','6FF7':'fèi','6FF8':'cāng','6FF9':'bīn','6FFA':'jiàn/jiān','6FFB':'duì/wéi','6FFC':'luò','6FFD':'luò','6FFE':'lǜ','6FFF':'lì','700A':'pán','700B':'shěn','700C':'biāo','700D':'chán','700E':'miè','700F':'liú','701A':'hàn','701B':'yíng','701C':'róng','701D':'lì','701E':'jìng','701F':'xiāo','702A':'fán','702B':'hú','702C':'lài','702D':'shū','702E':'líng','702F':'yíng','703A':'chán','703B':'dài','703C':'ráng/ràng','703D':'jiǎn','703E':'lán','703F':'fán','704A':'qián','704B':'fǎ','704C':'guàn','704D':'què','704E':'yàn','704F':'hào','705A':'jiǎo','705B':'chǎn','705C':'yíng','705D':'hào','705E':'bà','705F':'zhú','706A':'yù','706B':'huǒ','706C':'biāo','706D':'miè','706E':'guāng','706F':'dēng','707A':'xiè','707B':'chì','707C':'zhuó','707D':'zāi','707E':'zāi','707F':'càn','708A':'chuī','708B':'pī','708C':'kài','708D':'pàn','708E':'yán','708F':'kài','709A':'guāng','709B':'xīn','709C':'wěi','709D':'qiàng','709E':'biàn','709F':'dá','70A0':'xiá','70A1':'zhēng','70A2':'zhú','70A3':'kě','70A4':'zhào','70A5':'fú','70A6':'bá','70A7':'duò','70A8':'duò','70A9':'lìng','70AA':'zhuó','70AB':'xuàn','70AC':'jù','70AD':'tàn','70AE':'pào/bāo/páo','70AF':'jiǒng','70B0':'páo','70B1':'tái','70B2':'tái','70B3':'bǐng','70B4':'yǎng','70B5':'tōng/dōng','70B6':'hān','70B7':'zhù','70B8':'zhà/zhá','70B9':'diǎn/dian','70BA':'wèi/wéi','70BB':'shí','70BC':'liàn','70BD':'chì','70BE':'píng','70BF':'zhōu','70C0':'hū','70C1':'shuò','70C2':'làn','70C3':'tīng','70C4':'jiǎo','70C5':'xù','70C6':'xíng','70C7':'quàn','70C8':'liè','70C9':'huàn','70CA':'yáng/yàng','70CB':'xiāo','70CC':'xiū','70CD':'xiǎn','70CE':'yín','70CF':'wū/wù','70D0':'zhōu','70D1':'yáo','70D2':'shì','70D3':'wēi','70D4':'tóng','70D5':'tóng','70D6':'zāi','70D7':'kài','70D8':'hōng','70D9':'luò/lào','70DA':'xiá','70DB':'zhú','70DC':'xuǎn','70DD':'zhēng','70DE':'pò','70DF':'yān','70E0':'huǐ','70E1':'guāng','70E2':'zhè','70E3':'huī','70E4':'kǎo','70E5':'chén/jù','70E6':'fán','70E7':'shāo','70E8':'yè','70E9':'huì','70EA':'*','70EB':'tàng','70EC':'jìn','70ED':'rè','70EE':'liè','70EF':'xī','70F0':'fú','70F1':'jiǒng','70F2':'chè','70F3':'pǔ','70F4':'jǐng/tīng','70F5':'zhuó','70F6':'tǐng','70F7':'wán','70F8':'hǎi','70F9':'pēng','70FA':'lǎng','70FB':'shān','70FC':'hū','70FD':'fēng','70FE':'chì','70FF':'róng','710A':'hàn','710B':'zhuàng','710C':'qū/jùn','710D':'dì/tī','710E':'xiè','710F':'qì','711A':'fén','711B':'lìn','711C':'kūn','711D':'hùn','711E':'chūn','711F':'xí','712A':'qiōng','712B':'cuì','712C':'xí','712D':'qióng','712E':'xìn','712F':'zhuó','713A':'shēng','713B':'chàng','713C':'shāo','713D':'xiǒng/yīng','713E':'niǎn','713F':'gēng','714A':'xuān','714B':'xīng','714C':'huáng','714D':'jiǎo','714E':'jiān','714F':'bì','715A':'jiǒng','715B':'jiǒng','715C':'yù','715D':'mèi','715E':'shà/shā','715F':'wù','716A':'qiú','716B':'suì','716C':'yáng/yàng','716D':'liè','716E':'zhǔ','716F':'jiē','717A':'tuì','717B':'táng','717C':'chǎo','717D':'shān','717E':'yūn','717F':'bó','718A':'xióng','718B':'nái','718C':'kǎo','718D':'qióng','718E':'yào','718F':'xūn/xùn','719A':'bì','719B':'biāo','719C':'cōng','719D':'lù','719E':'jiān','719F':'shú','71A0':'yì','71A1':'lóu','71A2':'fēng','71A3':'suī','71A4':'yì','71A5':'tēng','71A6':'jué','71A7':'zōng','71A8':'yùn/yù','71A9':'hù','71AA':'yí','71AB':'zhì','71AC':'áo/āo','71AD':'wèi','71AE':'liáo','71AF':'hàn','71B0':'ōu','71B1':'rè','71B2':'jiǒng','71B3':'màn','71B4':'kūn','71B5':'shāng','71B6':'cuàn','71B7':'zēng','71B8':'jiān','71B9':'xī','71BA':'xī','71BB':'xī','71BC':'yì','71BD':'xiào','71BE':'chì','71BF':'huáng','71C0':'chǎn','71C1':'yè','71C2':'qián','71C3':'rán','71C4':'yàn','71C5':'xián','71C6':'qiáo','71C7':'zūn','71C8':'dēng','71C9':'dùn','71CA':'shēn','71CB':'jiāo','71CC':'fén','71CD':'sī','71CE':'liáo/liǎo','71CF':'yù','71D0':'lín','71D1':'tóng','71D2':'shāo','71D3':'fén','71D4':'fán','71D5':'yàn/yān','71D6':'xún','71D7':'làn','71D8':'měi','71D9':'tàng','71DA':'yī','71DB':'jǐng','71DC':'mèn','71DD':'jǐng','71DE':'jiào','71DF':'yíng','71E0':'yù','71E1':'yì','71E2':'xué','71E3':'lán','71E4':'tài','71E5':'zào','71E6':'càn','71E7':'suì','71E8':'xī','71E9':'què','71EA':'cōng','71EB':'lián','71EC':'huǐ','71ED':'zhú','71EE':'xiè','71EF':'líng','71F0':'wēi','71F1':'yì','71F2':'xié','71F3':'zhào','71F4':'huì','71F5':'dá','71F6':'nóng','71F7':'lán','71F8':'rú','71F9':'xiǎn','71FA':'kǎo','71FB':'xūn','71FC':'jìn','71FD':'chóu','71FE':'dào/tāo/táo','71FF':'yào','720A':'áo','720B':'xùn','720C':'kuàng','720D':'shuò','720E':'liáo','720F':'lì','721A':'yuè','721B':'làn','721C':'cóng','721D':'jué','721E':'tóng','721F':'guàn','722A':'zhuǎ/zhǎo','722B':'làn','722C':'pá','722D':'zhēng','722E':'páo','722F':'zhǎo','723A':'yé','723B':'yáo','723C':'zǔ','723D':'shuǎng','723E':'ěr','723F':'pán','724A':'sháo','724B':'jiān','724C':'pái','724D':'dú','724E':'yōng','724F':'tóu','725A':'chèng/chēng','725B':'niú','725C':'chēng','725D':'pìn','725E':'jiū','725F':'móu/mù','726A':'yàn','726B':'fá','726C':'bèi','726D':'sì','726E':'jiàn','726F':'gǔ','727A':'xī','727B':'máng','727C':'kēng','727D':'qiān','727E':'wǔ','727F':'gù','728A':'dú','728B':'jù','728C':'jiā','728D':'jiān/qián','728E':'fēng','728F':'piān','729A':'wèi','729B':'lí','729C':'dūn','729D':'tóng','729E':'sè','729F':'jiàng','72A0':'xī','72A1':'lì','72A2':'dú','72A3':'liè','72A4':'pí','72A5':'piǎo','72A6':'bào','72A7':'xī','72A8':'chōu','72A9':'wèi','72AA':'kuí','72AB':'chōu','72AC':'quǎn','72AD':'quǎn','72AE':'bá','72AF':'fàn','72B0':'qiú','72B1':'bó','72B2':'chái','72B3':'chuó','72B4':'àn','72B5':'jié','72B6':'zhuàng','72B7':'guǎng','72B8':'mǎ','72B9':'yóu','72BA':'kàng','72BB':'bó','72BC':'hǒu','72BD':'yá','72BE':'hàn','72BF':'huān','72C0':'zhuàng','72C1':'yǔn','72C2':'kuáng','72C3':'niǔ','72C4':'dí','72C5':'qīng','72C6':'zhòng','72C7':'yǔn','72C8':'bèi','72C9':'pī','72CA':'jú','72CB':'ní','72CC':'shēng','72CD':'páo','72CE':'xiá','72CF':'tuó','72D0':'hú','72D1':'líng','72D2':'fèi','72D3':'pī','72D4':'ní','72D5':'shēng','72D6':'yòu','72D7':'gǒu','72D8':'yuè','72D9':'jū','72DA':'dàn','72DB':'bò','72DC':'gǔ','72DD':'xiǎn','72DE':'níng','72DF':'huán','72E0':'hěn','72E1':'jiǎo','72E2':'hé/háo/mò','72E3':'zhào','72E4':'jí','72E5':'huán','72E6':'shān','72E7':'tà','72E8':'róng','72E9':'shòu','72EA':'tōng','72EB':'lǎo','72EC':'dú','72ED':'xiá','72EE':'shī','72EF':'kuài','72F0':'zhēng','72F1':'yù','72F2':'sūn','72F3':'yú','72F4':'bì','72F5':'máng','72F6':'xǐ','72F7':'juàn','72F8':'lí','72F9':'xiá','72FA':'yín','72FB':'suān','72FC':'láng','72FD':'bèi','72FE':'zhì','72FF':'yán','730A':'ní','730B':'biāo','730C':'yìn','730D':'lí','730E':'liè','730F':'jiān','731A':'yá','731B':'měng','731C':'cāi','731D':'cù','731E':'shē','731F':'liè','732A':'zhū','732B':'māo','732C':'wèi','732D':'yuán','732E':'xiàn','732F':'tuān','733A':'yáo','733B':'sūn','733C':'bó','733D':'míng','733E':'huá','733F':'yuán','734A':'chuàng','734B':'háo','734C':'màn','734D':'jìng','734E':'jiǎng','734F':'mò','735A':'huáng','735B':'bǔ','735C':'lín','735D':'yù','735E':'tóng','735F':'yào','736A':'kuài','736B':'xiǎn','736C':'xiè','736D':'tǎ','736E':'xiǎn','736F':'xūn','737A':'tà/tǎ','737B':'xiàn','737C':'mí','737D':'ráng','737E':'huān','737F':'náo','738A':'sù','738B':'wáng','738C':'qiú','738D':'gǎ','738E':'dīng','738F':'lè','739A':'yáng/chàng','739B':'mǎ','739C':'hóng','739D':'wǔ','739E':'fū','739F':'wén/mín','73A0':'jiè','73A1':'yá','73A2':'bīn/fēn','73A3':'biàn','73A4':'běng','73A5':'yuè','73A6':'jué','73A7':'yǔn','73A8':'jué','73A9':'wán','73AA':'jiān','73AB':'méi','73AC':'dǎn','73AD':'pí','73AE':'wěi','73AF':'huán','73B0':'xiàn','73B1':'qiāng','73B2':'líng','73B3':'dài','73B4':'yì','73B5':'án','73B6':'píng','73B7':'diàn','73B8':'fú','73B9':'xuán','73BA':'xǐ','73BB':'bō','73BC':'cǐ','73BD':'gǒu','73BE':'jiǎ','73BF':'sháo','73C0':'pò','73C1':'cí','73C2':'kē','73C3':'rǎn','73C4':'shēng','73C5':'shēn','73C6':'yí','73C7':'zǔ','73C8':'jiā','73C9':'mín','73CA':'shān','73CB':'liǔ','73CC':'bì','73CD':'zhēn','73CE':'zhēn','73CF':'jué','73D0':'fǎ','73D1':'lóng','73D2':'jīn','73D3':'jiào','73D4':'jiàn','73D5':'lì','73D6':'guāng','73D7':'xiān','73D8':'zhōu','73D9':'gǒng','73DA':'yān','73DB':'xiù','73DC':'yáng','73DD':'xǔ','73DE':'luò','73DF':'sù','73E0':'zhū','73E1':'qín','73E2':'kèn','73E3':'xún','73E4':'bǎo','73E5':'ěr','73E6':'xiáng','73E7':'yáo','73E8':'xiá','73E9':'héng','73EA':'guī','73EB':'chōng','73EC':'xù','73ED':'bān','73EE':'pèi','73EF':'lǎo','73F0':'dāng','73F1':'yīng','73F2':'hún','73F3':'wén','73F4':'é','73F5':'chéng','73F6':'tí/dì','73F7':'wǔ','73F8':'wú','73F9':'chéng','73FA':'jùn','73FB':'méi','73FC':'bèi','73FD':'tǐng','73FE':'xiàn','73FF':'chuò','740A':'yé/yá','740B':'xī','740C':'líng','740D':'lì','740E':'jīn','740F':'liǎn','741A':'jū','741B':'chēn','741C':'lái','741D':'wén','741E':'shèng','741F':'wéi','742A':'qí','742B':'běng','742C':'wǎn','742D':'lù','742E':'cóng','742F':'guǎn','743A':'fà','743B':'jīn','743C':'qióng','743D':'dǔ','743E':'jiè','743F':'hún/huī','744A':'zhēn','744B':'wěi','744C':'ruǎn','744D':'huàn','744E':'xié','744F':'chuān','745A':'hú','745B':'yīng','745C':'yú','745D':'huáng','745E':'ruì','745F':'sè','746A':'mǎ','746B':'tāo','746C':'liú','746D':'táng','746E':'lì','746F':'láng','747A':'cháng','747B':'kūn','747C':'zhuān','747D':'cōng','747E':'jǐn','747F':'yī','748A':'mán','748B':'zhāng','748C':'yín','748D':'huá','748E':'yīng','748F':'wèi','749A':'qióng','749B':'sù','749C':'huáng','749D':'guī','749E':'pú','749F':'jǐng','74A0':'fán','74A1':'jìn','74A2':'liú','74A3':'jī','74A4':'huì','74A5':'jǐng','74A6':'ài','74A7':'bì','74A8':'càn','74A9':'qú','74AA':'zǎo','74AB':'dāng','74AC':'jiǎo','74AD':'gùn','74AE':'tǎn','74AF':'huì','74B0':'huán','74B1':'sè','74B2':'suì','74B3':'tián','74B4':'chǔ','74B5':'yú','74B6':'jìn','74B7':'fū','74B8':'bīn','74B9':'shú','74BA':'wèn/wén','74BB':'zuǐ','74BC':'lán','74BD':'xǐ','74BE':'jì','74BF':'xuán','74C0':'ruǎn','74C1':'huò','74C2':'gài','74C3':'léi','74C4':'dú','74C5':'lì','74C6':'zhí','74C7':'róu','74C8':'lí','74C9':'zàn','74CA':'qióng','74CB':'zhé','74CC':'guī','74CD':'suì','74CE':'là','74CF':'lóng','74D0':'lú','74D1':'lì','74D2':'zàn','74D3':'làn','74D4':'yīng','74D5':'mí','74D6':'xiāng','74D7':'xī','74D8':'guàn','74D9':'dào','74DA':'zàn','74DB':'huán','74DC':'guā','74DD':'báo','74DE':'dié','74DF':'páo','74E0':'hù','74E1':'zhí','74E2':'piáo','74E3':'bàn','74E4':'ráng','74E5':'lì','74E6':'wǎ/wà','74E7':'shí','74E8':'jiāng/hóng','74E9':'qián/wǎ','74EA':'bǎn','74EB':'pén','74EC':'fǎng','74ED':'dǎn','74EE':'wèng','74EF':'ōu','74F0':'fēn','74F1':'háo','74F2':'wǎ','74F3':'hú','74F4':'líng','74F5':'yí','74F6':'píng','74F7':'cí','74F8':'bǎi','74F9':'juàn','74FA':'cháng','74FB':'chī','74FC':'*','74FD':'dàng','74FE':'měng','74FF':'bù','750A':'lǒu','750B':'dì','750C':'ōu','750D':'méng','750E':'zhuān','750F':'bèng','751A':'shèn','751B':'tián','751C':'tián','751D':'hān','751E':'cháng','751F':'shēng','752A':'lù','752B':'fǔ','752C':'yǒng','752D':'béng','752E':'fèng','752F':'níng','753A':'dīng','753B':'huà','753C':'tǐng/dīng','753D':'quǎn','753E':'zāi','753F':'méng','754A':'gēng','754B':'tián','754C':'jiè','754D':'jiè','754E':'quǎn','754F':'wèi','755A':'běn','755B':'zhěn','755C':'chù/xù','755D':'mǔ','755E':'mǔ','755F':'cè','756A':'fān/pān','756B':'huà','756C':'yú','756D':'yú','756E':'mǔ','756F':'jùn','757A':'jiāng','757B':'chéng','757C':'chàng','757D':'tǔn','757E':'léi','757F':'jī','758A':'dié','758B':'pǐ/shū/yǎ','758C':'niè','758D':'dàn','758E':'shū','758F':'shū','759A':'jiù','759B':'zhǒu','759C':'xià','759D':'shàn','759E':'xū','759F':'nüè/yào','75A0':'lì','75A1':'yáng','75A2':'chèn','75A3':'yóu','75A4':'bā','75A5':'jiè','75A6':'jué','75A7':'xī','75A8':'xiā','75A9':'cuì','75AA':'bì','75AB':'yì','75AC':'lì','75AD':'zòng','75AE':'chuāng','75AF':'fēng','75B0':'zhù','75B1':'pào','75B2':'pí','75B3':'gān','75B4':'kē','75B5':'cī','75B6':'xiè','75B7':'qí','75B8':'dǎn/da','75B9':'zhěn','75BA':'fá','75BB':'zhǐ','75BC':'téng','75BD':'jū','75BE':'jí','75BF':'fèi','75C0':'jū','75C1':'diàn','75C2':'jiā','75C3':'xián','75C4':'zhà','75C5':'bìng','75C6':'niè','75C7':'zhèng/zhēng','75C8':'yōng','75C9':'jìng','75CA':'quán','75CB':'chóng','75CC':'tōng','75CD':'yí','75CE':'jiè','75CF':'wěi','75D0':'huí','75D1':'duǒ','75D2':'yǎng','75D3':'chì','75D4':'zhì','75D5':'hén','75D6':'yǎ','75D7':'mèi','75D8':'dòu','75D9':'jìng','75DA':'xiāo','75DB':'tòng','75DC':'tū','75DD':'máng','75DE':'pǐ','75DF':'xiāo','75E0':'suān','75E1':'pū','75E2':'lì','75E3':'zhì','75E4':'cuó','75E5':'duó','75E6':'wù','75E7':'shā','75E8':'láo','75E9':'shòu','75EA':'huàn','75EB':'xián','75EC':'yì','75ED':'péng','75EE':'zhàng','75EF':'guǎn','75F0':'tán','75F1':'fèi','75F2':'má','75F3':'lín','75F4':'chī','75F5':'jì','75F6':'tiǎn','75F7':'ān','75F8':'chì','75F9':'bì','75FA':'bì','75FB':'mín','75FC':'gù','75FD':'duī','75FE':'ē','75FF':'wěi','760A':'hóu','760B':'fēng','760C':'là','760D':'yáng','760E':'shèn','760F':'tú','761A':'jué','761B':'chì','761C':'xí','761D':'guān','761E':'yì','761F':'wēn','762A':'biē/biě','762B':'tān','762C':'zhàng','762D':'biāo','762E':'shèn','762F':'cù','763A':'lòu','763B':'lòu','763C':'mò','763D':'jìn','763E':'yǐn','763F':'yǐng','764A':'yìn','764B':'hè','764C':'ái','764D':'bān','764E':'xián','764F':'guān','765A':'dàn','765B':'lǐn','765C':'diàn','765D':'lǐn','765E':'lài','765F':'biē/biě','766A':'jī','766B':'diān','766C':'xiǎn/xuǎn','766D':'yǐng','766E':'yǐn','766F':'qú','767A':'fā','767B':'dēng','767C':'fā','767D':'bái','767E':'bǎi/bó','767F':'qié','768A':'líng','768B':'gāo','768C':'mò','768D':'jì','768E':'jiǎo','768F':'pěng','769A':'ái','769B':'jiǒng','769C':'hào','769D':'huǎng','769E':'hào','769F':'zé','76A0':'cuí','76A1':'hào','76A2':'xiǎo','76A3':'yè','76A4':'pó','76A5':'hào','76A6':'jiǎo','76A7':'ài','76A8':'xīng','76A9':'huàng','76AA':'lì','76AB':'piǎo','76AC':'hè','76AD':'jiào','76AE':'pí','76AF':'gǎn','76B0':'pào','76B1':'zhòu','76B2':'jūn','76B3':'qiú','76B4':'cūn','76B5':'què','76B6':'zhā','76B7':'gǔ','76B8':'jūn','76B9':'jūn','76BA':'zhòu','76BB':'zhā','76BC':'gǔ','76BD':'zhǎn','76BE':'dú','76BF':'mǐn','76C0':'qǐ','76C1':'yíng','76C2':'yú','76C3':'bēi','76C4':'zhāo','76C5':'zhōng','76C6':'pén','76C7':'hé','76C8':'yíng','76C9':'hé','76CA':'yì','76CB':'bō','76CC':'wǎn','76CD':'hé','76CE':'àng','76CF':'zhǎn','76D0':'yán','76D1':'jiān/jiàn','76D2':'hé','76D3':'yū','76D4':'kuī','76D5':'fàn','76D6':'gě/gài','76D7':'dào','76D8':'pán','76D9':'fǔ','76DA':'qiú','76DB':'shèng/chéng','76DC':'dào','76DD':'lù','76DE':'zhǎn','76DF':'méng','76E0':'lù','76E1':'jìn/jǐn','76E2':'xù','76E3':'jiān/jiàn','76E4':'pán','76E5':'guàn','76E6':'ān','76E7':'lú','76E8':'xǔ','76E9':'zhōu','76EA':'dàng','76EB':'ān','76EC':'gǔ','76ED':'lì','76EE':'mù','76EF':'dīng','76F0':'gǎn','76F1':'xū','76F2':'máng','76F3':'máng','76F4':'zhí','76F5':'qì','76F6':'wǎn','76F7':'tián','76F8':'xiāng/xiàng','76F9':'dǔn','76FA':'xīn','76FB':'xī','76FC':'pàn','76FD':'fēng','76FE':'dùn','76FF':'mín','770A':'mào','770B':'kàn/kān','770C':'xiàn','770D':'kōu','770E':'shì','770F':'yāng','771A':'shěng','771B':'mèi','771C':'mò','771D':'zhǔ','771E':'zhēn','771F':'zhēn','772A':'bǐng','772B':'mǐ','772C':'lóng','772D':'suī','772E':'tóng','772F':'mī/mí','773A':'tiào','773B':'yáng','773C':'yǎn','773D':'mò','773E':'zhòng','773F':'mài','774A':'juàn','774B':'é','774C':'wǎn','774D':'xiàn','774E':'xī','774F':'kùn','775A':'yá','775B':'jīng','775C':'zhēng','775D':'lí','775E':'lài','775F':'suì','776A':'gāo','776B':'jié','776C':'cǎi','776D':'zhǒu','776E':'yú','776F':'hūn','777A':'hóu','777B':'xuān','777C':'tí','777D':'kuí','777E':'gāo','777F':'ruì','778A':'dàng','778B':'chēn','778C':'kē','778D':'sǒu','778E':'xiā','778F':'qióng','779A':'shùn','779B':'cōng','779C':'lóu','779D':'chī','779E':'mán','779F':'piǎo','77A0':'chēng','77A1':'jì','77A2':'méng','77A3':'huàn','77A4':'rún','77A5':'piē','77A6':'xī','77A7':'qiáo','77A8':'pū','77A9':'zhǔ','77AA':'dèng','77AB':'shěn','77AC':'shùn','77AD':'liào','77AE':'chè','77AF':'xián','77B0':'kàn','77B1':'yè','77B2':'xù','77B3':'tóng','77B4':'wú','77B5':'lín','77B6':'kuì','77B7':'jiàn','77B8':'yè','77B9':'ài','77BA':'huì','77BB':'zhān','77BC':'jiǎn','77BD':'gǔ','77BE':'zhào','77BF':'jù/qú','77C0':'wéi','77C1':'chǒu','77C2':'jì','77C3':'nǐng','77C4':'xūn','77C5':'yào','77C6':'huò','77C7':'méng','77C8':'mián','77C9':'bīn/pín','77CA':'mián','77CB':'lì','77CC':'guàng','77CD':'jué','77CE':'xuān','77CF':'mián','77D0':'huò','77D1':'lú','77D2':'méng','77D3':'lóng','77D4':'guàn','77D5':'mǎn','77D6':'xǐ','77D7':'chù','77D8':'tǎng','77D9':'kàn','77DA':'zhǔ','77DB':'máo','77DC':'jīn/qín','77DD':'lín','77DE':'yù','77DF':'shuò','77E0':'cè','77E1':'jué','77E2':'shǐ','77E3':'yǐ','77E4':'shěn','77E5':'zhī','77E6':'hóu/hòu','77E7':'shěn','77E8':'yǐng','77E9':'jǔ/ju','77EA':'zhōu','77EB':'jiǎo','77EC':'cuó','77ED':'duǎn','77EE':'ǎi','77EF':'jiǎo/jiǎ/jiáo','77F0':'zēng','77F1':'huò','77F2':'bǎi/bài/pǎi','77F3':'shí/dàn','77F4':'dìng','77F5':'qì','77F6':'jī','77F7':'zǐ','77F8':'gān','77F9':'wù','77FA':'tuō','77FB':'kū','77FC':'qiāng','77FD':'xī','77FE':'fán','77FF':'kuàng','780A':'kàng','780B':'zhǐ','780C':'qì','780D':'kǎn','780E':'jiè','780F':'fēn','781A':'yàn','781B':'jīn','781C':'fēng','781D':'fǎ','781E':'mò','781F':'zhǎ/zuò','782A':'mǔ','782B':'zhǔ','782C':'lì/lá','782D':'biān','782E':'nǔ','782F':'pīng','783A':'lì','783B':'lóng','783C':'tóng','783D':'yòng','783E':'lì','783F':'kuàng','784A':'wěi/kuì','784B':'ài','784C':'luò','784D':'kèn','784E':'xíng','784F':'yán','785A':'qiáo','785B':'jì','785C':'kēng','785D':'xiāo','785E':'què','785F':'chàn','786A':'wò','786B':'liú','786C':'yìng','786D':'máng','786E':'què','786F':'yàn','787A':'zhuó','787B':'kēng','787C':'péng','787D':'yǎn','787E':'zhuì','787F':'kōng','788A':'jiān','788B':'hè','788C':'liù/lù','788D':'ài','788E':'suì','788F':'què','789A':'bèi','789B':'qì','789C':'chěn','789D':'ruǎn','789E':'yán','789F':'dié','78A0':'dìng','78A1':'zhou','78A2':'tuó','78A3':'jié','78A4':'yīng','78A5':'biǎn','78A6':'kè','78A7':'bì','78A8':'wēi','78A9':'shuò/shí','78AA':'zhēn','78AB':'duàn','78AC':'xiá','78AD':'dàng','78AE':'tí','78AF':'nǎo','78B0':'pèng','78B1':'jiǎn','78B2':'dì','78B3':'tàn','78B4':'chá','78B5':'tián','78B6':'qì','78B7':'dùn','78B8':'fēng','78B9':'xuàn','78BA':'què','78BB':'què','78BC':'mǎ','78BD':'gōng','78BE':'niǎn','78BF':'sù','78C0':'é','78C1':'cí','78C2':'liù','78C3':'sī','78C4':'táng','78C5':'bàng/páng','78C6':'huá','78C7':'pī','78C8':'wěi','78C9':'sǎng','78CA':'lěi','78CB':'cuō','78CC':'tián','78CD':'xiá','78CE':'xī','78CF':'lián','78D0':'pán','78D1':'wèi','78D2':'yǔn','78D3':'duī','78D4':'zhé','78D5':'kē','78D6':'lá','78D7':'zhuān','78D8':'qìng','78D9':'gǔn','78DA':'zhuān','78DB':'chán','78DC':'qì','78DD':'áo','78DE':'pēng','78DF':'lù','78E0':'lǔ','78E1':'kàn','78E2':'qiǎng','78E3':'chěn','78E4':'yǐn','78E5':'lěi','78E6':'biāo','78E7':'qì','78E8':'mó/mò','78E9':'qī','78EA':'cuī','78EB':'zōng','78EC':'qìng','78ED':'chuò','78EE':'lún','78EF':'jī','78F0':'shàn','78F1':'láo','78F2':'qú','78F3':'zēng','78F4':'dèng','78F5':'jiàn','78F6':'xì','78F7':'lín','78F8':'dìng','78F9':'diàn','78FA':'huáng','78FB':'pán','78FC':'zá','78FD':'qiāo','78FE':'dī','78FF':'lì','790A':'huò','790B':'zhái','790C':'léi','790D':'kě','790E':'chǔ','790F':'jí','791A':'kē','791B':'jiān','791C':'yù','791D':'ruǎn','791E':'méng','791F':'pào','792A':'lì','792B':'lì','792C':'fán','792D':'què','792E':'pào','792F':'yīng','793A':'shì','793B':'shì','793C':'lǐ','793D':'réng','793E':'shè','793F':'yuè','794A':'bēng','794B':'shū','794C':'chōng','794D':'rèn','794E':'yī','794F':'shí','795A':'zuò','795B':'qū','795C':'hù','795D':'zhù','795E':'shén','795F':'suì','796A':'guǐ','796B':'xiá','796C':'zhī','796D':'jì','796E':'gào','796F':'zhēn','797A':'qí','797B':'gù','797C':'guàn','797D':'zuì','797E':'líng','797F':'lù','798A':'xì','798B':'yīn','798C':'zī','798D':'huò','798E':'zhēn','798F':'fú','799A':'zhuó','799B':'zhēn','799C':'yǒng','799D':'jì','799E':'gào','799F':'táng','79A0':'chǐ','79A1':'mà','79A2':'tā','79A3':'fù','79A4':'xuān','79A5':'qí','79A6':'yù','79A7':'xǐ','79A8':'jī','79A9':'sì','79AA':'chán/shàn','79AB':'xuān','79AC':'huì','79AD':'suì','79AE':'lǐ','79AF':'nóng','79B0':'nǐ/mí','79B1':'dǎo','79B2':'lì','79B3':'ráng','79B4':'yuè','79B5':'tí','79B6':'zǎn','79B7':'lèi','79B8':'róu','79B9':'yǔ','79BA':'yú','79BB':'lí','79BC':'xiè','79BD':'qín','79BE':'hé','79BF':'tū','79C0':'xiù','79C1':'sī','79C2':'rén','79C3':'tū','79C4':'zǐ','79C5':'chá','79C6':'gǎn','79C7':'yì','79C8':'xiān','79C9':'bǐng','79CA':'nián','79CB':'qiū','79CC':'qiū','79CD':'chóng/zhǒng/zhòng','79CE':'fèn','79CF':'hào','79D0':'yún','79D1':'kē','79D2':'miǎo','79D3':'zhī','79D4':'jīng','79D5':'bǐ','79D6':'zhī','79D7':'yù','79D8':'mì/bì','79D9':'kù','79DA':'bàn','79DB':'pī','79DC':'ní','79DD':'lì','79DE':'yóu','79DF':'zū','79E0':'pī','79E1':'bá','79E2':'líng','79E3':'mò','79E4':'chèng','79E5':'nián','79E6':'qín','79E7':'yāng','79E8':'zuó','79E9':'zhì','79EA':'zhī','79EB':'shú','79EC':'jù','79ED':'zǐ','79EE':'tái','79EF':'jī','79F0':'chēng/chèn','79F1':'tóng','79F2':'zhì','79F3':'huó','79F4':'hé','79F5':'yīn','79F6':'zī','79F7':'zhí','79F8':'jiē','79F9':'rěn','79FA':'dù','79FB':'yí','79FC':'zhù','79FD':'huì','79FE':'nóng','79FF':'fǔ','7A00':'xī','7A01':'kǎo','7A02':'láng','7A03':'fū','7A04':'zè','7A05':'shuì','7A06':'lǚ','7A07':'kǔn','7A08':'gǎn','7A09':'jīng','7A0A':'tí','7A0B':'chéng','7A0C':'tú','7A0D':'shāo/shào','7A0E':'shuì','7A0F':'yà','7A10':'lǔn','7A11':'lù','7A12':'gù','7A13':'zuó','7A14':'rěn','7A15':'zhùn','7A16':'bàng','7A17':'bài','7A18':'jī/qí','7A19':'zhí','7A1A':'zhì','7A1B':'kǔn','7A1C':'léng','7A1D':'péng','7A1E':'kē','7A1F':'bǐng','7A20':'chóu','7A21':'zuì','7A22':'yù','7A23':'sū','7A24':'luě/luè','7A25':'xiàng','7A26':'yī','7A27':'xì','7A28':'biān','7A29':'jì','7A2A':'fù','7A2B':'bī','7A2C':'nuò','7A2D':'jiē','7A2E':'zhǒng/chóng/zhòng','7A2F':'zōng','7A30':'xū','7A31':'chēng/chèn/chèng','7A32':'dào','7A33':'wěn','7A34':'lián','7A35':'zī','7A36':'yù','7A37':'jì','7A38':'xù','7A39':'zhěn','7A3A':'zhì','7A3B':'dào','7A3C':'jià','7A3D':'jī/qǐ','7A3E':'gǎo','7A3F':'gǎo','7A40':'gǔ','7A41':'róng','7A42':'suì','7A43':'ròng','7A44':'jì','7A45':'kāng','7A46':'mù','7A47':'shān','7A48':'mén','7A49':'zhì','7A4A':'jì','7A4B':'lù','7A4C':'sū/wèi','7A4D':'jī','7A4E':'yǐng','7A4F':'wěn','7A50':'qiū','7A51':'sè','7A52':'*','7A53':'yì','7A54':'huáng','7A55':'qiè','7A56':'jǐ','7A57':'suì','7A58':'xiāo','7A59':'pú','7A5A':'jiāo','7A5B':'zhuō','7A5C':'tóng','7A5D':'zuì','7A5E':'lǚ','7A5F':'suì','7A60':'nóng','7A61':'sè','7A62':'huì','7A63':'ráng','7A64':'nuò','7A65':'yù','7A66':'pīn','7A67':'jì','7A68':'tuí','7A69':'wěn','7A6A':'chēng/chèn/chèng','7A6B':'huò','7A6C':'gǒng','7A6D':'lǚ','7A6E':'biāo','7A6F':'sè','7A70':'ráng','7A71':'jué','7A72':'lí','7A73':'zàn','7A74':'xué','7A75':'wā','7A76':'jiū','7A77':'qióng','7A78':'xī','7A79':'qióng','7A7A':'kōng/kòng','7A7B':'yū','7A7C':'sēn','7A7D':'jǐng','7A7E':'yào','7A7F':'chuān','7A80':'zhūn','7A81':'tū','7A82':'láo','7A83':'qiè','7A84':'zhǎi','7A85':'yǎo','7A86':'biǎn','7A87':'báo','7A88':'yǎo','7A89':'bǐng','7A8A':'yǔ','7A8B':'zhú','7A8C':'jiào','7A8D':'qiào','7A8E':'diào','7A8F':'wū','7A90':'guī','7A91':'yáo','7A92':'zhì','7A93':'chuān','7A94':'yǎo','7A95':'tiǎo','7A96':'jiào','7A97':'chuāng','7A98':'jiǒng','7A99':'xiāo','7A9A':'chéng','7A9B':'kòu','7A9C':'cuàn','7A9D':'wō','7A9E':'dàn','7A9F':'kū','7AA0':'kē','7AA1':'zhuì','7AA2':'xù','7AA3':'sū','7AA4':'guān','7AA5':'kuī','7AA6':'dòu','7AA7':'zhuō/zhuó','7AA8':'yìn/xūn','7AA9':'wō','7AAA':'wā','7AAB':'yà','7AAC':'yú','7AAD':'jù','7AAE':'qióng','7AAF':'yáo','7AB0':'yáo','7AB1':'tiào','7AB2':'liào','7AB3':'yǔ','7AB4':'tián','7AB5':'diào','7AB6':'jù','7AB7':'liáo','7AB8':'xī','7AB9':'wù','7ABA':'kuī','7ABB':'chuāng','7ABC':'jǔ','7ABD':'kuǎn','7ABE':'kuǎn','7ABF':'lóng','7AC0':'chēng','7AC1':'cuì','7AC2':'piáo','7AC3':'zào','7AC4':'cuàn','7AC5':'qiào','7AC6':'qióng','7AC7':'dòu','7AC8':'zào','7AC9':'zào','7ACA':'qiè','7ACB':'lì','7ACC':'chù','7ACD':'shí/gōng/shēng','7ACE':'fù','7ACF':'qiān/gōng/shēng','7AD0':'chù','7AD1':'hóng','7AD2':'qí/jī','7AD3':'qiān/fēn/zhī/yī/gōng/shēng','7AD4':'gōng/shēng','7AD5':'shí/fēn/zhī/yī/gōng/shēng','7AD6':'shù','7AD7':'miào','7AD8':'jǔ','7AD9':'zhàn','7ADA':'zhù','7ADB':'líng','7ADC':'lóng','7ADD':'bìng/bīng','7ADE':'jìng','7ADF':'jìng','7AE0':'zhāng','7AE1':'yī/gōng/shēng/bǎi/bèi','7AE2':'sì/qí','7AE3':'jùn','7AE4':'hóng','7AE5':'tóng','7AE6':'sǒng','7AE7':'jìng','7AE8':'diào','7AE9':'yì','7AEA':'shù','7AEB':'jìng','7AEC':'qǔ','7AED':'jié','7AEE':'píng','7AEF':'duān','7AF0':'sháo','7AF1':'zhuǎn','7AF2':'céng','7AF3':'dēng','7AF4':'cūn','7AF5':'huāi','7AF6':'jìng','7AF7':'kàn','7AF8':'jìng','7AF9':'zhú','7AFA':'zhú','7AFB':'lè','7AFC':'péng','7AFD':'yú','7AFE':'chí','7AFF':'gān','7B00':'máng','7B01':'zhú','7B02':'wán','7B03':'dǔ','7B04':'jī','7B05':'xiáo','7B06':'bā','7B07':'suàn','7B08':'jí','7B09':'zhěn','7B0A':'zhào','7B0B':'sǔn','7B0C':'yá','7B0D':'zhuì','7B0E':'yuán','7B0F':'hù','7B10':'gāng','7B11':'xiào','7B12':'cén','7B13':'pí','7B14':'bǐ','7B15':'jiǎn','7B16':'yǐ','7B17':'dōng','7B18':'shān','7B19':'shēng','7B1A':'xiá','7B1B':'dí','7B1C':'zhú','7B1D':'nà','7B1E':'chī','7B1F':'gū','7B20':'lì','7B21':'qiè','7B22':'mǐn','7B23':'bāo','7B24':'tiáo','7B25':'sì','7B26':'fú','7B27':'cè','7B28':'bèn','7B29':'fá','7B2A':'dá','7B2B':'zǐ','7B2C':'dì','7B2D':'líng','7B2E':'zé','7B2F':'nú','7B30':'fú','7B31':'gǒu','7B32':'fán','7B33':'jiā','7B34':'gě','7B35':'fàn','7B36':'shǐ','7B37':'mǎo','7B38':'pǒ','7B39':'xiǎo','7B3A':'jiān','7B3B':'qióng','7B3C':'lóng/lǒng','7B3D':'mǐn','7B3E':'biān','7B3F':'luò','7B40':'guì','7B41':'qǔ/qū','7B42':'chí','7B43':'yīn','7B44':'yào','7B45':'xiǎn','7B46':'bǐ','7B47':'qióng','7B48':'guā','7B49':'děng','7B4A':'jiǎo','7B4B':'jīn','7B4C':'quán','7B4D':'sǔn','7B4E':'rú','7B4F':'fá','7B50':'kuāng','7B51':'zhù','7B52':'tǒng','7B53':'jī','7B54':'dá/dā','7B55':'háng','7B56':'cè','7B57':'zhòng','7B58':'kòu','7B59':'lái','7B5A':'bì','7B5B':'shāi','7B5C':'dāng','7B5D':'zhēng','7B5E':'cè','7B5F':'fū','7B60':'yún/jūn','7B61':'tú','7B62':'pá','7B63':'lì','7B64':'láng','7B65':'jǔ','7B66':'guǎn','7B67':'jiǎn','7B68':'hán','7B69':'tǒng','7B6A':'xiá','7B6B':'zhì','7B6C':'chéng','7B6D':'suàn','7B6E':'shì','7B6F':'zhù','7B70':'zuó','7B71':'xiǎo','7B72':'shāo','7B73':'tíng','7B74':'jiá','7B75':'yán','7B76':'gǎo','7B77':'kuài','7B78':'gān','7B79':'chóu','7B7A':'kuāng','7B7B':'gàng','7B7C':'yún','7B7D':'ōu/wō','7B7E':'qiān','7B7F':'xiǎo','7B80':'jiǎn','7B81':'pú','7B82':'lái','7B83':'zōu','7B84':'bì','7B85':'bì','7B86':'bì','7B87':'gè','7B88':'chí','7B89':'guǎi','7B8A':'yū','7B8B':'jiān','7B8C':'zhào','7B8D':'gū','7B8E':'chí','7B8F':'zhēng','7B90':'qìng','7B91':'shà','7B92':'zhǒu','7B93':'lù','7B94':'bó','7B95':'jī/ji','7B96':'lín','7B97':'suàn','7B98':'jùn','7B99':'fū','7B9A':'zhá','7B9B':'gū','7B9C':'kōng','7B9D':'qián','7B9E':'qiān','7B9F':'jùn/jūn','7BA0':'chuí','7BA1':'guǎn','7BA2':'yuān','7BA3':'cè','7BA4':'jú','7BA5':'bǒ','7BA6':'zé','7BA7':'qiè','7BA8':'tuò','7BA9':'luó','7BAA':'dān','7BAB':'xiāo','7BAC':'ruò','7BAD':'jiàn','7BAE':'xuān','7BAF':'biān','7BB0':'sǔn','7BB1':'xiāng','7BB2':'xiǎn','7BB3':'píng','7BB4':'zhēn','7BB5':'shěng','7BB6':'hú','7BB7':'shī/yí','7BB8':'zhù','7BB9':'yuē','7BBA':'chūn','7BBB':'fū','7BBC':'wū','7BBD':'dǒng','7BBE':'shuò','7BBF':'jí','7BC0':'jié/jiē','7BC1':'huáng','7BC2':'xīng','7BC3':'méi','7BC4':'fàn','7BC5':'chuán','7BC6':'zhuàn','7BC7':'piān','7BC8':'fēng','7BC9':'zhú/zhù','7BCA':'hóng','7BCB':'qiè','7BCC':'hóu','7BCD':'qiū','7BCE':'miǎo','7BCF':'qiàn','7BD0':'gū','7BD1':'kuì','7BD2':'shí','7BD3':'lǒu','7BD4':'yún','7BD5':'hé','7BD6':'táng','7BD7':'yuè','7BD8':'chōu','7BD9':'gāo','7BDA':'fěi','7BDB':'ruò','7BDC':'zhēng','7BDD':'gōu','7BDE':'niè','7BDF':'qiàn','7BE0':'xiǎo','7BE1':'cuàn','7BE2':'gōng','7BE3':'páng','7BE4':'dǔ','7BE5':'lì','7BE6':'bì','7BE7':'zhuó','7BE8':'chú','7BE9':'shāi','7BEA':'chí','7BEB':'zhú','7BEC':'qiāng','7BED':'lóng/lǒng','7BEE':'lán','7BEF':'jiān','7BF0':'bù','7BF1':'lí','7BF2':'huì','7BF3':'bì','7BF4':'dí','7BF5':'cōng','7BF6':'yān','7BF7':'péng','7BF8':'sēn','7BF9':'cuàn','7BFA':'pái','7BFB':'piào','7BFC':'dōu','7BFD':'yǔ','7BFE':'miè','7BFF':'zhuān','7C00':'zé/kuì','7C01':'xǐ','7C02':'guó','7C03':'yí','7C04':'hù','7C05':'chǎn','7C06':'kòu','7C07':'cù','7C08':'píng','7C09':'zào','7C0A':'jī','7C0B':'guǐ','7C0C':'sù','7C0D':'lǒu','7C0E':'zhà','7C0F':'lù','7C10':'niǎn','7C11':'suō','7C12':'cuàn','7C13':'diāo','7C14':'suō','7C15':'lè','7C16':'duàn','7C17':'liáng','7C18':'xiāo','7C19':'bó','7C1A':'mì','7C1B':'shāi','7C1C':'dàng','7C1D':'liáo','7C1E':'dān','7C1F':'diàn','7C20':'fǔ','7C21':'jiǎn','7C22':'mǐn','7C23':'kuì','7C24':'dài','7C25':'qiáo','7C26':'dēng','7C27':'huáng','7C28':'sǔn','7C29':'láo','7C2A':'zān','7C2B':'xiāo','7C2C':'lù','7C2D':'shì','7C2E':'zān','7C2F':'qǐ','7C30':'pái','7C31':'qí','7C32':'pái','7C33':'gàn','7C34':'jù','7C35':'dù','7C36':'lù','7C37':'yán','7C38':'bò/bǒ','7C39':'dāng','7C3A':'sài','7C3B':'kē','7C3C':'gòu','7C3D':'qiān','7C3E':'lián','7C3F':'bù','7C40':'zhòu','7C41':'lài','7C42':'shì','7C43':'lán','7C44':'kuì','7C45':'yú','7C46':'yuè','7C47':'háo','7C48':'zhēn','7C49':'tái','7C4A':'tì','7C4B':'mí','7C4C':'chóu','7C4D':'jí','7C4E':'yí','7C4F':'qí','7C50':'téng','7C51':'zhuàn','7C52':'zhòu','7C53':'fān','7C54':'sǒu','7C55':'zhòu','7C56':'qiān','7C57':'kuò','7C58':'téng','7C59':'lù','7C5A':'lú','7C5B':'jiān','7C5C':'tuò','7C5D':'yíng','7C5E':'yù','7C5F':'lài','7C60':'lóng/lǒng','7C61':'qiè','7C62':'lián','7C63':'lán','7C64':'qiān','7C65':'yuè','7C66':'zhōng','7C67':'qú','7C68':'lián','7C69':'biān','7C6A':'duàn','7C6B':'zuǎn','7C6C':'lí','7C6D':'shāi','7C6E':'luó','7C6F':'yíng','7C70':'yuè','7C71':'zhuó','7C72':'xū/yū/yù','7C73':'mǐ','7C74':'dí','7C75':'fán','7C76':'shēn','7C77':'zhé','7C78':'shēn','7C79':'nǚ','7C7A':'xié','7C7B':'lèi','7C7C':'xiān','7C7D':'zǐ','7C7E':'ní','7C7F':'cùn','7C80':'zhàng','7C81':'qiān','7C82':'zhāi','7C83':'bǐ','7C84':'bǎn','7C85':'wù','7C86':'shā','7C87':'kāng','7C88':'rǒu','7C89':'fěn','7C8A':'bì','7C8B':'cuì/suì','7C8C':'yǐn','7C8D':'lí','7C8E':'chǐ','7C8F':'tài','7C90':'hù','7C91':'bā','7C92':'lì','7C93':'gān','7C94':'jù','7C95':'pò','7C96':'mò','7C97':'cū','7C98':'zhān','7C99':'zhòu','7C9A':'lí','7C9B':'sù','7C9C':'tiào','7C9D':'lì','7C9E':'xī','7C9F':'sù','7CA0':'hóng','7CA1':'tóng','7CA2':'zī/cí','7CA3':'cè','7CA4':'yuè','7CA5':'zhōu','7CA6':'lín','7CA7':'zhuāng','7CA8':'bǎi','7CA9':'lāo','7CAA':'fèn','7CAB':'miàn','7CAC':'qū','7CAD':'hé','7CAE':'liáng','7CAF':'xiàn','7CB0':'fū','7CB1':'liáng','7CB2':'càn','7CB3':'jīng','7CB4':'lǐ','7CB5':'yuè','7CB6':'lù','7CB7':'jú','7CB8':'qí','7CB9':'cuì','7CBA':'bài','7CBB':'cháng','7CBC':'lín','7CBD':'zòng','7CBE':'jīng','7CBF':'guǒ','7CC0':'huā','7CC1':'sǎn','7CC2':'sǎn/shēn','7CC3':'táng','7CC4':'biǎn','7CC5':'róu','7CC6':'miàn','7CC7':'hóu','7CC8':'xǔ','7CC9':'zòng','7CCA':'hú/hū/hù','7CCB':'jiàn','7CCC':'zān','7CCD':'cí','7CCE':'lí','7CCF':'xiè','7CD0':'fū','7CD1':'nuò','7CD2':'bèi','7CD3':'gǔ/yù','7CD4':'xiǔ','7CD5':'gāo','7CD6':'táng','7CD7':'qiǔ','7CD8':'jiā','7CD9':'cāo','7CDA':'zhuāng','7CDB':'táng','7CDC':'mí','7CDD':'sǎn/shēn','7CDE':'fèn','7CDF':'zāo','7CE0':'kāng','7CE1':'jiàng','7CE2':'mó','7CE3':'sǎn','7CE4':'sǎn','7CE5':'nuò','7CE6':'chì','7CE7':'liáng','7CE8':'jiàng','7CE9':'kuāi','7CEA':'bó','7CEB':'huán','7CEC':'shǔ','7CED':'zòng','7CEE':'jiàn','7CEF':'nuò','7CF0':'tuán','7CF1':'niè','7CF2':'lì','7CF3':'zuò','7CF4':'dí','7CF5':'niè','7CF6':'tiào','7CF7':'lán','7CF8':'mì','7CF9':'mì','7CFA':'jiū','7CFB':'xì/jì','7CFC':'gōng','7CFD':'zhěng','7CFE':'jiū','7CFF':'yòu','7D00':'jì','7D01':'chà','7D02':'zhòu','7D03':'xún','7D04':'yuē/yāo','7D05':'hóng/gōng','7D06':'yū','7D07':'hé/gē','7D08':'wán','7D09':'rèn','7D0A':'wěn','7D0B':'wén/wèn','7D0C':'qiú','7D0D':'nà','7D0E':'zī','7D0F':'tǒu','7D10':'niǔ','7D11':'fóu','7D12':'jiè','7D13':'shū','7D14':'chún','7D15':'pí/pī','7D16':'yǐn','7D17':'shā','7D18':'hóng','7D19':'zhǐ','7D1A':'jí','7D1B':'fēn','7D1C':'yún','7D1D':'rén','7D1E':'dǎn','7D1F':'jīn','7D20':'sù','7D21':'fǎng','7D22':'suǒ','7D23':'cuì','7D24':'jiǔ','7D25':'zhá','7D26':'bā','7D27':'jǐn','7D28':'fū','7D29':'zhì','7D2A':'qī','7D2B':'zǐ','7D2C':'chóu','7D2D':'hóng','7D2E':'zhá/zā','7D2F':'lèi/léi/lěi','7D30':'xì','7D31':'fú','7D32':'xiè','7D33':'shēn','7D34':'bèi','7D35':'zhù','7D36':'qǔ/qū','7D37':'líng','7D38':'zhù','7D39':'shào','7D3A':'gàn','7D3B':'yāng','7D3C':'fú','7D3D':'tuó','7D3E':'zhěn','7D3F':'dài','7D40':'chù','7D41':'shī','7D42':'zhōng','7D43':'xián','7D44':'zǔ','7D45':'jiǒng','7D46':'bàn','7D47':'jù','7D48':'pà','7D49':'shù','7D4A':'zuì','7D4B':'kuàng','7D4C':'jīng/jìng','7D4D':'rèn','7D4E':'hèng/háng','7D4F':'xiè','7D50':'jié/jiē','7D51':'zhū','7D52':'chóu','7D53':'guà','7D54':'bǎi','7D55':'jué','7D56':'kuàng','7D57':'hú','7D58':'cì','7D59':'gēng','7D5A':'gēng','7D5B':'tāo','7D5C':'xié/jié','7D5D':'kù','7D5E':'jiǎo/jiǎ','7D5F':'quān','7D60':'gǎi','7D61':'luò/lào','7D62':'xuàn','7D63':'bēng/pǐng','7D64':'xiàn','7D65':'fú','7D66':'gěi/jǐ','7D67':'tóng','7D68':'róng','7D69':'tiào','7D6A':'yīn','7D6B':'lěi','7D6C':'xiè','7D6D':'quàn','7D6E':'xù','7D6F':'hài','7D70':'dié','7D71':'tǒng','7D72':'sī','7D73':'jiàng','7D74':'xiáng','7D75':'huì','7D76':'jué','7D77':'zhí','7D78':'jiǎn','7D79':'juàn','7D7A':'chī','7D7B':'miǎn','7D7C':'zhěn','7D7D':'lǚ','7D7E':'chéng','7D7F':'qiú','7D80':'shū','7D81':'bǎng','7D82':'tǒng','7D83':'xiāo','7D84':'wàn','7D85':'qīn','7D86':'gěng','7D87':'xiǔ','7D88':'tí/dì/tì','7D89':'xiù','7D8A':'xié','7D8B':'hóng','7D8C':'xì','7D8D':'fú','7D8E':'tíng','7D8F':'suī/suí','7D90':'duì','7D91':'kǔn','7D92':'fū','7D93':'jīng/jìng','7D94':'hù','7D95':'zhī','7D96':'yán','7D97':'jiǒng','7D98':'féng','7D99':'jì','7D9A':'xù','7D9B':'rěn','7D9C':'zòng/zèng/zōng','7D9D':'lǐn','7D9E':'duǒ','7D9F':'lì','7DA0':'lǜ','7DA1':'liáng','7DA2':'chóu','7DA3':'quǎn','7DA4':'shào','7DA5':'qì','7DA6':'qí','7DA7':'zhǔn','7DA8':'qí','7DA9':'wǎn','7DAA':'qiàn','7DAB':'xiàn','7DAC':'shòu','7DAD':'wéi','7DAE':'qǐ/qǐng','7DAF':'táo','7DB0':'wǎn','7DB1':'gāng','7DB2':'wǎng','7DB3':'bēng/běng/bèng','7DB4':'zhuì','7DB5':'cǎi','7DB6':'guǒ','7DB7':'cuì','7DB8':'lún/guān','7DB9':'liǔ','7DBA':'qǐ','7DBB':'zhàn','7DBC':'bēi','7DBD':'chuò','7DBE':'líng','7DBF':'mián','7DC0':'qī','7DC1':'jié','7DC2':'tān','7DC3':'zōng','7DC4':'gǔn','7DC5':'zōu','7DC6':'yì','7DC7':'zī','7DC8':'xìng','7DC9':'liǎng','7DCA':'jǐn','7DCB':'fēi','7DCC':'ruí','7DCD':'mín','7DCE':'yù','7DCF':'zǒng','7DD0':'fán','7DD1':'lǜ','7DD2':'xù','7DD3':'yīng','7DD4':'shàng','7DD5':'qí','7DD6':'xù','7DD7':'xiāng','7DD8':'jiān','7DD9':'kè','7DDA':'xiàn','7DDB':'ruǎn','7DDC':'mián','7DDD':'jī/qī','7DDE':'duàn','7DDF':'zhòng','7DE0':'dì','7DE1':'mín','7DE2':'miáo','7DE3':'yuán','7DE4':'xiè','7DE5':'bǎo','7DE6':'sī','7DE7':'qiū','7DE8':'biān','7DE9':'huǎn','7DEA':'gēng','7DEB':'zǒng','7DEC':'miǎn','7DED':'wèi','7DEE':'fù','7DEF':'wěi','7DF0':'yú','7DF1':'gōu','7DF2':'miǎo','7DF3':'jié','7DF4':'liàn','7DF5':'zōng','7DF6':'biàn/pián','7DF7':'yùn','7DF8':'yīn','7DF9':'tí','7DFA':'guā','7DFB':'zhì','7DFC':'yūn','7DFD':'chēng','7DFE':'chán','7DFF':'dài','7E00':'jiā','7E01':'yuán','7E02':'zǒng','7E03':'xū','7E04':'shéng','7E05':'wēi','7E06':'gēng','7E07':'*','7E08':'yíng','7E09':'jìn','7E0A':'yì','7E0B':'zhuì','7E0C':'nì','7E0D':'bāng','7E0E':'gǔ','7E0F':'pán','7E10':'zhòu','7E11':'jiān','7E12':'cuǒ','7E13':'quán','7E14':'shuǎng','7E15':'yūn','7E16':'xiá','7E17':'shuāi','7E18':'xī','7E19':'róng','7E1A':'tāo','7E1B':'fú','7E1C':'yún','7E1D':'zhěn','7E1E':'gǎo','7E1F':'rù','7E20':'hú','7E21':'zǎi','7E22':'téng','7E23':'xiàn/xuán','7E24':'sù','7E25':'zhěn','7E26':'zòng','7E27':'tāo','7E28':'huǎng','7E29':'cài','7E2A':'bì/biè','7E2B':'féng/fèng','7E2C':'cù','7E2D':'lí','7E2E':'suō/sù','7E2F':'yǐn','7E30':'xǐ','7E31':'zòng/zōng','7E32':'léi','7E33':'zhuàn','7E34':'qiàn','7E35':'màn','7E36':'zhí','7E37':'lǚ','7E38':'mò','7E39':'piǎo/piāo','7E3A':'lián','7E3B':'mí','7E3C':'xuàn','7E3D':'zǒng','7E3E':'jī','7E3F':'shān','7E40':'suì','7E41':'fán/pó','7E42':'shuài','7E43':'bēng','7E44':'yī','7E45':'sāo','7E46':'móu/miào/miù','7E47':'zhòu/yáo/yóu','7E48':'qiǎng','7E49':'hún','7E4A':'xiān','7E4B':'xì/jì','7E4C':'shǎ/zōng','7E4D':'xiù','7E4E':'rán','7E4F':'xuàn','7E50':'huì','7E51':'qiāo','7E52':'zēng/zèng','7E53':'zuǒ','7E54':'zhī','7E55':'shàn','7E56':'sǎn','7E57':'lín','7E58':'yù','7E59':'fān','7E5A':'liáo','7E5B':'chuò','7E5C':'zūn','7E5D':'jiàn','7E5E':'rào/rǎo','7E5F':'chǎn','7E60':'ruǐ','7E61':'xiù','7E62':'huì','7E63':'huà','7E64':'zuǎn','7E65':'xī','7E66':'qiǎng','7E67':'yún','7E68':'dá','7E69':'shéng','7E6A':'huì','7E6B':'xì/jì','7E6C':'sè','7E6D':'jiǎn','7E6E':'jiāng','7E6F':'huán','7E70':'qiāo','7E71':'cōng','7E72':'jiè','7E73':'jiǎo/jiǎ/zhuó','7E74':'bò','7E75':'chán','7E76':'yì','7E77':'náo','7E78':'suì','7E79':'yì','7E7A':'shǎi','7E7B':'xū','7E7C':'jì','7E7D':'bīn','7E7E':'qiǎn','7E7F':'jiàn/kǎn','7E80':'pú','7E81':'xūn','7E82':'zuǎn','7E83':'qí','7E84':'péng','7E85':'lì','7E86':'mò','7E87':'lèi','7E88':'xié','7E89':'zuǎn','7E8A':'kuàng','7E8B':'yōu','7E8C':'xù','7E8D':'léi','7E8E':'xiān','7E8F':'chán','7E90':'jiǎo','7E91':'lú','7E92':'chán','7E93':'yīng','7E94':'cái','7E95':'xiāng','7E96':'xiān','7E97':'zuī','7E98':'zuǎn','7E99':'luò','7E9A':'xǐ','7E9B':'dào','7E9C':'làn/lǎn','7E9D':'léi','7E9E':'liàn','7E9F':'mì','7EA0':'jiū','7EA1':'yū','7EA2':'hóng','7EA3':'zhòu','7EA4':'xiān/qiàn','7EA5':'hé/gē','7EA6':'yuē','7EA7':'jí','7EA8':'wán','7EA9':'kuàng','7EAA':'jì/jǐ','7EAB':'rèn','7EAC':'wěi','7EAD':'yún','7EAE':'hóng','7EAF':'chún','7EB0':'pī','7EB1':'shā','7EB2':'gāng','7EB3':'nà','7EB4':'rèn','7EB5':'zòng','7EB6':'lún/guān','7EB7':'fēn','7EB8':'zhǐ','7EB9':'wén','7EBA':'fǎng','7EBB':'zhù','7EBC':'zhèn','7EBD':'niǔ','7EBE':'shū','7EBF':'xiàn','7EC0':'gàn','7EC1':'xiè','7EC2':'fú','7EC3':'liàn','7EC4':'zǔ','7EC5':'shēn','7EC6':'xì','7EC7':'zhī','7EC8':'zhōng','7EC9':'zhòu','7ECA':'bàn','7ECB':'fú','7ECC':'chù','7ECD':'shào','7ECE':'yì','7ECF':'jīng/jìng','7ED0':'dài','7ED1':'bǎng','7ED2':'róng','7ED3':'jié/jiē','7ED4':'kù','7ED5':'rào','7ED6':'dié','7ED7':'háng','7ED8':'huì','7ED9':'gěi/jǐ','7EDA':'xuàn','7EDB':'jiàng','7EDC':'luò/lào','7EDD':'jué','7EDE':'jiǎo','7EDF':'tǒng','7EE0':'gěng','7EE1':'xiāo','7EE2':'juàn','7EE3':'xiù','7EE4':'xì','7EE5':'suí','7EE6':'tāo','7EE7':'jì','7EE8':'tí/tì','7EE9':'jì','7EEA':'xù','7EEB':'líng','7EEC':'yīn','7EED':'xù','7EEE':'qǐ','7EEF':'fēi','7EF0':'chuò/chāo/chuo','7EF1':'shàng','7EF2':'gǔn','7EF3':'shéng','7EF4':'wéi','7EF5':'mián','7EF6':'shòu','7EF7':'bēng/běng/bèng','7EF8':'chóu','7EF9':'táo','7EFA':'liǔ','7EFB':'quǎn','7EFC':'zōng','7EFD':'zhàn','7EFE':'wǎn','7EFF':'lǜ/lù','7F00':'zhuì','7F01':'zī','7F02':'kè','7F03':'xiāng','7F04':'jiān','7F05':'miǎn','7F06':'lǎn','7F07':'tí','7F08':'miǎo','7F09':'jī/qī','7F0A':'yùn','7F0B':'huì','7F0C':'sī','7F0D':'duǒ','7F0E':'duàn','7F0F':'biàn/pián','7F10':'xiàn','7F11':'gōu','7F12':'zhuì','7F13':'huǎn','7F14':'dì','7F15':'lǚ','7F16':'biān','7F17':'mín','7F18':'yuán','7F19':'jìn','7F1A':'fù','7F1B':'rù','7F1C':'zhěn','7F1D':'féng/fèng','7F1E':'cuī','7F1F':'gǎo','7F20':'chán','7F21':'lí','7F22':'yì','7F23':'jiān','7F24':'bīn','7F25':'piāo','7F26':'màn','7F27':'léi','7F28':'yīng','7F29':'suō/sù','7F2A':'móu/miào/miù','7F2B':'sāo','7F2C':'xié','7F2D':'liáo','7F2E':'shàn','7F2F':'zēng','7F30':'jiāng','7F31':'qiǎn','7F32':'qiāo','7F33':'huán','7F34':'jiǎo','7F35':'zuǎn','7F36':'fǒu','7F37':'xiè','7F38':'gāng','7F39':'fǒu','7F3A':'quē','7F3B':'fǒu','7F3C':'quē','7F3D':'bō','7F3E':'píng','7F3F':'hòu','7F40':'diào/zhào','7F41':'gāng','7F42':'yīng','7F43':'yīng','7F44':'qìng','7F45':'xià','7F46':'guàn','7F47':'zūn','7F48':'tán','7F49':'cāng/chēng','7F4A':'qìng','7F4B':'wèng','7F4C':'yīng','7F4D':'léi','7F4E':'tán','7F4F':'lú','7F50':'guàn','7F51':'wǎng','7F52':'gāng','7F53':'wǎng','7F54':'wǎng','7F55':'hǎn','7F56':'wǎng','7F57':'luó','7F58':'fú','7F59':'mí','7F5A':'fá','7F5B':'gū','7F5C':'zhǔ','7F5D':'jū','7F5E':'máo','7F5F':'gǔ','7F60':'mín','7F61':'gāng','7F62':'bà','7F63':'guà','7F64':'tí','7F65':'juàn','7F66':'fū','7F67':'lín/sēn','7F68':'yǎn','7F69':'zhào','7F6A':'zuì','7F6B':'guà','7F6C':'zhuó','7F6D':'yù','7F6E':'zhì','7F6F':'ǎn','7F70':'fá','7F71':'lǎn','7F72':'shǔ','7F73':'sī','7F74':'pí','7F75':'mà','7F76':'liǔ','7F77':'bà/ba/pí','7F78':'fá','7F79':'lí','7F7A':'chāo','7F7B':'wèi','7F7C':'bì','7F7D':'jì','7F7E':'zēng','7F7F':'tóng','7F80':'liǔ','7F81':'jī','7F82':'juàn','7F83':'mì','7F84':'zhào','7F85':'luó/luō','7F86':'pí/biāo','7F87':'jī','7F88':'jī','7F89':'luán','7F8A':'yáng','7F8B':'miē','7F8C':'qiāng','7F8D':'tà','7F8E':'měi','7F8F':'yǎng','7F90':'yǒu','7F91':'yǒu','7F92':'fén','7F93':'bā','7F94':'gāo','7F95':'yàng','7F96':'gǔ','7F97':'qiāng','7F98':'zāng','7F99':'gāo','7F9A':'líng','7F9B':'yì','7F9C':'zhù','7F9D':'dī','7F9E':'xiū','7F9F':'qiǎng','7FA0':'yí','7FA1':'xiàn','7FA2':'róng','7FA3':'qún','7FA4':'qún','7FA5':'qiān/qiǎng','7FA6':'huán','7FA7':'suō','7FA8':'xiàn','7FA9':'yì','7FAA':'yǎng','7FAB':'qiāng','7FAC':'xián','7FAD':'yú','7FAE':'gēng','7FAF':'jié','7FB0':'tāng','7FB1':'yuán','7FB2':'xī','7FB3':'fán','7FB4':'shān','7FB5':'fèn','7FB6':'shān','7FB7':'liǎn','7FB8':'léi','7FB9':'gēng','7FBA':'nóu','7FBB':'qiàng','7FBC':'chàn','7FBD':'yǔ','7FBE':'gòng','7FBF':'yì','7FC0':'chóng/chōng','7FC1':'wēng','7FC2':'fēn','7FC3':'hóng','7FC4':'chì','7FC5':'chì','7FC6':'cuí','7FC7':'fú/pèi','7FC8':'xiá','7FC9':'pěn','7FCA':'yì','7FCB':'lā','7FCC':'yì','7FCD':'pī/pō','7FCE':'líng','7FCF':'liù','7FD0':'zhì','7FD1':'qú','7FD2':'xí','7FD3':'xié','7FD4':'xiáng','7FD5':'xī','7FD6':'xì','7FD7':'qí','7FD8':'qiáo/qiào','7FD9':'huì','7FDA':'huī','7FDB':'shù','7FDC':'sè','7FDD':'hóng','7FDE':'jiāng','7FDF':'dí/zhái','7FE0':'cuì','7FE1':'fěi','7FE2':'tāo','7FE3':'shà','7FE4':'chì','7FE5':'zhù','7FE6':'jiǎn','7FE7':'xuān','7FE8':'shì','7FE9':'piān','7FEA':'zōng','7FEB':'wàn','7FEC':'huī','7FED':'hóu','7FEE':'hé','7FEF':'hè','7FF0':'hàn','7FF1':'áo','7FF2':'piāo','7FF3':'yì','7FF4':'lián','7FF5':'qú','7FF6':'áo','7FF7':'lín','7FF8':'pěn','7FF9':'qiáo/qiào','7FFA':'áo','7FFB':'fān','7FFC':'yì','7FFD':'huì','7FFE':'xuān','7FFF':'dào','800A':'dié','800B':'dié','800C':'ér','800D':'shuǎ','800E':'ruǎn','800F':'ér','801A':'pī','801B':'chí','801C':'sì','801D':'qù','801E':'jiā','801F':'jù','802A':'pǎng','802B':'zé','802C':'lóu','802D':'jī','802E':'lào','802F':'huò','803A':'yún','803B':'chǐ','803C':'dān','803D':'dān','803E':'hóng','803F':'gěng','804A':'liáo','804B':'lóng','804C':'zhí','804D':'níng','804E':'tiāo','804F':'ér/èr','805A':'jù','805B':'bì','805C':'dǐ','805D':'guó','805E':'wén/wèn','805F':'xù','806A':'cōng','806B':'lián','806C':'wěng','806D':'kuì','806E':'lián','806F':'lián','807A':'qiē/qié','807B':'jī','807C':'tīng','807D':'tīng/tìng','807E':'lóng','807F':'yù','808A':'yì','808B':'lèi','808C':'jī','808D':'qiú','808E':'kěn','808F':'cào','809A':'dù/dǔ','809B':'gāng','809C':'róng','809D':'gān','809E':'chā','809F':'wò','80A0':'cháng','80A1':'gǔ','80A2':'zhī','80A3':'qín','80A4':'fū','80A5':'féi','80A6':'bān','80A7':'pēi','80A8':'pàng','80A9':'jiān','80AA':'fáng','80AB':'zhūn','80AC':'yóu','80AD':'nà','80AE':'āng','80AF':'kěn','80B0':'rán','80B1':'gōng','80B2':'yù/yō','80B3':'wěn','80B4':'yáo','80B5':'jìn','80B6':'pí','80B7':'qiǎn','80B8':'xì','80B9':'xì','80BA':'fèi','80BB':'kěn','80BC':'jǐng','80BD':'tài','80BE':'shèn','80BF':'zhǒng','80C0':'zhàng','80C1':'xié','80C2':'shèn','80C3':'wèi','80C4':'zhòu','80C5':'dié','80C6':'dǎn','80C7':'fèi','80C8':'bá','80C9':'bó','80CA':'qú','80CB':'tián','80CC':'bèi/bēi','80CD':'guā','80CE':'tāi','80CF':'zǐ','80D0':'kū','80D1':'zhī','80D2':'nì','80D3':'píng','80D4':'zì','80D5':'fù','80D6':'pàng/pán','80D7':'zhēn','80D8':'xián','80D9':'zuò','80DA':'pēi','80DB':'jiǎ','80DC':'shèng','80DD':'zhī','80DE':'bāo','80DF':'mǔ','80E0':'qū','80E1':'hú','80E2':'kē','80E3':'yǐ','80E4':'yìn','80E5':'xū','80E6':'yāng','80E7':'lóng','80E8':'dòng','80E9':'kǎ','80EA':'lú','80EB':'jìng','80EC':'nǔ','80ED':'yān','80EE':'pāng','80EF':'kuà','80F0':'yí','80F1':'guāng','80F2':'hǎi/gǎi','80F3':'gē','80F4':'dòng','80F5':'zhì','80F6':'jiāo','80F7':'xiōng','80F8':'xiōng','80F9':'ér','80FA':'àn','80FB':'xíng','80FC':'pián','80FD':'néng','80FE':'zì','80FF':'guī','810A':'jǐ','810B':'xié','810C':'nīn','810D':'kuài','810E':'sà','810F':'zàng/zāng','811A':'jiǎo/jué','811B':'jìng','811C':'yǒu','811D':'hēng','811E':'cuǒ','811F':'liè','812A':'xìn','812B':'tuō','812C':'pāo','812D':'chéng','812E':'něi','812F':'fǔ/pú','813A':'cuì','813B':'jié','813C':'liǎng','813D':'shuí','813E':'pí','813F':'biāo','814A':'là','814B':'yè','814C':'ā/yān','814D':'rěn','814E':'shèn','814F':'chuò/duó','815A':'dìng','815B':'wū','815C':'méi','815D':'ruǎn','815E':'zhuàn/dùn','815F':'zhì','816A':'yùn','816B':'zhǒng','816C':'róu','816D':'è','816E':'sāi','816F':'tú','817A':'xiàn','817B':'nì','817C':'miǎn','817D':'wà','817E':'téng','817F':'tuǐ','818A':'bó/bo','818B':'liáo','818C':'jí','818D':'pí','818E':'xié','818F':'gāo/gào','819A':'fū','819B':'táng','819C':'mó','819D':'xī','819E':'zhuān','819F':'lǜ','81A0':'jiāo','81A1':'yìng','81A2':'lǘ','81A3':'zhì','81A4':'xuě','81A5':'chūn','81A6':'lìn','81A7':'tóng','81A8':'péng','81A9':'nì','81AA':'chuài','81AB':'liáo','81AC':'cuì','81AD':'guī','81AE':'xiāo','81AF':'tēng','81B0':'fán','81B1':'zhí','81B2':'jiāo','81B3':'shàn','81B4':'hū','81B5':'cuì','81B6':'rùn','81B7':'xìn','81B8':'suǐ','81B9':'fèn','81BA':'yīng','81BB':'shān','81BC':'guā','81BD':'dǎn','81BE':'kuài','81BF':'nóng','81C0':'tún','81C1':'lián','81C2':'bì/bei','81C3':'yōng','81C4':'jué','81C5':'chù','81C6':'yì','81C7':'juǎn','81C8':'là/xī','81C9':'liǎn','81CA':'sāo/sào','81CB':'tún','81CC':'gǔ','81CD':'qí','81CE':'cuì','81CF':'bìn','81D0':'xūn','81D1':'nào','81D2':'huò','81D3':'zàng','81D4':'xiàn','81D5':'biāo','81D6':'xìng','81D7':'kuān','81D8':'là/xī','81D9':'yān','81DA':'lú','81DB':'hù','81DC':'zā','81DD':'luǒ','81DE':'qú','81DF':'zàng','81E0':'luán','81E1':'ní','81E2':'zā','81E3':'chén','81E4':'qiān','81E5':'wò','81E6':'guàng/wǎng','81E7':'zāng','81E8':'lín','81E9':'guàng','81EA':'zì','81EB':'jiǎo','81EC':'niè','81ED':'chòu/xiù','81EE':'jì','81EF':'gāo','81F0':'chòu/xiù','81F1':'mián','81F2':'niè','81F3':'zhì','81F4':'zhì','81F5':'gé','81F6':'jiàn','81F7':'dié','81F8':'zhì','81F9':'xiū','81FA':'tái/tāi','81FB':'zhēn','81FC':'jiù','81FD':'xiàn','81FE':'yú','81FF':'chá','820A':'jiù','820B':'xìn','820C':'shé','820D':'shè/shě','820E':'shě/shè','820F':'jiǔ','821A':'tiàn','821B':'chuǎn','821C':'shùn','821D':'xiá','821E':'wǔ','821F':'zhōu','822A':'háng','822B':'fǎng','822C':'bān','822D':'bǐ','822E':'lú','822F':'zhōng','823A':'jiá/xiá','823B':'lú','823C':'hóng','823D':'páng','823E':'xī','823F':'kuā','824A':'bó','824B':'měng','824C':'niàn','824D':'jū','824E':'huáng','824F':'shǒu','825A':'cáo','825B':'lóu','825C':'dài','825D':'xuě','825E':'yào','825F':'chōng','826A':'lǔ','826B':'lú','826C':'chán','826D':'shuāng','826E':'gèn','826F':'liáng','827A':'yì','827B':'lè','827C':'tīng','827D':'jiāo','827E':'ài/yì','827F':'nǎi','828A':'qiān','828B':'yù','828C':'yù','828D':'sháo','828E':'xiōng','828F':'dù','829A':'tún','829B':'wěi','829C':'wú','829D':'zhī','829E':'qǐ','829F':'shān','82A0':'wén','82A1':'qiàn','82A2':'rén','82A3':'fóu','82A4':'kōu','82A5':'jiè/gài','82A6':'lú/lǔ','82A7':'zhù','82A8':'jī','82A9':'qín','82AA':'qí','82AB':'yán/yuán','82AC':'fēn','82AD':'bā','82AE':'ruì','82AF':'xīn/xìn','82B0':'jì','82B1':'huā','82B2':'huā','82B3':'fāng','82B4':'wù','82B5':'jué','82B6':'gōu','82B7':'zhǐ','82B8':'yún','82B9':'qín','82BA':'ǎo','82BB':'chú','82BC':'mào','82BD':'yá','82BE':'fèi/fú','82BF':'rèng','82C0':'háng','82C1':'cōng','82C2':'yín','82C3':'yǒu','82C4':'biàn','82C5':'yì','82C6':'qiē','82C7':'wěi','82C8':'lì','82C9':'pǐ','82CA':'è','82CB':'xiàn','82CC':'cháng','82CD':'cāng','82CE':'zhù','82CF':'sū','82D0':'yí/tí','82D1':'yuàn','82D2':'rǎn','82D3':'líng','82D4':'tái/tāi','82D5':'tiáo/sháo','82D6':'dí','82D7':'miáo','82D8':'qǐng','82D9':'lì','82DA':'ráo','82DB':'kē','82DC':'mù','82DD':'pèi','82DE':'bāo','82DF':'gǒu','82E0':'mín','82E1':'yǐ','82E2':'yǐ','82E3':'jù/qǔ','82E4':'piě','82E5':'ruò','82E6':'kǔ','82E7':'zhù/níng','82E8':'nǐ','82E9':'bó','82EA':'bǐng','82EB':'shān/shàn','82EC':'qiú','82ED':'yǎo','82EE':'xiān','82EF':'běn','82F0':'hóng','82F1':'yīng','82F2':'zhǎ','82F3':'dōng','82F4':'jū','82F5':'dié','82F6':'nié','82F7':'gān','82F8':'hū','82F9':'píng','82FA':'méi','82FB':'fú','82FC':'shēng','82FD':'gū','82FE':'bì','82FF':'wèi','830A':'zī','830B':'dǐ','830C':'chí','830D':'gǒu','830E':'jīng','830F':'lóng','831A':'yìn','831B':'gèn','831C':'qiàn/xī','831D':'chǎi','831E':'chén','831F':'yù','832A':'guāng','832B':'máng','832C':'chá','832D':'jiāo','832E':'jiāo','832F':'fú','833A':'chōng','833B':'mǎng','833C':'tóng','833D':'zhòng','833E':'qiān','833F':'zhú','834A':'jīng','834B':'ér','834C':'àn','834D':'shōu','834E':'chí','834F':'rěn','835A':'jiá','835B':'ráo','835C':'bì','835D':'cè','835E':'qiáo','835F':'huì','836A':'sūn','836B':'yìn','836C':'mǎi','836D':'hóng','836E':'zhòu','836F':'yào','837A':'yún','837B':'dí','837C':'tú','837D':'suī','837E':'suī','837F':'chéng','838A':'zhuāng','838B':'jí','838C':'duó','838D':'qiú','838E':'shā/suō','838F':'suō','839A':'yán/yàn','839B':'tíng','839C':'yóu','839D':'cuò','839E':'guān/guǎn/wǎn','839F':'hàn','83A0':'yǒu','83A1':'cuò','83A2':'jiá','83A3':'wàng','83A4':'yóu','83A5':'niǔ/chǒu','83A6':'shāo','83A7':'xiàn','83A8':'làng/liáng','83A9':'fú','83AA':'é','83AB':'mò','83AC':'wèn','83AD':'jié','83AE':'nán','83AF':'mù','83B0':'kǎn','83B1':'lái','83B2':'lián','83B3':'shì/shí','83B4':'wō','83B5':'tú/tù','83B6':'xiān','83B7':'huò','83B8':'yóu','83B9':'yíng','83BA':'yīng','83BB':'jin','83BC':'chún','83BD':'mǎng','83BE':'mǎng','83BF':'cì','83C0':'yù/wǎn','83C1':'jīng','83C2':'dì','83C3':'qú','83C4':'dōng','83C5':'jiān','83C6':'zōu','83C7':'gū','83C8':'lā','83C9':'lù/lǜ','83CA':'jú','83CB':'wèi','83CC':'jùn/jūn','83CD':'niè','83CE':'kūn','83CF':'hé','83D0':'pú','83D1':'zāi','83D2':'gǎo','83D3':'guǒ','83D4':'fú','83D5':'lún','83D6':'chāng','83D7':'chóu','83D8':'sōng','83D9':'chuí','83DA':'zhàn','83DB':'mén','83DC':'cài','83DD':'bá','83DE':'lí','83DF':'tù/tú','83E0':'bō','83E1':'hàn','83E2':'bào','83E3':'qìn','83E4':'juǎn','83E5':'xī','83E6':'qín','83E7':'dǐ','83E8':'jiē','83E9':'pú','83EA':'dàng','83EB':'jǐn','83EC':'zhǎo','83ED':'tái','83EE':'gēng','83EF':'huá/huà','83F0':'gū','83F1':'líng','83F2':'fēi/fěi','83F3':'jīn','83F4':'àn','83F5':'wǎng','83F6':'běng','83F7':'zhǒu','83F8':'yān','83F9':'zū','83FA':'jiān','83FB':'lǐn','83FC':'tǎn','83FD':'shū','83FE':'tián','83FF':'dào','840A':'lái','840B':'qī','840C':'méng','840D':'píng','840E':'wěi','840F':'dàn','841A':'tuò','841B':'jiū','841C':'tiē','841D':'luó','841E':'bì','841F':'yì','842A':'kē','842B':'xiàng','842C':'wàn/mò','842D':'yǔ','842E':'yù','842F':'fù','843A':'mào','843B':'ān','843C':'è','843D':'luò/là/lào','843E':'yíng','843F':'huó','844A':'ān','844B':'qú','844C':'jiān','844D':'fú','844E':'lǜ','844F':'lǜ','845A':'shèn/rèn','845B':'gě/gé','845C':'qiā','845D':'jìng','845E':'mǐ','845F':'huáng','846A':'jì','846B':'hú','846C':'zàng','846D':'jiā','846E':'duàn','846F':'yào','847A':'qì','847B':'lán','847C':'zōng','847D':'yāo','847E':'yuān','847F':'méi','848A':'huò','848B':'jiǎng','848C':'lóu','848D':'wěi','848E':'pài','848F':'yǒng/yǒu','849A':'hé','849B':'quē','849C':'suàn','849D':'yuán','849E':'lì','849F':'jǔ','84A0':'xí','84A1':'bàng','84A2':'chú','84A3':'xú','84A4':'tú','84A5':'liú','84A6':'huò','84A7':'zhēn','84A8':'qiàn','84A9':'zū','84AA':'pò','84AB':'cuō','84AC':'yuān','84AD':'chú','84AE':'yù','84AF':'kuǎi','84B0':'pán','84B1':'pú','84B2':'pú','84B3':'nà','84B4':'shuò','84B5':'xī','84B6':'fén','84B7':'yún','84B8':'zhēng','84B9':'jiān','84BA':'jí','84BB':'ruò','84BC':'cāng','84BD':'ēn','84BE':'mí','84BF':'hāo','84C0':'sūn','84C1':'zhēn','84C2':'míng','84C3':'sōu/sǒu','84C4':'xù','84C5':'liú','84C6':'xí','84C7':'gū','84C8':'láng','84C9':'róng','84CA':'wěng','84CB':'gài/gě/hé','84CC':'cuò','84CD':'shī','84CE':'táng','84CF':'luǒ','84D0':'rù','84D1':'suō','84D2':'xiān','84D3':'bèi','84D4':'yǎo','84D5':'guì','84D6':'bì','84D7':'zǒng','84D8':'gǔn','84D9':'zuò','84DA':'xiū','84DB':'cè','84DC':'pèi','84DD':'lán/lan','84DE':'dàn','84DF':'jì','84E0':'lí','84E1':'cān','84E2':'láng','84E3':'yù','84E4':'líng','84E5':'yíng','84E6':'mò','84E7':'diào','84E8':'xiū','84E9':'wù','84EA':'tōng','84EB':'zhú','84EC':'péng','84ED':'ān','84EE':'lián','84EF':'cōng','84F0':'xǐ','84F1':'píng','84F2':'qiū/ōu','84F3':'jìn','84F4':'chún','84F5':'jié','84F6':'wěi','84F7':'tuī','84F8':'cáo','84F9':'yù','84FA':'yì','84FB':'jí','84FC':'liǎo','84FD':'bì','84FE':'lǔ','84FF':'xu','850A':'hǎn','850B':'dí','850C':'sù','850D':'lù','850E':'shè','850F':'shāng','851A':'yù/wèi','851B':'hú','851C':'áo','851D':'mǐ','851E':'lóu','851F':'cù','852A':'jiàn','852B':'niān','852C':'shū','852D':'yìn/yīn','852E':'kuì','852F':'chén','853A':'lìn','853B':'kòu','853C':'ǎi','853D':'bì','853E':'lí','853F':'wěi','854A':'ruǐ','854B':'ruǐ','854C':'lěi','854D':'yú','854E':'qiáo','854F':'chú','855A':'è','855B':'tí','855C':'fěi','855D':'jué','855E':'zuì','855F':'fà','856A':'wú','856B':'tóng','856C':'sī','856D':'xiāo','856E':'xì','856F':'yōng','857A':'jí','857B':'hóng','857C':'sì','857D':'dēng','857E':'lěi','857F':'xuān','858A':'jì','858B':'cí','858C':'xiāng','858D':'luàn','858E':'miè','858F':'yì','859A':'táng','859B':'xuē','859C':'bì','859D':'zhān','859E':'sūn','859F':'liàn/xiān','85A0':'fán','85A1':'dǐng','85A2':'xiào','85A3':'gǔ','85A4':'xiè','85A5':'shǔ','85A6':'jiàn','85A7':'kǎo','85A8':'hōng','85A9':'sà','85AA':'xīn','85AB':'xūn','85AC':'yào','85AD':'bài','85AE':'sǒu','85AF':'shǔ','85B0':'xūn','85B1':'duì','85B2':'pín','85B3':'wěi','85B4':'néng','85B5':'chóu','85B6':'mái','85B7':'rú','85B8':'piāo','85B9':'tái','85BA':'qí/jì','85BB':'zǎo','85BC':'chén','85BD':'zhēn','85BE':'ěr','85BF':'nǐ','85C0':'yíng','85C1':'gǎo','85C2':'còng','85C3':'xiāo','85C4':'qí','85C5':'fá','85C6':'jiǎn','85C7':'xù','85C8':'kuī','85C9':'jiè/jí','85CA':'biǎn','85CB':'dí','85CC':'mì','85CD':'lán/la','85CE':'jìn','85CF':'cáng/zàng','85D0':'miǎo','85D1':'qióng','85D2':'qiè','85D3':'xiǎn','85D4':'liáo','85D5':'ǒu','85D6':'xián','85D7':'sù','85D8':'lǘ','85D9':'yì','85DA':'xù','85DB':'xiě','85DC':'lí','85DD':'yì','85DE':'lǎ','85DF':'lěi','85E0':'jiào','85E1':'dí','85E2':'zhǐ','85E3':'pí','85E4':'téng','85E5':'yào/yuè','85E6':'mò/mó','85E7':'huǎn','85E8':'biāo','85E9':'fān','85EA':'sǒu','85EB':'tán','85EC':'tuī','85ED':'qióng','85EE':'qiáo','85EF':'wèi','85F0':'liú','85F1':'huí','85F2':'shū','85F3':'gǎo','85F4':'yùn','85F5':'bāo/bǎo','85F6':'lì','85F7':'zhū','85F8':'zhū','85F9':'ǎi','85FA':'lìn','85FB':'zǎo','85FC':'xuān','85FD':'chèn','85FE':'lài','85FF':'huò','860A':'yùn','860B':'pín/píng','860C':'yǔ','860D':'xūn','860E':'jì','860F':'jiōng','861A':'xiǎn/lì','861B':'yú','861C':'jú','861D':'liàn','861E':'liàn/liǎn','861F':'yǐn','862A':'mí','862B':'lán','862C':'kuī','862D':'lán','862E':'jì','862F':'dàng','863A':'lí','863B':'jì','863C':'mí','863D':'lěi','863E':'huài','863F':'luó','864A':'luán','864B':'mén','864C':'biē','864D':'hū','864E':'hǔ','864F':'lǔ','865A':'xū','865B':'xū','865C':'lǔ','865D':'hǔ/hù','865E':'yú','865F':'hào/háo','866A':'shú','866B':'chóng','866C':'qiú','866D':'diāo','866E':'jǐ','866F':'qiú','867A':'huǐ/huī','867B':'méng','867C':'gè','867D':'suī','867E':'xiā','867F':'chài','868A':'wén','868B':'ruì','868C':'bàng/bèng','868D':'pí','868E':'yuè','868F':'yuè','869A':'qí','869B':'zhòng','869C':'yá','869D':'háo','869E':'mù','869F':'wáng','86A0':'fén','86A1':'fén','86A2':'háng','86A3':'gōng','86A4':'zǎo','86A5':'fǔ','86A6':'rán','86A7':'jiè','86A8':'fú','86A9':'chī','86AA':'dǒu','86AB':'bào','86AC':'xiǎn','86AD':'nǐ','86AE':'tè','86AF':'qiū','86B0':'yóu','86B1':'zhà','86B2':'píng','86B3':'chí','86B4':'yòu','86B5':'hé/kè','86B6':'hān','86B7':'jù','86B8':'lì','86B9':'fù','86BA':'rán','86BB':'zhá','86BC':'gǒu','86BD':'pí','86BE':'bǒ','86BF':'xián','86C0':'zhù','86C1':'diāo','86C2':'biě','86C3':'bǐng','86C4':'gū','86C5':'rán','86C6':'qū','86C7':'shé','86C8':'tiè','86C9':'líng','86CA':'gǔ','86CB':'dàn','86CC':'gǔ','86CD':'yíng','86CE':'lì','86CF':'chēng','86D0':'qū','86D1':'móu','86D2':'gé','86D3':'cì','86D4':'huí','86D5':'huí','86D6':'máng','86D7':'fù','86D8':'yáng','86D9':'wā','86DA':'liè','86DB':'zhū','86DC':'yī','86DD':'xián','86DE':'kuò','86DF':'jiāo','86E0':'lì','86E1':'yì','86E2':'píng','86E3':'jī','86E4':'há/gé','86E5':'shé','86E6':'yí','86E7':'wǎng','86E8':'mò','86E9':'qióng','86EA':'qiè','86EB':'guǐ','86EC':'gǒng','86ED':'zhì','86EE':'mán','86EF':'lǎo','86F0':'zhé','86F1':'jiá','86F2':'náo','86F3':'sī','86F4':'qí','86F5':'xīng','86F6':'liè','86F7':'qiú','86F8':'shāo/xiāo','86F9':'yǒng','86FA':'jiá','86FB':'tuì','86FC':'chē','86FD':'bài','86FE':'é','86FF':'hàn','870A':'lí','870B':'láng','870C':'bì','870D':'chú','870E':'yuān','870F':'yǒu','871A':'fēi/fěi','871B':'jū','871C':'mì','871D':'qí','871E':'qí','871F':'yù','872A':'tāo','872B':'kūn','872C':'gān','872D':'hàn','872E':'yù','872F':'bàng/bèng','873A':'ní','873B':'qīng','873C':'wèi','873D':'liǎng','873E':'guǒ','873F':'wān','874A':'dìng','874B':'là/zhà','874C':'kē','874D':'jí','874E':'xiē','874F':'tíng','875A':'róu','875B':'wēi','875C':'fù','875D':'yuán','875E':'mèi','875F':'wèi','876A':'tāng','876B':'zhū','876C':'zōng','876D':'tí','876E':'fù','876F':'yuán','877A':'jǔ','877B':'nǎn','877C':'lóu','877D':'chūn','877E':'róng','877F':'yíng','878A':'lián','878B':'sōu','878C':'bān','878D':'róng','878E':'róng','878F':'jí','879A':'nài','879B':'hé','879C':'hú','879D':'xī','879E':'mǎ/mā/mà','879F':'míng','87A0':'yì','87A1':'wén','87A2':'yíng','87A3':'téng/tè','87A4':'yǔ','87A5':'cāng','87A6':'sāo','87A7':'qí','87A8':'mǎn','87A9':'tiáo','87AA':'shāng','87AB':'shì','87AC':'cáo','87AD':'chī','87AE':'dì','87AF':'áo','87B0':'lù','87B1':'wèi','87B2':'zhì','87B3':'táng','87B4':'chén','87B5':'piāo','87B6':'qú','87B7':'pí','87B8':'yú','87B9':'jiàn','87BA':'luó','87BB':'lóu','87BC':'qǐn','87BD':'zhōng','87BE':'yǐn','87BF':'jiāng','87C0':'shuài','87C1':'wén','87C2':'jiāo','87C3':'wàn','87C4':'zhé','87C5':'zhè','87C6':'má','87C7':'má','87C8':'guō','87C9':'liào','87CA':'máo','87CB':'xī','87CC':'cōng','87CD':'lí','87CE':'mǎn','87CF':'xiāo','87D0':'cháng','87D1':'zhāng','87D2':'mǎng','87D3':'xiàng','87D4':'mò','87D5':'zī','87D6':'sī','87D7':'qiū','87D8':'tè','87D9':'zhí','87DA':'péng','87DB':'péng','87DC':'jiǎo','87DD':'qú','87DE':'bié','87DF':'liǎo','87E0':'pán','87E1':'guǐ','87E2':'xǐ','87E3':'jǐ','87E4':'zhuān','87E5':'huáng','87E6':'fèi','87E7':'láo','87E8':'jué','87E9':'jué','87EA':'huì','87EB':'yín','87EC':'chán','87ED':'jiāo','87EE':'shàn','87EF':'ráo/náo','87F0':'xiāo','87F1':'wú','87F2':'chóng','87F3':'xún','87F4':'sī','87F5':'chú','87F6':'chēng','87F7':'dāng','87F8':'lǐ/lí','87F9':'xiè','87FA':'shàn','87FB':'yǐ','87FC':'jǐng','87FD':'dá','87FE':'chán','87FF':'qì','880A':'lián','880B':'zhú','880C':'zé','880D':'xiē','880E':'mǎng','880F':'xiè/xiě','881A':'hè','881B':'miè','881C':'fán','881D':'léi','881E':'jié','881F':'là/zhà','882A':'lóng','882B':'lì','882C':'lóng','882D':'fēng','882E':'yē','882F':'pí','883A':'cán','883B':'mán','883C':'qú','883D':'jié','883E':'zhú','883F':'zhá','884A':'miè','884B':'shì','884C':'xíng/háng','884D':'yǎn','884E':'kàn','884F':'yuàn','885A':'hú','885B':'wèi','885C':'dào','885D':'chōng/chòng','885E':'wèi','885F':'dào','886A':'yí','886B':'shān','886C':'chèn','886D':'fū','886E':'gǔn','886F':'fēn','887A':'xié','887B':'rán','887C':'zhī','887D':'rèn','887E':'qīn','887F':'jīn','888A':'lǐng','888B':'dài','888C':'bào','888D':'páo','888E':'yào','888F':'zuò','889A':'bō/fú','889B':'dī','889C':'wà','889D':'fù','889E':'gǔn','889F':'zhì','88A0':'zhì','88A1':'rán','88A2':'pàn','88A3':'yì','88A4':'mào','88A5':'tuō/tuò','88A6':'nà','88A7':'kōu','88A8':'xuàn','88A9':'chān','88AA':'qū','88AB':'bèi','88AC':'yù','88AD':'xí','88AE':'mí','88AF':'bó','88B0':'làng','88B1':'fú','88B2':'yí','88B3':'chǐ','88B4':'kù','88B5':'rèn','88B6':'jiàng','88B7':'jiá/qiā','88B8':'cún','88B9':'mò','88BA':'jié','88BB':'ér','88BC':'gē','88BD':'rú','88BE':'zhū','88BF':'guī','88C0':'yīn','88C1':'cái','88C2':'liè','88C3':'kǎ','88C4':'xíng','88C5':'zhuāng','88C6':'dāng','88C7':'xū','88C8':'kūn','88C9':'kèn','88CA':'niǎo','88CB':'shù','88CC':'jiá','88CD':'kǔn','88CE':'chéng/chěng','88CF':'lǐ','88D0':'juān','88D1':'shēn','88D2':'póu','88D3':'gé','88D4':'yì','88D5':'yù','88D6':'chěn','88D7':'liú','88D8':'qiú','88D9':'qún','88DA':'jì','88DB':'yì','88DC':'bǔ','88DD':'zhuāng','88DE':'shuì','88DF':'shā','88E0':'qún','88E1':'lǐ','88E2':'lián','88E3':'liǎn','88E4':'kù','88E5':'jiǎn','88E6':'fóu','88E7':'tǎn','88E8':'bì/pí','88E9':'gūn','88EA':'táo','88EB':'yuān','88EC':'líng','88ED':'chǐ','88EE':'chāng','88EF':'chóu','88F0':'duō','88F1':'biǎo','88F2':'liǎng','88F3':'shang','88F4':'péi','88F5':'péi','88F6':'fēi','88F7':'yuān','88F8':'luǒ','88F9':'guǒ','88FA':'yǎn','88FB':'dǔ','88FC':'tì/xī','88FD':'zhì','88FE':'jū','88FF':'qǐ','890A':'biǎn','890B':'dié','890C':'kūn','890D':'duān','890E':'xiù','890F':'xiù','891A':'chǔ/zhǔ','891B':'lǚ','891C':'páo','891D':'dān','891E':'yǔn','891F':'tā','892A':'tùn/tuì','892B':'chǐ','892C':'sǎng','892D':'niǎo','892E':'yīng','892F':'jiè','893A':'diē','893B':'xiè','893C':'xiān','893D':'wèi','893E':'biǎo','893F':'cáo','894A':'zuì','894B':'jí','894C':'dān','894D':'zá','894E':'fán','894F':'bō','895A':'suì','895B':'nóng','895C':'chān','895D':'liàn/liǎn','895E':'bì','895F':'jīn','896A':'wà','896B':'shì','896C':'bǎi','896D':'xié','896E':'bó','896F':'chèn','897A':'jiǎn','897B':'pàn','897C':'yì','897D':'lán','897E':'yà','897F':'xī','898A':'jī','898B':'jiàn/xiàn','898C':'guān','898D':'biàn','898E':'yàn','898F':'guī','899A':'jué/jiào','899B':'mò','899C':'tiào','899D':'lián','899E':'yào','899F':'zhì','89A0':'jūn','89A1':'xí','89A2':'shǎn','89A3':'wēi','89A4':'xì','89A5':'tiǎn','89A6':'yú','89A7':'lǎn','89A8':'è','89A9':'dǔ','89AA':'qīn/qìng','89AB':'pǎng','89AC':'jì','89AD':'míng','89AE':'pīng','89AF':'gòu','89B0':'qù/qū','89B1':'zhàn','89B2':'jǐn/jìn','89B3':'guān/guàn','89B4':'dēng','89B5':'jiàn','89B6':'luó','89B7':'qù/qū','89B8':'jiàn','89B9':'wéi','89BA':'jué/jiào','89BB':'qù','89BC':'luó','89BD':'lǎn','89BE':'shěn','89BF':'dí','89C0':'guān/guàn','89C1':'jiàn','89C2':'guān/guàn','89C3':'yàn','89C4':'guī','89C5':'mì','89C6':'shì','89C7':'chān','89C8':'lǎn','89C9':'jué/jiào','89CA':'jì','89CB':'xí','89CC':'dí','89CD':'tiǎn','89CE':'yú','89CF':'gòu','89D0':'jìn','89D1':'qù','89D2':'jiǎo/jué','89D3':'jiū','89D4':'jīn','89D5':'cū','89D6':'jué','89D7':'zhì','89D8':'chào','89D9':'jí','89DA':'gū','89DB':'dàn','89DC':'zuǐ/zī','89DD':'dǐ','89DE':'shāng','89DF':'huà','89E0':'quán','89E1':'gé','89E2':'zhì','89E3':'jiě/jiè/xiè','89E4':'guǐ','89E5':'gōng','89E6':'chù','89E7':'jiě/jiè/xiè','89E8':'huàn','89E9':'qiú','89EA':'xīng','89EB':'sù','89EC':'ní','89ED':'jī','89EE':'lù','89EF':'zhì','89F0':'zhū','89F1':'bì','89F2':'xīng','89F3':'hú','89F4':'shāng','89F5':'gōng','89F6':'zhì','89F7':'xué','89F8':'chù','89F9':'xī','89FA':'yí','89FB':'lì','89FC':'jué','89FD':'xī','89FE':'yàn','89FF':'xī','8A00':'yán','8A01':'yán','8A02':'dìng','8A03':'fù','8A04':'qiú','8A05':'qiú','8A06':'jiào','8A07':'hōng','8A08':'jì','8A09':'fàn','8A0A':'xùn','8A0B':'diào','8A0C':'hóng/hòng','8A0D':'chà','8A0E':'tǎo','8A0F':'xū','8A10':'jié','8A11':'yí','8A12':'rèn','8A13':'xùn','8A14':'yín','8A15':'shàn','8A16':'qì','8A17':'tuō','8A18':'jì','8A19':'xùn','8A1A':'yín','8A1B':'é','8A1C':'fēn','8A1D':'yà','8A1E':'yāo','8A1F':'sòng','8A20':'shěn','8A21':'yín','8A22':'xīn','8A23':'jué','8A24':'xiáo','8A25':'nè/nà','8A26':'chén','8A27':'yóu','8A28':'zhǐ','8A29':'xiōng','8A2A':'fǎng','8A2B':'xìn','8A2C':'chāo','8A2D':'shè','8A2E':'xiān','8A2F':'sǎ','8A30':'zhūn','8A31':'xǔ/hǔ','8A32':'yì','8A33':'yì','8A34':'sù','8A35':'chī','8A36':'hē','8A37':'shēn','8A38':'hé','8A39':'xù','8A3A':'zhěn/zhēn','8A3B':'zhù','8A3C':'zhèng','8A3D':'gòu','8A3E':'zǐ/zī','8A3F':'zǐ','8A40':'zhān','8A41':'gǔ','8A42':'fù','8A43':'jiǎn','8A44':'dié','8A45':'líng','8A46':'dǐ','8A47':'yàng','8A48':'lì','8A49':'náo','8A4A':'pàn','8A4B':'zhòu','8A4C':'gàn','8A4D':'shì','8A4E':'jù','8A4F':'ào','8A50':'zhà','8A51':'tuō','8A52':'yí','8A53':'qǔ','8A54':'zhào','8A55':'píng','8A56':'bì','8A57':'xiòng','8A58':'chù/qū','8A59':'bá','8A5A':'dá','8A5B':'zǔ','8A5C':'tāo','8A5D':'zhǔ','8A5E':'cí','8A5F':'zhé','8A60':'yǒng','8A61':'xǔ','8A62':'xún','8A63':'yì','8A64':'huǎng','8A65':'hé','8A66':'shì','8A67':'chá','8A68':'jiāo','8A69':'shī','8A6A':'hěn','8A6B':'chà','8A6C':'gòu','8A6D':'guǐ','8A6E':'quán','8A6F':'huì','8A70':'jié','8A71':'huà','8A72':'gāi','8A73':'xiáng','8A74':'huì','8A75':'shēn','8A76':'chóu','8A77':'tóng','8A78':'mí','8A79':'zhān','8A7A':'míng','8A7B':'è','8A7C':'huī','8A7D':'yán','8A7E':'xiōng','8A7F':'guà','8A80':'èr','8A81':'běng','8A82':'tiǎo','8A83':'chǐ','8A84':'lěi','8A85':'zhū','8A86':'kuāng','8A87':'kuā','8A88':'wú','8A89':'yù','8A8A':'téng','8A8B':'jì','8A8C':'zhì','8A8D':'rèn','8A8E':'sù','8A8F':'lǎng','8A90':'é','8A91':'kuáng','8A92':'ễ/ế/ể/ề','8A93':'shì','8A94':'tǐng','8A95':'dàn','8A96':'bèi','8A97':'chán','8A98':'yòu','8A99':'héng','8A9A':'qiào','8A9B':'qīn','8A9C':'shuà','8A9D':'ān','8A9E':'yǔ/yù','8A9F':'xiào','8AA0':'chéng','8AA1':'jiè','8AA2':'xiàn','8AA3':'wū','8AA4':'wù','8AA5':'gào','8AA6':'sòng','8AA7':'pǔ','8AA8':'huì/huǐ','8AA9':'jìng','8AAA':'shuō/shuì/yuè','8AAB':'zhèn','8AAC':'shuō/shuì/yuè','8AAD':'dú/dòu','8AAE':'huā','8AAF':'chàng','8AB0':'shuí/shéi','8AB1':'jié','8AB2':'kè','8AB3':'qū','8AB4':'cóng','8AB5':'xiáo','8AB6':'suì','8AB7':'wǎng','8AB8':'xuán','8AB9':'fěi','8ABA':'chī','8ABB':'tà','8ABC':'yí/yì','8ABD':'ná','8ABE':'yín','8ABF':'diào/tiáo','8AC0':'pǐ','8AC1':'chuò','8AC2':'chǎn','8AC3':'chēn','8AC4':'zhūn','8AC5':'jī','8AC6':'qī','8AC7':'tán','8AC8':'chuì','8AC9':'wěi','8ACA':'jū','8ACB':'qǐng','8ACC':'jiàn','8ACD':'zhēng/zhèng','8ACE':'zé','8ACF':'zōu','8AD0':'qiān','8AD1':'zhuó','8AD2':'liàng','8AD3':'jiàn','8AD4':'zhù','8AD5':'háo','8AD6':'lùn/lún','8AD7':'shěn','8AD8':'biǎo','8AD9':'huài','8ADA':'pián','8ADB':'yú','8ADC':'dié','8ADD':'xǔ','8ADE':'pián/piǎn','8ADF':'shì','8AE0':'xuān','8AE1':'shì','8AE2':'hùn','8AE3':'huà','8AE4':'è','8AE5':'zhòng','8AE6':'dì','8AE7':'xié','8AE8':'fú','8AE9':'pǔ','8AEA':'tíng','8AEB':'jiàn','8AEC':'qǐ','8AED':'yù','8AEE':'zī','8AEF':'chuán','8AF0':'xǐ','8AF1':'huì','8AF2':'yīn','8AF3':'ān','8AF4':'xián','8AF5':'nán','8AF6':'chén','8AF7':'fēng/fěng/fèng','8AF8':'zhū','8AF9':'yáng','8AFA':'yàn','8AFB':'hēng/héng','8AFC':'xuān','8AFD':'gé','8AFE':'nuò','8AFF':'qì','8B00':'móu','8B01':'yè','8B02':'wèi','8B03':'xīng','8B04':'téng','8B05':'zōu/zhōu','8B06':'shàn','8B07':'jiǎn','8B08':'bó','8B09':'duǐ','8B0A':'huǎng','8B0B':'huò','8B0C':'gē','8B0D':'yíng','8B0E':'mí/mèi','8B0F':'xiǎo/sǒu','8B10':'mì','8B11':'xì','8B12':'qiāng','8B13':'chēn','8B14':'nüè/xuè','8B15':'sī','8B16':'sù','8B17':'bàng','8B18':'chí','8B19':'qiān','8B1A':'shì/yì','8B1B':'jiǎng','8B1C':'yuàn','8B1D':'xiè','8B1E':'xuè','8B1F':'tāo','8B20':'yáo','8B21':'yáo','8B22':'hù','8B23':'yú','8B24':'biāo','8B25':'còng','8B26':'qìng/qǐng','8B27':'lí','8B28':'mó','8B29':'mò','8B2A':'shāng','8B2B':'zhé','8B2C':'miù','8B2D':'jiǎn','8B2E':'zé','8B2F':'zhā','8B30':'lián','8B31':'lóu','8B32':'cān','8B33':'ōu','8B34':'guàn','8B35':'xí','8B36':'zhuó','8B37':'áo','8B38':'áo','8B39':'jǐn','8B3A':'zhé','8B3B':'yí','8B3C':'hū','8B3D':'jiàng','8B3E':'mán/màn','8B3F':'cháo','8B40':'hàn','8B41':'huá','8B42':'chǎn','8B43':'xū','8B44':'zēng','8B45':'sè','8B46':'xī','8B47':'shē','8B48':'duì','8B49':'zhèng','8B4A':'náo','8B4B':'lán','8B4C':'é','8B4D':'yìng','8B4E':'jué','8B4F':'jī','8B50':'zǔn','8B51':'jiǎo','8B52':'bò','8B53':'huì','8B54':'zhuàn','8B55':'wú','8B56':'jiàn','8B57':'zhá','8B58':'shì/zhì','8B59':'qiáo/qiào','8B5A':'tán','8B5B':'zèn','8B5C':'pǔ','8B5D':'shéng','8B5E':'xuān','8B5F':'zào','8B60':'zhān','8B61':'dǎng','8B62':'suì','8B63':'qiān','8B64':'jī','8B65':'jiào','8B66':'jǐng','8B67':'lián','8B68':'nòu','8B69':'yī','8B6A':'ài','8B6B':'zhān','8B6C':'pì','8B6D':'huǐ','8B6E':'huà','8B6F':'yì','8B70':'yì','8B71':'shàn','8B72':'ràng','8B73':'nòu','8B74':'qiǎn','8B75':'zhuì','8B76':'tà','8B77':'hù','8B78':'zhōu','8B79':'háo','8B7A':'nǐ','8B7B':'yīng','8B7C':'jiàn/jiān','8B7D':'yù','8B7E':'jiǎn','8B7F':'huì','8B80':'dú/dòu','8B81':'zhé','8B82':'xuàn','8B83':'zàn','8B84':'lěi','8B85':'shěn','8B86':'wèi','8B87':'chǎn','8B88':'lì','8B89':'yí','8B8A':'biàn','8B8B':'zhé','8B8C':'yàn','8B8D':'è','8B8E':'chóu','8B8F':'wèi','8B90':'chóu','8B91':'yào','8B92':'chán','8B93':'ràng','8B94':'yǐn','8B95':'lán','8B96':'chèn','8B97':'huò','8B98':'zhé','8B99':'huān','8B9A':'zàn','8B9B':'yì','8B9C':'dǎng','8B9D':'zhān','8B9E':'yàn','8B9F':'dú','8BA0':'yán','8BA1':'jì','8BA2':'dìng','8BA3':'fù','8BA4':'rèn','8BA5':'jī','8BA6':'jié','8BA7':'hòng','8BA8':'tǎo','8BA9':'ràng','8BAA':'shàn','8BAB':'qì','8BAC':'tuō','8BAD':'xùn','8BAE':'yì','8BAF':'xùn','8BB0':'jì','8BB1':'rèn','8BB2':'jiǎng','8BB3':'huì','8BB4':'ōu','8BB5':'jù','8BB6':'yà','8BB7':'nè','8BB8':'xǔ','8BB9':'é','8BBA':'lùn/lún','8BBB':'xiōng','8BBC':'sòng','8BBD':'fěng','8BBE':'shè','8BBF':'fǎng','8BC0':'jué','8BC1':'zhèng','8BC2':'gǔ','8BC3':'hē','8BC4':'píng','8BC5':'zǔ','8BC6':'zhì/shí','8BC7':'xiòng','8BC8':'zhà','8BC9':'sù','8BCA':'zhěn','8BCB':'dǐ','8BCC':'zhōu','8BCD':'cí','8BCE':'qū','8BCF':'zhào','8BD0':'bì','8BD1':'yì','8BD2':'yí','8BD3':'kuāng','8BD4':'lěi','8BD5':'shì','8BD6':'guà','8BD7':'shī','8BD8':'jié','8BD9':'huī','8BDA':'chéng','8BDB':'zhū','8BDC':'shēn','8BDD':'huà','8BDE':'dàn','8BDF':'gòu','8BE0':'quán','8BE1':'guǐ','8BE2':'xún','8BE3':'yì','8BE4':'zhèng','8BE5':'gāi','8BE6':'xiáng','8BE7':'chà','8BE8':'hùn','8BE9':'xǔ','8BEA':'zhōu','8BEB':'jiè','8BEC':'wū','8BED':'yǔ','8BEE':'qiào','8BEF':'wù','8BF0':'gào','8BF1':'yòu','8BF2':'huì','8BF3':'kuáng','8BF4':'shuō/shuì','8BF5':'sòng','8BF6':'èi/éi/ěi','8BF7':'qǐng','8BF8':'zhū','8BF9':'zōu','8BFA':'nuò','8BFB':'dú','8BFC':'zhuó','8BFD':'fěi','8BFE':'kè','8BFF':'wěi','8C00':'yú','8C01':'shéi','8C02':'shěn','8C03':'diào/tiáo','8C04':'chǎn','8C05':'liàng','8C06':'zhūn','8C07':'suì','8C08':'tán','8C09':'shěn','8C0A':'yì','8C0B':'móu','8C0C':'chén','8C0D':'dié','8C0E':'huǎng','8C0F':'jiàn','8C10':'xié','8C11':'xuè','8C12':'yè','8C13':'wèi','8C14':'è','8C15':'yù','8C16':'xuān','8C17':'chán','8C18':'zī','8C19':'ān','8C1A':'yàn','8C1B':'dì','8C1C':'mí','8C1D':'piǎn','8C1E':'xǔ','8C1F':'mó','8C20':'dǎng','8C21':'sù','8C22':'xiè','8C23':'yáo','8C24':'bàng','8C25':'shì','8C26':'qiān','8C27':'mì','8C28':'jǐn','8C29':'mán/màn','8C2A':'zhé','8C2B':'jiǎn','8C2C':'miù','8C2D':'tán','8C2E':'jiàn','8C2F':'qiáo','8C30':'lán','8C31':'pǔ','8C32':'jué','8C33':'yàn','8C34':'qiǎn','8C35':'zhān','8C36':'chèn','8C37':'gǔ','8C38':'qiān','8C39':'hóng','8C3A':'yá','8C3B':'jué','8C3C':'hóng','8C3D':'hān','8C3E':'hōng','8C3F':'qī','8C40':'xī','8C41':'huò/huō','8C42':'liáo','8C43':'hǎn','8C44':'dú','8C45':'lóng','8C46':'dòu','8C47':'jiāng','8C48':'qǐ','8C49':'chǐ','8C4A':'fēng','8C4B':'dēng','8C4C':'wān','8C4D':'bī','8C4E':'shù','8C4F':'xiàn','8C50':'fēng','8C51':'zhì','8C52':'zhì','8C53':'yàn','8C54':'yàn','8C55':'shǐ','8C56':'chù','8C57':'huī','8C58':'tún','8C59':'yì','8C5A':'tún','8C5B':'yì','8C5C':'jiān','8C5D':'bā','8C5E':'hòu','8C5F':'è','8C60':'cú','8C61':'xiàng','8C62':'huàn','8C63':'jiān','8C64':'kěn','8C65':'gāi','8C66':'qú','8C67':'fū','8C68':'xī','8C69':'bīn','8C6A':'háo','8C6B':'yù','8C6C':'zhū','8C6D':'jiā','8C6E':'fén','8C6F':'xī','8C70':'hù','8C71':'wēn','8C72':'huán','8C73':'bīn','8C74':'dí','8C75':'zōng','8C76':'fén','8C77':'yì','8C78':'zhì','8C79':'bào','8C7A':'chái','8C7B':'hàn/àn','8C7C':'pí','8C7D':'nà','8C7E':'pī','8C7F':'gǒu','8C80':'duò','8C81':'yòu','8C82':'diāo','8C83':'mò','8C84':'sì','8C85':'xiū','8C86':'huán','8C87':'kūn','8C88':'hé','8C89':'hé/háo','8C8A':'mò','8C8B':'àn','8C8C':'mào','8C8D':'lí','8C8E':'ní','8C8F':'bǐ','8C90':'yǔ','8C91':'jiā','8C92':'tuān','8C93':'māo','8C94':'pí','8C95':'xī','8C96':'è','8C97':'jù','8C98':'mò','8C99':'chū','8C9A':'tán','8C9B':'huān','8C9C':'qú','8C9D':'bèi','8C9E':'zhēn','8C9F':'yuán/yún/yùn','8CA0':'fù','8CA1':'cái','8CA2':'gòng','8CA3':'tè','8CA4':'yí','8CA5':'háng','8CA6':'wàn','8CA7':'pín','8CA8':'huò','8CA9':'fàn','8CAA':'tān','8CAB':'guàn','8CAC':'zé/zhài','8CAD':'zhì','8CAE':'èr','8CAF':'zhǔ/zhù','8CB0':'shì','8CB1':'bì','8CB2':'zī','8CB3':'èr','8CB4':'guì','8CB5':'piān','8CB6':'biǎn','8CB7':'mǎi','8CB8':'dài','8CB9':'shèng','8CBA':'kuàng','8CBB':'fèi','8CBC':'tiē','8CBD':'yí','8CBE':'chí/chī','8CBF':'mào','8CC0':'hè','8CC1':'bì/bēn','8CC2':'lù','8CC3':'lìn','8CC4':'huì','8CC5':'gāi','8CC6':'pián','8CC7':'zī','8CC8':'jiǎ/gǔ','8CC9':'xù','8CCA':'zéi/zé','8CCB':'jiǎo','8CCC':'gāi','8CCD':'zāng','8CCE':'jiàn','8CCF':'yìng','8CD0':'xùn','8CD1':'zhèn','8CD2':'shē','8CD3':'bīn','8CD4':'bīn','8CD5':'qiú','8CD6':'shē','8CD7':'chuàn','8CD8':'zāng','8CD9':'zhōu','8CDA':'lài','8CDB':'zàn','8CDC':'sì','8CDD':'chēn','8CDE':'shǎng','8CDF':'tiǎn','8CE0':'péi','8CE1':'gēng','8CE2':'xián','8CE3':'mài','8CE4':'jiàn','8CE5':'suì','8CE6':'fù','8CE7':'dǎn','8CE8':'cóng','8CE9':'cóng','8CEA':'zhí/zhì','8CEB':'jī','8CEC':'zhàng','8CED':'dǔ','8CEE':'jìn','8CEF':'xiōng','8CF0':'shǔn','8CF1':'yǔn','8CF2':'bǎo','8CF3':'zāi','8CF4':'lài','8CF5':'fèng','8CF6':'càng','8CF7':'jī','8CF8':'shèng','8CF9':'ài','8CFA':'zhuàn/zuàn','8CFB':'fù','8CFC':'gòu','8CFD':'sài','8CFE':'zé','8CFF':'liáo','8D00':'wèi','8D01':'bài','8D02':'chěn','8D03':'zhuàn','8D04':'zhì','8D05':'zhuì','8D06':'biāo','8D07':'yūn','8D08':'zèng','8D09':'tǎn','8D0A':'zàn','8D0B':'yàn','8D0C':'pú','8D0D':'shàn','8D0E':'wàn','8D0F':'yíng','8D10':'jìn','8D11':'gǎn','8D12':'xián','8D13':'zāng','8D14':'bì','8D15':'dú','8D16':'shú','8D17':'yàn','8D18':'shǎng','8D19':'xuàn','8D1A':'lòng','8D1B':'gàn','8D1C':'zāng','8D1D':'bèi','8D1E':'zhēn','8D1F':'fù','8D20':'yuán/yún/yùn','8D21':'gòng','8D22':'cái','8D23':'zé','8D24':'xián','8D25':'bài','8D26':'zhàng','8D27':'huò','8D28':'zhì','8D29':'fàn','8D2A':'tān','8D2B':'pín','8D2C':'biǎn','8D2D':'gòu','8D2E':'zhù','8D2F':'guàn','8D30':'èr','8D31':'jiàn','8D32':'bì/bēn','8D33':'shì','8D34':'tiē','8D35':'guì','8D36':'kuàng','8D37':'dài','8D38':'mào','8D39':'fèi','8D3A':'hè','8D3B':'yí','8D3C':'zéi','8D3D':'zhì','8D3E':'jiǎ/gǔ','8D3F':'huì','8D40':'zī','8D41':'lìn','8D42':'lù','8D43':'zāng','8D44':'zī','8D45':'gāi','8D46':'jìn','8D47':'qiú','8D48':'zhèn','8D49':'lài','8D4A':'shē','8D4B':'fù','8D4C':'dǔ','8D4D':'jī','8D4E':'shú','8D4F':'shǎng','8D50':'cì','8D51':'bì','8D52':'zhōu','8D53':'gēng','8D54':'péi','8D55':'dǎn','8D56':'lài','8D57':'fèng','8D58':'zhuì','8D59':'fù','8D5A':'zhuàn','8D5B':'sài','8D5C':'zé','8D5D':'yàn','8D5E':'zàn','8D5F':'yūn','8D60':'zèng','8D61':'shàn','8D62':'yíng','8D63':'gàn','8D64':'chì','8D65':'xī','8D66':'shè','8D67':'nǎn','8D68':'xióng','8D69':'xì','8D6A':'chēng','8D6B':'hè','8D6C':'chēng','8D6D':'zhě','8D6E':'xiá','8D6F':'táng','8D70':'zǒu','8D71':'zǒu','8D72':'lì','8D73':'jiū','8D74':'fù','8D75':'zhào','8D76':'gǎn','8D77':'qǐ','8D78':'shàn','8D79':'qióng','8D7A':'qín','8D7B':'xiǎn','8D7C':'cī','8D7D':'jué','8D7E':'qǐn','8D7F':'chí','8D80':'cī','8D81':'chèn','8D82':'chèn','8D83':'dié','8D84':'jū/qiè/qie','8D85':'chāo','8D86':'dī','8D87':'sè','8D88':'zhān','8D89':'zhú','8D8A':'yuè','8D8B':'qū','8D8C':'jié','8D8D':'chí','8D8E':'chú','8D8F':'guā','8D90':'xuè','8D91':'zī','8D92':'tiáo','8D93':'duǒ','8D94':'liè','8D95':'gǎn','8D96':'suō','8D97':'cù','8D98':'xí','8D99':'zhào','8D9A':'sù','8D9B':'yǐn','8D9C':'jú','8D9D':'jiàn','8D9E':'què','8D9F':'tàng/tāng','8DA0':'chuò','8DA1':'cuǐ','8DA2':'lù','8DA3':'qù','8DA4':'dàng','8DA5':'qiū','8DA6':'zī','8DA7':'tí','8DA8':'qū/cù','8DA9':'chì','8DAA':'huáng','8DAB':'qiáo','8DAC':'qiāo','8DAD':'yào','8DAE':'zào','8DAF':'yuè','8DB0':'ěr','8DB1':'zǎn','8DB2':'zǎn/zàn','8DB3':'zú','8DB4':'pā','8DB5':'bào/bō','8DB6':'kù','8DB7':'hé','8DB8':'dǔn','8DB9':'jué','8DBA':'fū','8DBB':'chěn','8DBC':'jiǎn','8DBD':'fàng','8DBE':'zhǐ','8DBF':'tā','8DC0':'yuè','8DC1':'pá','8DC2':'qí','8DC3':'yuè','8DC4':'qiāng/qiàng','8DC5':'tuò','8DC6':'tái','8DC7':'yì','8DC8':'niǎn','8DC9':'líng','8DCA':'mèi','8DCB':'bá','8DCC':'diē','8DCD':'kū','8DCE':'tuó','8DCF':'jiā','8DD0':'cǐ','8DD1':'pǎo','8DD2':'qiǎ','8DD3':'zhù','8DD4':'jū','8DD5':'dié','8DD6':'zhí','8DD7':'fū','8DD8':'pán','8DD9':'jǔ','8DDA':'shān','8DDB':'bǒ','8DDC':'ní','8DDD':'jù','8DDE':'lì','8DDF':'gēn','8DE0':'yí','8DE1':'jī','8DE2':'dài','8DE3':'xiǎn','8DE4':'jiāo','8DE5':'duò','8DE6':'chú','8DE7':'quán','8DE8':'kuà','8DE9':'zhuǎi/shì','8DEA':'guì','8DEB':'qióng','8DEC':'kuǐ','8DED':'xiáng','8DEE':'chì','8DEF':'lù','8DF0':'bèng','8DF1':'zhì','8DF2':'jiá','8DF3':'tiào','8DF4':'cǎi','8DF5':'jiàn','8DF6':'da','8DF7':'qiāo','8DF8':'bì','8DF9':'xiān','8DFA':'duò','8DFB':'jī','8DFC':'jú','8DFD':'jì','8DFE':'shú','8DFF':'tú','8E00':'chù','8E01':'xìng','8E02':'niè','8E03':'xiāo','8E04':'bó','8E05':'xué','8E06':'qūn','8E07':'mǒu','8E08':'shū','8E09':'liàng','8E0A':'yǒng','8E0B':'jiǎo/jiǎ/jué','8E0C':'chóu','8E0D':'xiào','8E0E':'móu','8E0F':'tà','8E10':'jiàn','8E11':'qí','8E12':'wō','8E13':'wěi','8E14':'chuō','8E15':'jié','8E16':'jí','8E17':'niē','8E18':'jú','8E19':'jū','8E1A':'lún','8E1B':'lù','8E1C':'lèng','8E1D':'huái','8E1E':'jù','8E1F':'chí','8E20':'wàn','8E21':'quán','8E22':'tī','8E23':'bó','8E24':'zú','8E25':'qiè','8E26':'qī','8E27':'cù','8E28':'zōng','8E29':'cǎi','8E2A':'zōng','8E2B':'pán','8E2C':'zhì','8E2D':'zhēng','8E2E':'diǎn','8E2F':'zhí','8E30':'yú','8E31':'duó','8E32':'dùn','8E33':'chǔn','8E34':'yǒng','8E35':'zhǒng','8E36':'dì','8E37':'zhǎ','8E38':'chěn','8E39':'chuài','8E3A':'jiàn','8E3B':'guā','8E3C':'táng','8E3D':'jǔ','8E3E':'fú','8E3F':'zú','8E40':'dié','8E41':'pián','8E42':'róu','8E43':'nuò','8E44':'tí','8E45':'chǎ','8E46':'tuǐ','8E47':'jiǎn','8E48':'dǎo','8E49':'cuō','8E4A':'xī/qī','8E4B':'tà','8E4C':'qiāng/qiàng','8E4D':'zhǎn','8E4E':'diān','8E4F':'tí','8E50':'jí','8E51':'niè','8E52':'pán','8E53':'liù','8E54':'zhàn','8E55':'bì','8E56':'chōng','8E57':'lù','8E58':'liáo','8E59':'cù','8E5A':'tāng','8E5B':'dài','8E5C':'sù','8E5D':'xǐ','8E5E':'kuǐ','8E5F':'jī','8E60':'zhí','8E61':'qiāng','8E62':'dí/zhí','8E63':'mán/pán','8E64':'zōng','8E65':'lián','8E66':'bèng','8E67':'zāo','8E68':'niǎn','8E69':'bié','8E6A':'tuí','8E6B':'jú','8E6C':'dèng/dēng','8E6D':'cèng','8E6E':'xiān','8E6F':'fán','8E70':'chú','8E71':'zhōng','8E72':'dūn','8E73':'bō','8E74':'cù','8E75':'zú','8E76':'jué/juě','8E77':'jué','8E78':'lín','8E79':'tà','8E7A':'qiāo','8E7B':'qiāo','8E7C':'pǔ','8E7D':'liāo','8E7E':'dūn','8E7F':'cuān','8E80':'kuàng','8E81':'zào','8E82':'tà','8E83':'bì','8E84':'bì','8E85':'zhú','8E86':'jù','8E87':'chú','8E88':'qiào','8E89':'dǔn','8E8A':'chóu','8E8B':'jī/jì','8E8C':'wǔ','8E8D':'yuè','8E8E':'niǎn','8E8F':'lìn','8E90':'liè','8E91':'zhí','8E92':'lì','8E93':'zhì','8E94':'chán','8E95':'chú','8E96':'duàn','8E97':'wèi','8E98':'lóng','8E99':'lìn','8E9A':'xiān','8E9B':'wèi','8E9C':'zuān','8E9D':'lán','8E9E':'xiè','8E9F':'ráng','8EA0':'xiè','8EA1':'niè','8EA2':'tà','8EA3':'qú','8EA4':'jiè','8EA5':'cuān','8EA6':'zuān','8EA7':'xǐ','8EA8':'kuí','8EA9':'jué','8EAA':'lìn','8EAB':'shēn','8EAC':'gōng','8EAD':'dān','8EAE':'fēn','8EAF':'qū','8EB0':'tǐ','8EB1':'duǒ','8EB2':'duǒ','8EB3':'gōng','8EB4':'láng','8EB5':'rěn','8EB6':'luǒ','8EB7':'ǎi','8EB8':'jī','8EB9':'jú','8EBA':'tǎng','8EBB':'kōng','8EBC':'lào','8EBD':'yǎn','8EBE':'měi','8EBF':'kāng','8EC0':'qū','8EC1':'lóu','8EC2':'lào','8EC3':'duǒ','8EC4':'zhí','8EC5':'yàn','8EC6':'tǐ','8EC7':'dào','8EC8':'yīng','8EC9':'yù','8ECA':'chē/jū','8ECB':'yà/zhá','8ECC':'guǐ','8ECD':'jūn','8ECE':'wèi','8ECF':'yuè','8ED0':'xìn','8ED1':'dì','8ED2':'xuān','8ED3':'fàn','8ED4':'rèn','8ED5':'shān','8ED6':'qiáng','8ED7':'shū','8ED8':'tún','8ED9':'chén','8EDA':'dài','8EDB':'è','8EDC':'nà','8EDD':'qí','8EDE':'máo','8EDF':'ruǎn','8EE0':'rèn','8EE1':'qián','8EE2':'zhuǎn/zhuǎi/zhuàn','8EE3':'hōng','8EE4':'hū','8EE5':'qú','8EE6':'huàng','8EE7':'dǐ','8EE8':'líng','8EE9':'dài','8EEA':'āo','8EEB':'zhěn','8EEC':'fàn','8EED':'kuāng','8EEE':'ǎng','8EEF':'pēng','8EF0':'bèi','8EF1':'gū','8EF2':'gū','8EF3':'páo','8EF4':'zhù','8EF5':'rǒng/fǔ','8EF6':'è','8EF7':'bá','8EF8':'zhóu/zhòu/zhú','8EF9':'zhǐ','8EFA':'yáo','8EFB':'kē/kě','8EFC':'yì','8EFD':'qīng','8EFE':'shì','8EFF':'píng','8F00':'ér','8F01':'qióng','8F02':'jú','8F03':'jiào','8F04':'guāng','8F05':'lù','8F06':'kǎi','8F07':'quán','8F08':'zhōu','8F09':'zài/zǎi','8F0A':'zhì','8F0B':'jū','8F0C':'liàng','8F0D':'yù','8F0E':'shāo','8F0F':'yóu','8F10':'huǎn','8F11':'yǔn','8F12':'zhé','8F13':'wǎn','8F14':'fǔ','8F15':'qīng','8F16':'zhōu','8F17':'ní','8F18':'líng','8F19':'zhé','8F1A':'zhàn','8F1B':'liàng','8F1C':'zī','8F1D':'huī','8F1E':'wǎng','8F1F':'chuò','8F20':'guǒ','8F21':'kǎn','8F22':'yǐ','8F23':'péng','8F24':'qiàn','8F25':'gǔn','8F26':'niǎn','8F27':'píng','8F28':'guǎn','8F29':'bèi','8F2A':'lún','8F2B':'pái','8F2C':'liáng','8F2D':'ruǎn','8F2E':'róu','8F2F':'jí','8F30':'yáng','8F31':'xián','8F32':'chuán','8F33':'còu','8F34':'chūn','8F35':'gé','8F36':'yóu','8F37':'hōng','8F38':'shū','8F39':'fù','8F3A':'zī','8F3B':'fú','8F3C':'wēn','8F3D':'bèn','8F3E':'zhǎn','8F3F':'yú','8F40':'wēn','8F41':'tāo','8F42':'gǔ/gū','8F43':'zhēn','8F44':'xiá','8F45':'yuán','8F46':'lù','8F47':'jiū','8F48':'cháo','8F49':'zhuǎn/zhuǎi/zhuàn','8F4A':'wèi','8F4B':'hún','8F4C':'xuě','8F4D':'chè/zhé','8F4E':'jiào','8F4F':'zhàn','8F50':'pú','8F51':'lǎo','8F52':'fén','8F53':'fān','8F54':'lín','8F55':'gé','8F56':'sè','8F57':'kǎn','8F58':'huàn','8F59':'yǐ','8F5A':'jí','8F5B':'duì','8F5C':'ér','8F5D':'yú','8F5E':'xiàn','8F5F':'hōng','8F60':'léi','8F61':'pèi','8F62':'lì','8F63':'lì','8F64':'lú','8F65':'lín','8F66':'chē/jū','8F67':'yà/zhá','8F68':'guǐ','8F69':'xuān','8F6A':'dài','8F6B':'rèn','8F6C':'zhuǎn/zhuǎi/zhuàn','8F6D':'è','8F6E':'lún','8F6F':'ruǎn','8F70':'hōng','8F71':'gū','8F72':'kē','8F73':'lú','8F74':'zhóu/zhòu','8F75':'zhǐ','8F76':'yì','8F77':'hū','8F78':'zhěn','8F79':'lì','8F7A':'yáo','8F7B':'qīng','8F7C':'shì','8F7D':'zài/zǎi','8F7E':'zhì','8F7F':'jiào','8F80':'zhōu','8F81':'quán','8F82':'lù','8F83':'jiào','8F84':'zhé','8F85':'fǔ','8F86':'liàng','8F87':'niǎn','8F88':'bèi','8F89':'huī','8F8A':'gǔn','8F8B':'wǎng','8F8C':'liáng','8F8D':'chuò','8F8E':'zī','8F8F':'còu','8F90':'fú','8F91':'jí/ji','8F92':'wēn','8F93':'shū','8F94':'pèi','8F95':'yuán','8F96':'xiá','8F97':'zhǎn','8F98':'lù','8F99':'zhé','8F9A':'lín','8F9B':'xīn','8F9C':'gū','8F9D':'cí','8F9E':'cí','8F9F':'pì/bì','8FA0':'zuì','8FA1':'biàn','8FA2':'là','8FA3':'là','8FA4':'cí','8FA5':'xuē','8FA6':'bàn','8FA7':'biàn','8FA8':'biàn','8FA9':'biàn','8FAA':'xuē','8FAB':'biàn','8FAC':'bān','8FAD':'cí','8FAE':'biàn','8FAF':'biàn','8FB0':'chén','8FB1':'rǔ','8FB2':'nóng','8FB3':'nóng','8FB4':'zhěn','8FB5':'chuò','8FB6':'chuò','8FB7':'yī','8FB8':'réng','8FB9':'biān','8FBA':'biān','8FBB':'shí','8FBC':'rù/yū','8FBD':'liáo','8FBE':'dá','8FBF':'chān','8FC0':'gān','8FC1':'qiān','8FC2':'yū','8FC3':'yū','8FC4':'qì','8FC5':'xùn','8FC6':'yǐ/yí','8FC7':'guò/guō','8FC8':'mài','8FC9':'qí','8FCA':'zā','8FCB':'wàng','8FCC':'tū/tù','8FCD':'zhūn','8FCE':'yíng','8FCF':'tì','8FD0':'yùn','8FD1':'jìn','8FD2':'háng','8FD3':'yà','8FD4':'fǎn','8FD5':'wǔ','8FD6':'tà','8FD7':'é','8FD8':'hái/huán','8FD9':'zhè','8FDA':'dá/zhōng','8FDB':'jìn','8FDC':'yuǎn','8FDD':'wéi','8FDE':'lián','8FDF':'chí','8FE0':'chè','8FE1':'nì','8FE2':'tiáo','8FE3':'zhì','8FE4':'yǐ/yí','8FE5':'jiǒng','8FE6':'jiā','8FE7':'chén','8FE8':'dài','8FE9':'ěr','8FEA':'dí','8FEB':'pò/pǎi','8FEC':'wǎng','8FED':'dié','8FEE':'zé','8FEF':'táo','8FF0':'shù','8FF1':'tuó','8FF2':'qù','8FF3':'jìng','8FF4':'huí','8FF5':'tóng','8FF6':'yòu','8FF7':'mí','8FF8':'bèng','8FF9':'jì','8FFA':'nǎi','8FFB':'yí','8FFC':'jié','8FFD':'zhuī','8FFE':'liè','8FFF':'xùn','900A':'xùn','900B':'bū','900C':'yóu','900D':'xiāo','900E':'qiú','900F':'tòu','901A':'tōng/tòng','901B':'guàng','901C':'wù','901D':'shì','901E':'chěng','901F':'sù','902A':'cuò','902B':'jué','902C':'bèng','902D':'huàn','902E':'dài/dǎi','902F':'lù','903A':'yuǎn','903B':'luó','903C':'bī','903D':'nuò','903E':'yú','903F':'dàng','904A':'yóu','904B':'yùn','904C':'è','904D':'biàn','904E':'guò/guō','904F':'è','905A':'chù','905B':'liú/liù','905C':'xùn','905D':'tà','905E':'dì','905F':'chí','906A':'cè','906B':'sù','906C':'sù','906D':'zāo','906E':'zhē','906F':'dùn','907A':'yí','907B':'wù','907C':'liáo','907D':'jù','907E':'shì','907F':'bì','908A':'biān','908B':'lā','908C':'lí','908D':'yuán','908E':'yóu','908F':'luó','909A':'rú','909B':'qióng','909C':'wǎn/xī','909D':'kuàng','909E':'fū','909F':'kàng','90A0':'bīn','90A1':'fāng','90A2':'xíng','90A3':'nà/nā','90A4':'xīn','90A5':'shěn','90A6':'bāng','90A7':'yuán','90A8':'cūn','90A9':'huǒ','90AA':'xié/yé','90AB':'bāng','90AC':'wū','90AD':'jù','90AE':'yóu','90AF':'hán','90B0':'tái','90B1':'qiū','90B2':'bì','90B3':'pī','90B4':'bǐng','90B5':'shào','90B6':'bèi','90B7':'wǎ','90B8':'dǐ','90B9':'zōu','90BA':'yè','90BB':'lín','90BC':'kuāng','90BD':'guī','90BE':'zhū','90BF':'shī','90C0':'kū','90C1':'yù','90C2':'gāi','90C3':'hé','90C4':'qiè','90C5':'zhì','90C6':'jí','90C7':'xún/huán','90C8':'hòu','90C9':'xíng','90CA':'jiāo','90CB':'xī','90CC':'guī','90CD':'nuó','90CE':'láng/làng','90CF':'jiá','90D0':'kuài','90D1':'zhèng','90D2':'láng/làng','90D3':'yùn','90D4':'yán','90D5':'chéng','90D6':'dōu','90D7':'xī','90D8':'lǚ','90D9':'fǔ','90DA':'wú','90DB':'fú','90DC':'gào','90DD':'hǎo','90DE':'láng','90DF':'jiá','90E0':'gěng','90E1':'jùn','90E2':'yǐng','90E3':'bó','90E4':'xì','90E5':'bèi','90E6':'lì','90E7':'yún','90E8':'bù','90E9':'xiáo','90EA':'qī','90EB':'pí','90EC':'qīng','90ED':'guō','90EE':'zhōu','90EF':'tán','90F0':'zōu','90F1':'píng','90F2':'lái','90F3':'ní','90F4':'chēn','90F5':'yóu','90F6':'bù','90F7':'xiāng','90F8':'dān','90F9':'jú','90FA':'yōng','90FB':'qiāo','90FC':'yī','90FD':'dū/dōu','90FE':'yǎn','90FF':'méi','910A':'xiāng','910B':'sōu','910C':'táng','910D':'míng','910E':'xì','910F':'rù','911A':'mào','911B':'cháo','911C':'fū','911D':'liǎo','911E':'yín','911F':'zhuān','912A':'bì','912B':'céng','912C':'wéi','912D':'zhèng','912E':'mào','912F':'shàn','913A':'kuàng','913B':'liǎn','913C':'zàn','913D':'chán','913E':'yōu','913F':'qí','914A':'dǐng/dīng','914B':'qiú','914C':'zhuó','914D':'pèi','914E':'zhòu','914F':'yí/yì','915A':'fēn','915B':'yuán','915C':'fū/fǔ','915D':'yùn','915E':'tài','915F':'tiān','916A':'lào','916B':'chuò','916C':'chóu','916D':'yòu','916E':'tóng','916F':'zhǐ','917A':'pú','917B':'zuì','917C':'hǎi','917D':'yàn','917E':'shī','917F':'niàng','918A':'chuò','918B':'cù','918C':'kūn','918D':'tí','918E':'xián','918F':'dū','919A':'mí','919B':'quán','919C':'chǒu','919D':'cuó','919E':'yùn','919F':'yòng','91A0':'àng','91A1':'zhà','91A2':'hǎi','91A3':'táng','91A4':'jiàng','91A5':'piǎo','91A6':'láo','91A7':'yù','91A8':'lí','91A9':'záo','91AA':'láo','91AB':'yī','91AC':'jiàng','91AD':'bú','91AE':'jiào','91AF':'xī','91B0':'tán','91B1':'fā/pò','91B2':'nóng','91B3':'yì','91B4':'lǐ','91B5':'jù','91B6':'yàn','91B7':'yì','91B8':'niàng','91B9':'rú','91BA':'xūn','91BB':'chóu','91BC':'yàn','91BD':'líng','91BE':'mí','91BF':'mí','91C0':'niàng','91C1':'xìn','91C2':'jiào','91C3':'shī','91C4':'mí','91C5':'yàn','91C6':'biàn','91C7':'cǎi','91C8':'shì','91C9':'yòu','91CA':'shì','91CB':'shì','91CC':'lǐ','91CD':'zhòng/chóng','91CE':'yě','91CF':'liàng/liáng/liang','91D0':'lí','91D1':'jīn','91D2':'jīn','91D3':'gá','91D4':'yǐ','91D5':'liǎo/liào','91D6':'dāo','91D7':'zhāo','91D8':'dīng/dìng','91D9':'lì','91DA':'qiú','91DB':'hé','91DC':'fǔ','91DD':'zhēn','91DE':'zhí','91DF':'bā','91E0':'luàn','91E1':'fǔ','91E2':'nǎi','91E3':'diào','91E4':'shàn/shān','91E5':'qiǎo','91E6':'kòu','91E7':'chuàn','91E8':'zǐ','91E9':'fán','91EA':'yú','91EB':'huá','91EC':'hàn','91ED':'gōng/gāng','91EE':'qí','91EF':'máng','91F0':'jiàn','91F1':'dì','91F2':'sì','91F3':'xì','91F4':'yì','91F5':'chāi','91F6':'tā/tuó','91F7':'tǔ','91F8':'xì','91F9':'nǚ','91FA':'qiān','91FB':'qiú','91FC':'jiàn','91FD':'pī','91FE':'yé','91FF':'yín','920A':'xīn','920B':'é','920C':'jué','920D':'dùn','920E':'gōu','920F':'yǐn','921A':'pí','921B':'guō','921C':'hóng','921D':'yín','921E':'jūn','921F':'shī','922A':'è','922B':'qín/wén','922C':'duó','922D':'zī','922E':'ní','922F':'tú','923A':'yù','923B':'sì','923C':'zuó','923D':'bù/bū','923E':'yóu','923F':'diàn/tián','924A':'zhāo','924B':'bào','924C':'hé','924D':'bì','924E':'shēng','924F':'chú','925A':'liǔ/mǎo','925B':'qiān/yán','925C':'fú','925D':'lì','925E':'yuè','925F':'pī','926A':'dì','926B':'jiā','926C':'mù','926D':'tǎn','926E':'shēn','926F':'yǐ','927A':'ěr','927B':'gè','927C':'bǐng','927D':'shì','927E':'móu','927F':'jiá/hā','928A':'xù','928B':'rén','928C':'cùn','928D':'zhì','928E':'qióng','928F':'shàn','929A':'yáo/diào/tiáo','929B':'xiān','929C':'xián','929D':'xiū','929E':'jūn','929F':'chā','92A0':'lǎo','92A1':'jí','92A2':'yǒng','92A3':'rú','92A4':'mǐ','92A5':'yī','92A6':'yīn','92A7':'guāng','92A8':'ān/ǎn','92A9':'diū','92AA':'yǒu','92AB':'sè','92AC':'kào','92AD':'qián','92AE':'luán','92AF':'sī','92B0':'āi','92B1':'diào','92B2':'hàn','92B3':'ruì','92B4':'shì','92B5':'kēng','92B6':'qiú','92B7':'xiāo','92B8':'zhé','92B9':'xiù','92BA':'zàng','92BB':'tì/tī','92BC':'cuò','92BD':'guā','92BE':'gǒng','92BF':'zhōng','92C0':'dòu','92C1':'lǚ','92C2':'méi','92C3':'láng','92C4':'wǎn','92C5':'xīn','92C6':'yún','92C7':'bèi','92C8':'wù','92C9':'sù','92CA':'yù','92CB':'chán','92CC':'tǐng/dìng','92CD':'bó','92CE':'hàn','92CF':'jiá','92D0':'hóng','92D1':'cuān','92D2':'fēng','92D3':'chān','92D4':'wǎn','92D5':'zhì','92D6':'sī','92D7':'xuān','92D8':'wú','92D9':'wú','92DA':'tiáo','92DB':'gǒng','92DC':'zhuó','92DD':'lüè','92DE':'xíng','92DF':'qǐn','92E0':'shèn','92E1':'hán','92E2':'luè','92E3':'yé','92E4':'chú','92E5':'zèng','92E6':'jú/jū','92E7':'xiàn','92E8':'é','92E9':'máng','92EA':'pū/pù','92EB':'lí','92EC':'shì','92ED':'ruì','92EE':'chéng','92EF':'gào','92F0':'lǐ','92F1':'tè','92F2':'bīng','92F3':'zhù','92F4':'zhèn','92F5':'tū','92F6':'liǔ','92F7':'zuì','92F8':'jù/jū','92F9':'chǎng','92FA':'yuān','92FB':'jiàn','92FC':'gāng/gàng','92FD':'diào','92FE':'táo','92FF':'cháng','930A':'zuì','930B':'péng','930C':'àn','930D':'pí','930E':'xiàn','930F':'yà','931A':'zhēng/zhèng','931B':'bēn','931C':'niè','931D':'cóng','931E':'chún','931F':'tán','932A':'diǎn','932B':'xí/xī','932C':'liàn','932D':'táo','932E':'gù','932F':'cuò/cù','933A':'zhuì','933B':'wǔ','933C':'nài','933D':'wǎn','933E':'zàn','933F':'hǔ','934A':'liàn','934B':'guō','934C':'xiǎn','934D':'dù','934E':'tú','934F':'wéi','935A':'yáng','935B':'duàn','935C':'xiā','935D':'yú','935E':'kēng','935F':'xīng','936A':'móu','936B':'qiāo','936C':'qiāo','936D':'hóu','936E':'zhēn','936F':'huō','937A':'zāng/zhě','937B':'jié','937C':'zhēn','937D':'biān','937E':'zhōng','937F':'zī','938A':'bàng','938B':'xiá','938C':'lián','938D':'suǒ','938E':'xì','938F':'liú','939A':'chuí','939B':'bó','939C':'pán','939D':'tǎ','939E':'bì','939F':'sǎng','93A0':'gāng','93A1':'zī','93A2':'wū','93A3':'yìng/yíng','93A4':'huǎng','93A5':'tiáo','93A6':'liú/liù','93A7':'kǎi','93A8':'sǔn','93A9':'shā','93AA':'sōu','93AB':'wàn','93AC':'hào/gǎo','93AD':'zhèn','93AE':'zhèn','93AF':'luǒ','93B0':'yì','93B1':'yuán','93B2':'tǎng','93B3':'niè','93B4':'xí','93B5':'jiā','93B6':'gē','93B7':'mǎ','93B8':'juān','93B9':'róng','93BA':'zǔ','93BB':'suǒ','93BC':'xià','93BD':'fēng','93BE':'wēn','93BF':'ná','93C0':'lǔ','93C1':'suǒ','93C2':'kōu','93C3':'zú/cù','93C4':'tuán','93C5':'xiū','93C6':'guàn','93C7':'xuàn','93C8':'liàn','93C9':'shòu','93CA':'ào','93CB':'mǎn','93CC':'mò','93CD':'luó','93CE':'bì','93CF':'wèi','93D0':'liú','93D1':'dí/dī','93D2':'qiāo','93D3':'huō','93D4':'yín','93D5':'lù','93D6':'áo','93D7':'kēng','93D8':'qiāng','93D9':'cuī','93DA':'qì','93DB':'cháng','93DC':'tāng/táng','93DD':'màn','93DE':'yōng','93DF':'chǎn','93E0':'fēng','93E1':'jìng','93E2':'biāo','93E3':'shù','93E4':'lòu','93E5':'xiù','93E6':'cōng','93E7':'lóng','93E8':'zàn','93E9':'jiàn','93EA':'cáo','93EB':'lí','93EC':'xià','93ED':'xī','93EE':'kāng','93EF':'shuǎng','93F0':'bèng','93F1':'jǐn/zhāng','93F2':'qiān/qiàn','93F3':'zhēng','93F4':'lù','93F5':'huá','93F6':'jí','93F7':'pú','93F8':'huì','93F9':'qiāng/qiǎng','93FA':'pō','93FB':'lín','93FC':'suǒ','93FD':'xiù','93FE':'sǎn','93FF':'chēng','940A':'yáng','940B':'tàng/tāng','940C':'xiàng','940D':'jué','940E':'jiāo','940F':'zūn','941A':'lòu/lué','941B':'yìng','941C':'duì','941D':'jué','941E':'nòu','941F':'tì','942A':'lǔ','942B':'juān','942C':'huì','942D':'yù','942E':'lián','942F':'zhuó','943A':'dāng/chēng','943B':'jù','943C':'fén','943D':'dá','943E':'bèi','943F':'yì','944A':'huò','944B':'qìng','944C':'bīn','944D':'yīng','944E':'kuì','944F':'níng','945A':'zuàn/zuān','945B':'kuàng','945C':'shǎng','945D':'péng','945E':'là','945F':'dú','946A':'lú','946B':'xīn','946C':'jiàn','946D':'làn/lán','946E':'bó','946F':'jiān','947A':'qú','947B':'pàn','947C':'luó','947D':'zuàn/zuān/zuǎn','947E':'luán','947F':'záo/zuò','948A':'zhāo','948B':'pō','948C':'liǎo/liào','948D':'tǔ','948E':'qiān','948F':'chuàn','949A':'bù','949B':'tài','949C':'jù','949D':'dùn','949E':'chāo','949F':'zhōng','94A0':'nà','94A1':'bèi','94A2':'gāng/gàng','94A3':'bǎn','94A4':'qián','94A5':'yào/yuè','94A6':'qīn','94A7':'jūn','94A8':'wū','94A9':'gōu','94AA':'kàng','94AB':'fāng','94AC':'huǒ','94AD':'tǒu','94AE':'niǔ','94AF':'bǎ','94B0':'yù','94B1':'qián','94B2':'zhēng','94B3':'qián','94B4':'gǔ','94B5':'bō','94B6':'kē','94B7':'pǒ','94B8':'bū','94B9':'bó','94BA':'yuè','94BB':'zuàn/zuān','94BC':'mù','94BD':'tǎn','94BE':'jiǎ','94BF':'diàn/tián','94C0':'yóu','94C1':'tiě','94C2':'bó','94C3':'líng','94C4':'shuò','94C5':'qiān/yán','94C6':'mǎo','94C7':'bào','94C8':'shì','94C9':'xuàn','94CA':'tuó/shé','94CB':'bì','94CC':'ní','94CD':'pí','94CE':'duó','94CF':'xíng','94D0':'kào','94D1':'lǎo','94D2':'ěr','94D3':'máng','94D4':'yà','94D5':'yǒu','94D6':'chéng','94D7':'jiá','94D8':'yé','94D9':'náo','94DA':'zhì','94DB':'dāng/chēng','94DC':'tóng','94DD':'lǚ','94DE':'diào','94DF':'yīn','94E0':'kǎi','94E1':'zhá','94E2':'zhū','94E3':'xiǎn/xǐ','94E4':'tǐng/dìng','94E5':'diū','94E6':'xiān','94E7':'huá','94E8':'quán','94E9':'shā','94EA':'hā','94EB':'yáo/diào/tiáo','94EC':'gè','94ED':'míng','94EE':'zhēng','94EF':'sè','94F0':'jiǎo','94F1':'yī','94F2':'chǎn','94F3':'chòng','94F4':'tāng','94F5':'ǎn','94F6':'yín','94F7':'rú','94F8':'zhù','94F9':'láo','94FA':'pū/pù','94FB':'wú','94FC':'lái','94FD':'tè','94FE':'liàn','94FF':'kēng','950A':'lüè','950B':'fēng','950C':'xīn','950D':'liǔ','950E':'kāi','950F':'jiǎn/jiàn','951A':'máo','951B':'bēn','951C':'qí','951D':'dé','951E':'kè','951F':'kūn','952A':'huò','952B':'péi','952C':'tán','952D':'dìng','952E':'jiàn','952F':'jù','953A':'zhōng','953B':'duàn','953C':'sōu','953D':'huáng','953E':'huán','953F':'āi','954A':'niè','954B':'tǎng','954C':'juān','954D':'niè','954E':'ná','954F':'liú/liù','955A':'bèng','955B':'yōng','955C':'jìng','955D':'dí/dī','955E':'zú','955F':'xuàn','956A':'qiāng/qiǎng','956B':'dèng','956C':'huò','956D':'léi','956E':'huán','956F':'zhuó','957A':'ǎo','957B':'dié','957C':'qū','957D':'liáo','957E':'mí','957F':'cháng/zhǎng','958A':'shān','958B':'kāi','958C':'kàng/kāng','958D':'bēng','958E':'hóng','958F':'rùn','959A':'zhān','959B':'pēng','959C':'kě','959D':'líng','959E':'biàn','959F':'bì','95A0':'rùn','95A1':'hé','95A2':'guān','95A3':'gé','95A4':'hé','95A5':'fá','95A6':'chù','95A7':'hòng/hōng/hǒng','95A8':'guī','95A9':'mǐn','95AA':'yáng','95AB':'kǔn','95AC':'lǎng/láng/làng','95AD':'lǘ','95AE':'tíng','95AF':'shà','95B0':'yán','95B1':'yuè','95B2':'yuè','95B3':'chǎn','95B4':'qù','95B5':'lìn','95B6':'chāng','95B7':'shài','95B8':'kǔn','95B9':'yān','95BA':'mín/wén','95BB':'yán','95BC':'è/yān','95BD':'hūn','95BE':'yù','95BF':'wén','95C0':'xiàng','95C1':'bāo','95C2':'xiàng','95C3':'qù','95C4':'yǎo','95C5':'wén','95C6':'bǎn','95C7':'àn','95C8':'wéi','95C9':'yīn','95CA':'kuò','95CB':'què','95CC':'lán','95CD':'dū/shé','95CE':'quán','95CF':'yè','95D0':'tián','95D1':'niè','95D2':'dá/tà','95D3':'kǎi','95D4':'hé','95D5':'què/quē','95D6':'chuǎng/chuàng','95D7':'guān','95D8':'dòu/dǒu','95D9':'qǐ','95DA':'kuī','95DB':'táng','95DC':'guān','95DD':'piáo','95DE':'kàn/hǎn/kǎn','95DF':'xī','95E0':'huì','95E1':'chǎn','95E2':'pì/bì/pī','95E3':'dàng','95E4':'huán','95E5':'tà','95E6':'wén','95E7':'tā','95E8':'mén','95E9':'shuān','95EA':'shǎn','95EB':'yán','95EC':'hàn','95ED':'bì','95EE':'wèn','95EF':'chuǎng','95F0':'rùn','95F1':'wéi','95F2':'xián','95F3':'hóng','95F4':'jiān/jiàn','95F5':'mǐn','95F6':'kāng','95F7':'mèn/mēn','95F8':'zhá','95F9':'nào','95FA':'guī','95FB':'wén','95FC':'tà','95FD':'mǐn','95FE':'lǘ','95FF':'kǎi','960A':'chāng','960B':'xì','960C':'wén','960D':'hūn','960E':'yán','960F':'yān','961A':'kàn','961B':'huán','961C':'fù','961D':'fù/yì','961E':'lè','961F':'duì','962A':'bǎn','962B':'péi','962C':'kēng','962D':'yǔn','962E':'ruǎn','962F':'zhǐ','963A':'dǐ','963B':'zǔ','963C':'zuò','963D':'diàn/yán','963E':'lǐng','963F':'ā/ē','964A':'duò','964B':'lòu','964C':'mò','964D':'jiàng/xiáng','964E':'shū','964F':'duò','965A':'fù','965B':'bì','965C':'shǎn','965D':'shǎn/xiá','965E':'shēng','965F':'zhì','966A':'péi','966B':'péi','966C':'zōu','966D':'yī/yǐ','966E':'duì','966F':'lún','967A':'xiǎn','967B':'yīn','967C':'zhǔ','967D':'yáng','967E':'réng','967F':'shǎn','968A':'duì','968B':'suí','968C':'ǎn','968D':'huáng','968E':'jiē','968F':'suí','969A':'táng','969B':'jì','969C':'zhàng','969D':'dǎo','969E':'áo','969F':'xì','96A0':'yǐn','96A1':'sà','96A2':'rào','96A3':'lín','96A4':'tuí','96A5':'dèng','96A6':'pí','96A7':'suì','96A8':'suí','96A9':'yù','96AA':'xiǎn','96AB':'fēn','96AC':'nǐ','96AD':'ér','96AE':'jī','96AF':'dǎo','96B0':'xí','96B1':'yǐn/yìn','96B2':'zhì','96B3':'huī','96B4':'lǒng','96B5':'xī','96B6':'lì','96B7':'lì','96B8':'lì','96B9':'zhuī/cuī','96BA':'hè','96BB':'zhī','96BC':'sǔn','96BD':'juàn','96BE':'nán/nàn','96BF':'yì','96C0':'què/qiāo','96C1':'yàn','96C2':'qín','96C3':'yǎ','96C4':'xióng','96C5':'yǎ','96C6':'jí','96C7':'gù','96C8':'huán','96C9':'zhì','96CA':'gòu','96CB':'jùn','96CC':'cí','96CD':'yōng','96CE':'jū','96CF':'chú','96D0':'hū','96D1':'zá','96D2':'luò','96D3':'yú','96D4':'chóu','96D5':'diāo','96D6':'suī','96D7':'hàn','96D8':'huò','96D9':'shuāng','96DA':'guàn','96DB':'chú','96DC':'zá','96DD':'yōng','96DE':'jī','96DF':'suí','96E0':'chóu','96E1':'liù','96E2':'lí','96E3':'nán/nàn','96E4':'xué','96E5':'zá','96E6':'jí','96E7':'jí','96E8':'yǔ','96E9':'yú','96EA':'xuě','96EB':'nǎ','96EC':'fǒu','96ED':'sè','96EE':'mù','96EF':'wén','96F0':'fēn','96F1':'páng','96F2':'yún','96F3':'lì','96F4':'lì','96F5':'yāng','96F6':'líng','96F7':'léi','96F8':'án','96F9':'báo','96FA':'méng','96FB':'diàn','96FC':'dàng','96FD':'háng/yú','96FE':'wù','96FF':'zhào','970A':'líng','970B':'qī','970C':'chōu','970D':'huò','970E':'shà','970F':'fēi','971A':'wù','971B':'líng','971C':'shuāng','971D':'líng','971E':'xiá','971F':'hóng','972A':'yín','972B':'xí','972C':'yì','972D':'ǎi','972E':'dàn','972F':'dèng','973A':'wéi','973B':'fēng','973C':'xǐ','973D':'jì','973E':'mái','973F':'mèng','974A':'fēng','974B':'lì','974C':'bǎo','974D':'hè','974E':'hè','974F':'hè','975A':'jìng/liàng','975B':'diàn','975C':'jìng','975D':'tiān','975E':'fēi','975F':'fēi','976A':'dīng','976B':'rèn','976C':'jiān','976D':'rèn','976E':'dí','976F':'dù','977A':'mò','977B':'zǔ','977C':'dá','977D':'bàn','977E':'yì','977F':'yào','978A':'jí','978B':'xié','978C':'ān','978D':'ān','978E':'hén','978F':'gǒng','979A':'kòng','979B':'běng','979C':'tà','979D':'zhǎng','979E':'bǐng','979F':'kuò','97A0':'jū','97A1':'la','97A2':'xiè','97A3':'róu','97A4':'bāng','97A5':'yì/ēng','97A6':'qiū','97A7':'qiū','97A8':'hé','97A9':'xiào','97AA':'mù','97AB':'jū','97AC':'jiān','97AD':'biān','97AE':'dī','97AF':'jiān','97B0':'yùn','97B1':'tāo','97B2':'gōu','97B3':'tà','97B4':'bèi','97B5':'xié','97B6':'pán','97B7':'gé','97B8':'bì','97B9':'kuò/kuī','97BA':'tāng','97BB':'lóu','97BC':'guì','97BD':'qiáo','97BE':'xuē','97BF':'jī','97C0':'jiān','97C1':'jiāng','97C2':'chàn','97C3':'dá','97C4':'huò','97C5':'xiǎn','97C6':'qiān','97C7':'dú','97C8':'wà','97C9':'jiān','97CA':'lán','97CB':'wéi','97CC':'rèn','97CD':'fú','97CE':'mèi','97CF':'juàn','97D0':'gé','97D1':'wěi','97D2':'qiào','97D3':'hán','97D4':'chàng','97D5':'kuò','97D6':'róu','97D7':'xùn','97D8':'shè','97D9':'wěi','97DA':'gé','97DB':'bèi','97DC':'tāo','97DD':'gòu','97DE':'yùn','97DF':'gāo','97E0':'bì','97E1':'wěi','97E2':'huì','97E3':'shǔ','97E4':'wà','97E5':'dú','97E6':'wéi','97E7':'rèn','97E8':'fú','97E9':'hán','97EA':'wěi','97EB':'yùn','97EC':'tāo','97ED':'jiǔ','97EE':'jiǔ','97EF':'xiān','97F0':'xiè','97F1':'xiān','97F2':'jī','97F3':'yīn','97F4':'zá','97F5':'yùn','97F6':'sháo','97F7':'luò','97F8':'péng','97F9':'huáng','97FA':'yīng','97FB':'yùn','97FC':'péng','97FD':'yīn/ān','97FE':'yīn','97FF':'xiǎng','980A':'xū','980B':'gù','980C':'sòng','980D':'kuǐ','980E':'qí','980F':'háng','981A':'jǐng/gěng','981B':'lěi','981C':'hé/hàn','981D':'qiāo','981E':'è','981F':'é','982A':'lèi','982B':'fǔ','982C':'jiá','982D':'tóu','982E':'huì','982F':'kuí','983A':'tuí','983B':'pín','983C':'lài','983D':'tuí','983E':'zī','983F':'zī','984A':'yí','984B':'sāi','984C':'tí','984D':'é','984E':'è','984F':'yán','985A':'diān','985B':'diān','985C':'jiǎng','985D':'kū','985E':'lèi','985F':'liáo','986A':'huī','986B':'zhàn/chàn','986C':'rú','986D':'hōng','986E':'bīn','986F':'xiǎn','987A':'shùn','987B':'xū','987C':'xū','987D':'wán','987E':'gù','987F':'dùn','988A':'jiá','988B':'tǐng','988C':'hé','988D':'yǐng','988E':'jiǒng','988F':'kē/ké','989A':'è','989B':'zhuān','989C':'yán','989D':'é','989E':'niè','989F':'mān','98A0':'diān','98A1':'sǎng','98A2':'hào','98A3':'lèi','98A4':'zhàn/chàn','98A5':'rú','98A6':'pín','98A7':'quán','98A8':'fēng','98A9':'biāo','98AA':'guā','98AB':'fú','98AC':'xiā','98AD':'zhǎn','98AE':'biāo','98AF':'sà','98B0':'fā','98B1':'tái','98B2':'liè','98B3':'guā','98B4':'xuàn','98B5':'shào','98B6':'jù','98B7':'biāo','98B8':'sī','98B9':'wěi','98BA':'yáng','98BB':'yáo','98BC':'sōu','98BD':'kǎi','98BE':'sāo','98BF':'fán','98C0':'liú','98C1':'xí','98C2':'liáo','98C3':'piāo','98C4':'piāo','98C5':'liú','98C6':'biāo','98C7':'biāo','98C8':'biāo','98C9':'liáo','98CA':'biāo','98CB':'sè','98CC':'fēng','98CD':'biāo','98CE':'fēng','98CF':'yáng','98D0':'zhǎn','98D1':'biāo','98D2':'sà','98D3':'jù','98D4':'sī','98D5':'sōu','98D6':'yáo','98D7':'liú','98D8':'piāo','98D9':'biāo','98DA':'biāo','98DB':'fēi','98DC':'fān','98DD':'fēi','98DE':'fēi','98DF':'shí','98E0':'shí/sì','98E1':'cān','98E2':'jī','98E3':'dìng','98E4':'sì','98E5':'tuó','98E6':'jiān','98E7':'sūn','98E8':'xiǎng','98E9':'tun','98EA':'rèn','98EB':'yù','98EC':'juàn','98ED':'chì','98EE':'yǐn/yìn','98EF':'fàn','98F0':'fàn','98F1':'sūn','98F2':'yǐn/yìn','98F3':'zhù','98F4':'yí','98F5':'zhǎi','98F6':'bì','98F7':'jiě','98F8':'tāo','98F9':'liǔ','98FA':'cí','98FB':'tiè','98FC':'sì','98FD':'bǎo','98FE':'shì','98FF':'duò','990A':'yǎng/yàng','990B':'yǎng','990C':'ěr','990D':'yàn','990E':'le','990F':'yī','991A':'yáo','991B':'hún','991C':'guǒ','991D':'shì','991E':'jiàn','991F':'zhuì','992A':'nuǎn','992B':'hún','992C':'hú/hū/hù','992D':'huáng','992E':'tiè','992F':'huì','993A':'bó','993B':'gāo','993C':'xì','993D':'kuì','993E':'liù/liú','993F':'sōu','994A':'sǎn','994B':'kuì','994C':'zhuàn','994D':'shàn','994E':'chì','994F':'dàn','995A':'hài','995B':'méng','995C':'yàn','995D':'mó','995E':'chán','995F':'xiǎng','996A':'rèn','996B':'yù','996C':'chì','996D':'fàn','996E':'yǐn/yìn','996F':'jiàn','997A':'jiǎo','997B':'xī','997C':'bǐng','997D':'bō','997E':'dòu','997F':'è','998A':'sōu','998B':'chán','998C':'yè','998D':'mó','998E':'bó','998F':'liù/liú','999A':'fén','999B':'bá','999C':'nǐ','999D':'bì','999E':'bó','999F':'tú','99A0':'hān','99A1':'fēi','99A2':'jiān','99A3':'yǎn','99A4':'ǎi','99A5':'fù','99A6':'xiān','99A7':'wēn','99A8':'xīn','99A9':'fén','99AA':'bīn','99AB':'xīng','99AC':'mǎ','99AD':'yù','99AE':'féng/píng','99AF':'hàn','99B0':'dì','99B1':'tuó/duò','99B2':'tuō','99B3':'chí','99B4':'xùn','99B5':'zhù','99B6':'zhī','99B7':'pèi','99B8':'xìn','99B9':'rì','99BA':'sà','99BB':'yǐn','99BC':'wén','99BD':'zhí','99BE':'dàn','99BF':'lǘ','99C0':'yóu','99C1':'bó','99C2':'bǎo','99C3':'kuài','99C4':'tuó/duò','99C5':'yì','99C6':'qū','99C7':'wén','99C8':'qū','99C9':'jiōng','99CA':'bǒ','99CB':'zhāo','99CC':'yuān','99CD':'pēng','99CE':'zhòu','99CF':'jù','99D0':'zhù','99D1':'nú','99D2':'jū','99D3':'pī','99D4':'zǎng','99D5':'jià','99D6':'líng','99D7':'zhēn','99D8':'tái','99D9':'fù','99DA':'yǎng','99DB':'shǐ','99DC':'bì','99DD':'tuó','99DE':'tuó','99DF':'sì','99E0':'liú','99E1':'mà','99E2':'pián','99E3':'táo','99E4':'zhì','99E5':'róng','99E6':'téng','99E7':'dòng','99E8':'xún','99E9':'quán','99EA':'shēn','99EB':'jiōng','99EC':'ěr','99ED':'hài','99EE':'bó','99EF':'zhū','99F0':'yīn','99F1':'luò','99F2':'zhōu','99F3':'dàn','99F4':'xiè','99F5':'liú','99F6':'jú','99F7':'sǒng','99F8':'qīn','99F9':'máng','99FA':'liáng','99FB':'hàn','99FC':'tú','99FD':'xuàn','99FE':'tuì','99FF':'jùn','9A00':'é','9A01':'chěng','9A02':'xīng','9A03':'ái','9A04':'lù','9A05':'zhuī','9A06':'zhōu','9A07':'shè','9A08':'pián','9A09':'kūn','9A0A':'táo','9A0B':'lái','9A0C':'zōng','9A0D':'kè','9A0E':'qí','9A0F':'qí','9A10':'yàn','9A11':'fēi','9A12':'sāo','9A13':'yàn','9A14':'jié/gě','9A15':'yǎo','9A16':'wù','9A17':'piàn','9A18':'cōng','9A19':'piàn','9A1A':'qián','9A1B':'fēi','9A1C':'huáng','9A1D':'jiān','9A1E':'huò','9A1F':'yù','9A20':'tí','9A21':'quán','9A22':'xiá','9A23':'zōng','9A24':'kuí','9A25':'róu','9A26':'sī','9A27':'guā','9A28':'tuó/tán','9A29':'kuì','9A2A':'sōu','9A2B':'qiān','9A2C':'chéng','9A2D':'zhì','9A2E':'liú','9A2F':'páng','9A30':'téng','9A31':'xī','9A32':'cǎo','9A33':'dú','9A34':'yàn','9A35':'yuán','9A36':'zōu','9A37':'sāo','9A38':'shàn','9A39':'lí','9A3A':'zhì','9A3B':'shuǎng','9A3C':'lù','9A3D':'xí','9A3E':'luó','9A3F':'zhāng','9A40':'mò','9A41':'ào','9A42':'cān','9A43':'piào/biāo','9A44':'cōng','9A45':'qū','9A46':'bì','9A47':'zhì','9A48':'yù','9A49':'xū','9A4A':'huá','9A4B':'bō','9A4C':'sù','9A4D':'xiāo','9A4E':'lín','9A4F':'zhàn','9A50':'dūn','9A51':'liú','9A52':'tuó','9A53':'zēng','9A54':'tán','9A55':'jiāo','9A56':'tiě','9A57':'yàn','9A58':'luó','9A59':'zhān','9A5A':'jīng','9A5B':'yì','9A5C':'yè','9A5D':'tuò','9A5E':'bīn','9A5F':'zòu/zhòu','9A60':'yàn','9A61':'péng','9A62':'lǘ','9A63':'téng','9A64':'xiāng','9A65':'jì','9A66':'shuāng','9A67':'jú','9A68':'xī','9A69':'huān','9A6A':'lí','9A6B':'biāo','9A6C':'mǎ','9A6D':'yù','9A6E':'tuó/duò','9A6F':'xùn','9A70':'chí','9A71':'qū','9A72':'rì','9A73':'bó','9A74':'lǘ','9A75':'zǎng','9A76':'shǐ','9A77':'sì','9A78':'fù','9A79':'jū','9A7A':'zōu','9A7B':'zhù','9A7C':'tuó','9A7D':'nú','9A7E':'jià','9A7F':'yì','9A80':'tái/dài','9A81':'xiāo','9A82':'mà','9A83':'yīn','9A84':'jiāo','9A85':'huá','9A86':'luò','9A87':'hài','9A88':'pián','9A89':'biāo','9A8A':'lí','9A8B':'chěng','9A8C':'yàn','9A8D':'xīng','9A8E':'qīn','9A8F':'jùn','9A90':'qí','9A91':'qí','9A92':'kè','9A93':'zhuī','9A94':'zōng','9A95':'sù','9A96':'cān','9A97':'piàn','9A98':'zhì','9A99':'kuí','9A9A':'sāo','9A9B':'wù','9A9C':'ào','9A9D':'liú','9A9E':'qiān','9A9F':'shàn','9AA0':'piào/biāo','9AA1':'luó','9AA2':'cōng','9AA3':'zhàn','9AA4':'zhòu','9AA5':'jì','9AA6':'shuāng','9AA7':'xiāng','9AA8':'gǔ/gū','9AA9':'wěi','9AAA':'wěi','9AAB':'wěi','9AAC':'yú','9AAD':'gàn','9AAE':'yì','9AAF':'āng','9AB0':'tóu','9AB1':'xiè/jiè','9AB2':'bó','9AB3':'bì','9AB4':'cī','9AB5':'tǐ','9AB6':'dǐ','9AB7':'kū','9AB8':'hái','9AB9':'qiāo','9ABA':'hóu','9ABB':'kuà','9ABC':'gé','9ABD':'tuǐ','9ABE':'gěng','9ABF':'pián','9AC0':'bì','9AC1':'kē','9AC2':'qià','9AC3':'yú','9AC4':'suǐ','9AC5':'lóu','9AC6':'bó','9AC7':'xiāo','9AC8':'bǎng','9AC9':'bō','9ACA':'cuō','9ACB':'kuān','9ACC':'bìn','9ACD':'mó','9ACE':'liáo','9ACF':'lóu','9AD0':'náo','9AD1':'dú','9AD2':'zāng','9AD3':'suǐ','9AD4':'tǐ','9AD5':'bìn','9AD6':'kuān','9AD7':'lú','9AD8':'gāo','9AD9':'gāo','9ADA':'qiào','9ADB':'kāo','9ADC':'qiāo','9ADD':'lào','9ADE':'zào','9ADF':'biāo/shān','9AE0':'kūn','9AE1':'kūn','9AE2':'tì','9AE3':'fǎng','9AE4':'xiū','9AE5':'rán','9AE6':'máo','9AE7':'dàn','9AE8':'kūn','9AE9':'bìn','9AEA':'fà','9AEB':'tiáo','9AEC':'pī','9AED':'zī','9AEE':'fà','9AEF':'rán','9AF0':'tì','9AF1':'pào','9AF2':'pì','9AF3':'máo','9AF4':'fú/fó','9AF5':'ér','9AF6':'róng','9AF7':'qū','9AF8':'gōng','9AF9':'xiū','9AFA':'guà','9AFB':'jì','9AFC':'péng','9AFD':'zhuā','9AFE':'shāo','9AFF':'shā','9B00':'tì','9B01':'lì','9B02':'bìn','9B03':'zōng','9B04':'tì','9B05':'péng','9B06':'sōng','9B07':'zhēng','9B08':'quán','9B09':'zōng','9B0A':'shùn','9B0B':'jiān','9B0C':'duǒ','9B0D':'hú','9B0E':'là','9B0F':'jiū','9B10':'qí','9B11':'lián','9B12':'zhěn','9B13':'bìn','9B14':'péng','9B15':'mò','9B16':'sān','9B17':'mán','9B18':'mán','9B19':'sēng','9B1A':'xū','9B1B':'liè','9B1C':'qiān','9B1D':'qiān','9B1E':'nóng','9B1F':'huán','9B20':'kuài','9B21':'níng','9B22':'bìn','9B23':'liè','9B24':'ráng','9B25':'dòu/dǒu','9B26':'dòu/dǒu','9B27':'nào','9B28':'hòng','9B29':'xì','9B2A':'dòu/dǒu','9B2B':'kàn','9B2C':'dòu','9B2D':'dòu/dǒu','9B2E':'jiū','9B2F':'chàng','9B30':'yù','9B31':'yù','9B32':'lì/gé','9B33':'juàn','9B34':'fǔ','9B35':'qián','9B36':'guī','9B37':'zōng','9B38':'liù','9B39':'guī','9B3A':'shāng','9B3B':'yù','9B3C':'guǐ','9B3D':'mèi','9B3E':'jì','9B3F':'qí','9B40':'jiè','9B41':'kuí','9B42':'hún','9B43':'bá','9B44':'pò','9B45':'mèi','9B46':'xū','9B47':'yǎn','9B48':'xiāo','9B49':'liǎng','9B4A':'yù','9B4B':'tuí','9B4C':'qī','9B4D':'wǎng','9B4E':'liǎng','9B4F':'wèi','9B50':'jiān','9B51':'chī','9B52':'piāo','9B53':'bì','9B54':'mó','9B55':'jǐ','9B56':'xū','9B57':'chǒu','9B58':'yǎn','9B59':'zhǎn','9B5A':'yú','9B5B':'dāo','9B5C':'rén','9B5D':'jì','9B5E':'bā','9B5F':'hōng','9B60':'tuō','9B61':'diào','9B62':'jǐ','9B63':'yú','9B64':'é','9B65':'què','9B66':'shā','9B67':'háng','9B68':'tún','9B69':'mò','9B6A':'gài','9B6B':'shěn','9B6C':'fǎn','9B6D':'yuán','9B6E':'pí','9B6F':'lǔ','9B70':'wén','9B71':'hú','9B72':'lú','9B73':'zá','9B74':'fáng','9B75':'fèn','9B76':'nà','9B77':'yóu','9B78':'piàn','9B79':'mó','9B7A':'hé/gě','9B7B':'xiá','9B7C':'qū','9B7D':'hān','9B7E':'pí','9B7F':'líng','9B80':'tuó','9B81':'bà','9B82':'qiú','9B83':'píng','9B84':'fú','9B85':'bì','9B86':'jì','9B87':'wèi','9B88':'jū','9B89':'diāo','9B8A':'bà','9B8B':'yóu','9B8C':'gǔn','9B8D':'pí','9B8E':'nián','9B8F':'xīng','9B90':'tái','9B91':'bào','9B92':'fù','9B93':'zhǎ','9B94':'jù','9B95':'gū','9B96':'shí','9B97':'dōng','9B98':'chóu/dài','9B99':'tà','9B9A':'jié','9B9B':'shuā','9B9C':'hòu','9B9D':'xiǎng','9B9E':'ér','9B9F':'àn','9BA0':'wéi','9BA1':'tiāo','9BA2':'zhū','9BA3':'yìn','9BA4':'liè','9BA5':'luò','9BA6':'tóng','9BA7':'yí','9BA8':'qí','9BA9':'bìng','9BAA':'wěi','9BAB':'jiāo','9BAC':'pù','9BAD':'guī/xié','9BAE':'xiān/xiǎn','9BAF':'gé','9BB0':'huí','9BB1':'lǎo','9BB2':'fú','9BB3':'kǎo','9BB4':'xiū','9BB5':'duó','9BB6':'jūn','9BB7':'tí','9BB8':'miǎn','9BB9':'shāo','9BBA':'zǎ','9BBB':'suō','9BBC':'qīn','9BBD':'yú','9BBE':'něi','9BBF':'zhé','9BC0':'gǔn','9BC1':'gěng','9BC2':'sū','9BC3':'wú','9BC4':'qiú','9BC5':'tíng','9BC6':'fǔ','9BC7':'huàn','9BC8':'chóu','9BC9':'lǐ','9BCA':'shā','9BCB':'shā','9BCC':'gào','9BCD':'méng','9BCE':'chéng','9BCF':'lí','9BD0':'zǒu','9BD1':'xī','9BD2':'yǒng','9BD3':'ní','9BD4':'zī','9BD5':'qí','9BD6':'qīng/zhēng','9BD7':'xiǎng','9BD8':'něi','9BD9':'chún','9BDA':'jì','9BDB':'diāo','9BDC':'qiè','9BDD':'gù','9BDE':'zhǒu','9BDF':'dōng','9BE0':'lái','9BE1':'fēi','9BE2':'ní','9BE3':'yì','9BE4':'kūn','9BE5':'lù','9BE6':'jiù','9BE7':'chāng','9BE8':'jīng','9BE9':'lún','9BEA':'líng','9BEB':'zōu','9BEC':'lí','9BED':'měng','9BEE':'zōng','9BEF':'zhí','9BF0':'nián/niǎn','9BF1':'hǔ','9BF2':'yú','9BF3':'dǐ','9BF4':'shī','9BF5':'sāo','9BF6':'hǔn','9BF7':'tí','9BF8':'hóu','9BF9':'xīng','9BFA':'jū','9BFB':'là','9BFC':'zōng','9BFD':'jì','9BFE':'biān','9BFF':'biān','9C00':'huàn','9C01':'quán','9C02':'jì','9C03':'wēi','9C04':'wēi','9C05':'yú','9C06':'chūn','9C07':'róu','9C08':'dié','9C09':'huáng','9C0A':'liàn','9C0B':'yǎn','9C0C':'qiū','9C0D':'qiū','9C0E':'jiàn','9C0F':'bì','9C10':'è','9C11':'yáng','9C12':'fù','9C13':'sāi/xǐ','9C14':'jiǎn','9C15':'há/xiā','9C16':'tuǒ','9C17':'hú','9C18':'shì','9C19':'ruò','9C1A':'xuān','9C1B':'wēn','9C1C':'jiān','9C1D':'hào','9C1E':'wū/wù','9C1F':'páng','9C20':'sāo','9C21':'liú','9C22':'mǎ','9C23':'shí','9C24':'shī','9C25':'guān','9C26':'zī','9C27':'téng','9C28':'tà/tǎ','9C29':'yáo','9C2A':'gé','9C2B':'róng','9C2C':'qián','9C2D':'qí','9C2E':'wēn','9C2F':'ruò','9C30':'shén','9C31':'lián','9C32':'áo','9C33':'lè','9C34':'huī','9C35':'mǐn','9C36':'jì','9C37':'tiáo','9C38':'qū','9C39':'jiān','9C3A':'sāo','9C3B':'mán','9C3C':'xí','9C3D':'qiú','9C3E':'biào','9C3F':'jī','9C40':'jì','9C41':'zhú','9C42':'jiāng','9C43':'qiū','9C44':'zhuān','9C45':'yōng','9C46':'zhāng','9C47':'kāng','9C48':'xuě','9C49':'biē','9C4A':'jué','9C4B':'qū','9C4C':'xiàng','9C4D':'bō','9C4E':'jiāo','9C4F':'xún','9C50':'sù','9C51':'huáng','9C52':'zūn','9C53':'shàn','9C54':'shàn','9C55':'fān','9C56':'guì','9C57':'lín','9C58':'xún','9C59':'miáo','9C5A':'xǐ','9C5B':'zēng','9C5C':'xiāng','9C5D':'fèn','9C5E':'guān','9C5F':'hòu','9C60':'kuài','9C61':'zéi','9C62':'sāo','9C63':'zhān','9C64':'gǎn','9C65':'guì','9C66':'shéng','9C67':'lǐ','9C68':'cháng','9C69':'léi','9C6A':'shǔ','9C6B':'ài','9C6C':'rú','9C6D':'jì','9C6E':'xù','9C6F':'huò','9C70':'shǔ','9C71':'lì','9C72':'liè','9C73':'lì','9C74':'miè','9C75':'zhēn','9C76':'xiǎng','9C77':'è','9C78':'lú','9C79':'guàn','9C7A':'lí','9C7B':'xiān','9C7C':'yú','9C7D':'dāo','9C7E':'jǐ','9C7F':'yóu','9C80':'tún','9C81':'lǔ','9C82':'fáng','9C83':'bā','9C84':'kě','9C85':'bà','9C86':'píng','9C87':'nián','9C88':'lú','9C89':'yóu','9C8A':'zhǎ','9C8B':'fù','9C8C':'bà/bó','9C8D':'bào','9C8E':'hòu','9C8F':'pí','9C90':'tái','9C91':'guī/xié','9C92':'jié','9C93':'kào','9C94':'wěi','9C95':'ér','9C96':'tóng','9C97':'zéi','9C98':'hòu','9C99':'kuài','9C9A':'jì','9C9B':'jiāo','9C9C':'xiān/xiǎn','9C9D':'zhǎ','9C9E':'xiǎng','9C9F':'xún','9CA0':'gěng','9CA1':'lí','9CA2':'lián','9CA3':'jiān','9CA4':'lǐ','9CA5':'shí','9CA6':'tiáo','9CA7':'gǔn','9CA8':'shā','9CA9':'huàn','9CAA':'jūn','9CAB':'jì','9CAC':'yǒng','9CAD':'qīng/zhēng','9CAE':'líng','9CAF':'qí','9CB0':'zōu','9CB1':'fēi','9CB2':'kūn','9CB3':'chāng','9CB4':'gù','9CB5':'ní','9CB6':'nián','9CB7':'diāo','9CB8':'jīng','9CB9':'shēn','9CBA':'shī','9CBB':'zī','9CBC':'fèn','9CBD':'dié','9CBE':'bī','9CBF':'cháng','9CC0':'tí','9CC1':'wēn','9CC2':'wēi','9CC3':'sāi','9CC4':'è','9CC5':'qiū','9CC6':'fù','9CC7':'huáng','9CC8':'quán','9CC9':'jiāng','9CCA':'biān','9CCB':'sāo','9CCC':'áo','9CCD':'qí','9CCE':'tǎ','9CCF':'guān','9CD0':'yáo','9CD1':'páng','9CD2':'jiān','9CD3':'lè','9CD4':'biào','9CD5':'xuě','9CD6':'biē','9CD7':'mán','9CD8':'mǐn','9CD9':'yōng','9CDA':'wèi','9CDB':'xí','9CDC':'guì','9CDD':'shàn','9CDE':'lín','9CDF':'zūn','9CE0':'hù','9CE1':'gǎn','9CE2':'lǐ','9CE3':'shàn','9CE4':'guǎn','9CE5':'niǎo','9CE6':'yǐ','9CE7':'fú','9CE8':'lì','9CE9':'jiū','9CEA':'bǔ','9CEB':'yàn','9CEC':'fú','9CED':'diāo','9CEE':'jī','9CEF':'fèng','9CF0':'rù','9CF1':'gān','9CF2':'shī','9CF3':'fèng','9CF4':'míng','9CF5':'bǎo','9CF6':'yuān','9CF7':'zhī','9CF8':'hù','9CF9':'qián','9CFA':'fū','9CFB':'fēn','9CFC':'wén','9CFD':'jiān','9CFE':'shī','9CFF':'yù','9D00':'fǒu','9D01':'yiāo','9D02':'jú','9D03':'jué','9D04':'pī','9D05':'huān','9D06':'zhèn','9D07':'bǎo','9D08':'yàn','9D09':'yā','9D0A':'zhèng','9D0B':'fāng','9D0C':'fèng','9D0D':'wén','9D0E':'ōu','9D0F':'tè','9D10':'jiā','9D11':'nū','9D12':'líng','9D13':'miè','9D14':'fú','9D15':'tuó','9D16':'wén','9D17':'lì','9D18':'biàn','9D19':'zhì','9D1A':'gē','9D1B':'yuān','9D1C':'zī','9D1D':'qú','9D1E':'xiāo','9D1F':'chī','9D20':'dàn','9D21':'jū','9D22':'yòu','9D23':'gū','9D24':'zhōng','9D25':'yù','9D26':'yāng','9D27':'ròng','9D28':'yā','9D29':'zhì','9D2A':'yù','9D2B':'tián','9D2C':'yīng','9D2D':'zhuī','9D2E':'wū','9D2F':'ér','9D30':'guā','9D31':'ài','9D32':'zhī','9D33':'yàn','9D34':'héng','9D35':'jiāo','9D36':'jí','9D37':'liè','9D38':'zhū','9D39':'rén','9D3A':'tí','9D3B':'hóng','9D3C':'luò','9D3D':'rú','9D3E':'móu','9D3F':'gē','9D40':'rèn','9D41':'jiāo','9D42':'xiū','9D43':'zhōu','9D44':'chī','9D45':'luò','9D46':'héng','9D47':'nián','9D48':'ě','9D49':'luán','9D4A':'jiá','9D4B':'jì','9D4C':'yú','9D4D':'huān','9D4E':'tuǒ','9D4F':'bū','9D50':'wú','9D51':'juān','9D52':'yù','9D53':'bó','9D54':'xùn','9D55':'xùn','9D56':'bì','9D57':'xī','9D58':'jùn','9D59':'jú','9D5A':'tú/tū','9D5B':'jīng','9D5C':'tí/tì','9D5D':'é','9D5E':'é','9D5F':'kuáng','9D60':'hú/gǔ','9D61':'wǔ','9D62':'shēn','9D63':'là','9D64':'jiǎo','9D65':'pàn','9D66':'lù','9D67':'bìng','9D68':'shū','9D69':'fú','9D6A':'ān','9D6B':'zhào','9D6C':'péng','9D6D':'qín','9D6E':'qiān','9D6F':'bēi','9D70':'diāo','9D71':'lù','9D72':'què','9D73':'jiān','9D74':'jú','9D75':'tù','9D76':'yā','9D77':'yuān','9D78':'qí','9D79':'lí','9D7A':'yè','9D7B':'zhuī','9D7C':'kōng','9D7D':'duò','9D7E':'kūn','9D7F':'shēng','9D80':'qí','9D81':'jīng','9D82':'ní','9D83':'è','9D84':'jīng','9D85':'zī','9D86':'lái','9D87':'dōng','9D88':'qī','9D89':'chún','9D8A':'gēng','9D8B':'jū','9D8C':'qū','9D8D':'yì','9D8E':'zūn','9D8F':'jī','9D90':'shù','9D91':'wéi','9D92':'chǐ','9D93':'miáo','9D94':'róu','9D95':'fú','9D96':'qiū','9D97':'tí','9D98':'hú','9D99':'tí','9D9A':'è','9D9B':'jiē','9D9C':'máo','9D9D':'fú','9D9E':'chūn','9D9F':'tú','9DA0':'yǎn','9DA1':'hé','9DA2':'yuán','9DA3':'piān/bìn','9DA4':'yùn','9DA5':'méi','9DA6':'hú','9DA7':'yīng','9DA8':'dùn','9DA9':'mù/wù','9DAA':'jú','9DAB':'dōng','9DAC':'cāng','9DAD':'fǎng','9DAE':'gè','9DAF':'yīng','9DB0':'yuán','9DB1':'xuān','9DB2':'wēng','9DB3':'shī','9DB4':'hè','9DB5':'chú','9DB6':'táng','9DB7':'xià','9DB8':'ruò','9DB9':'liú','9DBA':'jí','9DBB':'gǔ/hú','9DBC':'jiān','9DBD':'zhǔn','9DBE':'hàn','9DBF':'zī','9DC0':'cí','9DC1':'yì','9DC2':'yào','9DC3':'yàn','9DC4':'jī','9DC5':'lì/piǎo','9DC6':'tián','9DC7':'kòu','9DC8':'tī','9DC9':'tī','9DCA':'nì','9DCB':'tú','9DCC':'mǎ','9DCD':'jiāo','9DCE':'liú','9DCF':'zhēn','9DD0':'chén','9DD1':'lì','9DD2':'zhuān','9DD3':'zhè','9DD4':'áo','9DD5':'yǎo','9DD6':'yī','9DD7':'ōu','9DD8':'chì','9DD9':'zhì','9DDA':'liáo/liù','9DDB':'róng','9DDC':'lóu','9DDD':'bì','9DDE':'shuāng','9DDF':'zhuó','9DE0':'yú','9DE1':'wú','9DE2':'jué','9DE3':'yín','9DE4':'tán','9DE5':'sī','9DE6':'jiāo','9DE7':'yì','9DE8':'huā','9DE9':'bì','9DEA':'yīng','9DEB':'sù','9DEC':'huáng','9DED':'fán','9DEE':'jiāo','9DEF':'liáo','9DF0':'yàn','9DF1':'kāo','9DF2':'jiù','9DF3':'xián','9DF4':'xián','9DF5':'tú','9DF6':'mǎi','9DF7':'zūn','9DF8':'yù','9DF9':'yīng','9DFA':'lù','9DFB':'tuán','9DFC':'xián','9DFD':'xué','9DFE':'yì','9DFF':'pì','9E00':'shú','9E01':'luó','9E02':'qī','9E03':'yí','9E04':'jī','9E05':'zhé','9E06':'yú','9E07':'zhān','9E08':'yè','9E09':'yáng','9E0A':'pì','9E0B':'níng','9E0C':'hù','9E0D':'mí','9E0E':'yīng','9E0F':'méng','9E10':'dí','9E11':'yuè','9E12':'yú','9E13':'lěi','9E14':'bó','9E15':'lú','9E16':'hè','9E17':'lóng','9E18':'shuāng','9E19':'yuè','9E1A':'yīng','9E1B':'guàn','9E1C':'qú','9E1D':'lí','9E1E':'luán','9E1F':'niǎo','9E20':'jiū','9E21':'jī','9E22':'yuān','9E23':'míng','9E24':'shī','9E25':'ōu','9E26':'yā','9E27':'cāng','9E28':'bǎo','9E29':'zhèn','9E2A':'gū','9E2B':'dōng','9E2C':'lú','9E2D':'yā','9E2E':'xiāo','9E2F':'yāng','9E30':'líng','9E31':'chī','9E32':'qú','9E33':'yuān','9E34':'xué','9E35':'tuó','9E36':'sī','9E37':'zhì','9E38':'ér','9E39':'guā','9E3A':'xiū','9E3B':'héng','9E3C':'zhōu','9E3D':'gē','9E3E':'luán','9E3F':'hóng','9E40':'wú','9E41':'bó','9E42':'lí','9E43':'juān','9E44':'hú/gǔ','9E45':'é','9E46':'yù','9E47':'xián','9E48':'tí','9E49':'wǔ','9E4A':'què','9E4B':'miáo','9E4C':'ān','9E4D':'kūn','9E4E':'bēi','9E4F':'péng','9E50':'qiān','9E51':'chún','9E52':'gēng','9E53':'yuān','9E54':'sù','9E55':'hú','9E56':'hé','9E57':'è','9E58':'gǔ/hú','9E59':'qiū','9E5A':'cí','9E5B':'méi','9E5C':'wù','9E5D':'yì','9E5E':'yào','9E5F':'wēng','9E60':'liú','9E61':'jí','9E62':'yì','9E63':'jiān','9E64':'hè','9E65':'yī','9E66':'yīng','9E67':'zhè','9E68':'liù','9E69':'liáo','9E6A':'jiāo','9E6B':'jiù','9E6C':'yù','9E6D':'lù','9E6E':'huán','9E6F':'zhān','9E70':'yīng','9E71':'hù','9E72':'méng','9E73':'guàn','9E74':'shuāng','9E75':'lǔ','9E76':'jīn','9E77':'líng','9E78':'jiǎn','9E79':'xián','9E7A':'cuó','9E7B':'jiǎn','9E7C':'jiǎn','9E7D':'yán','9E7E':'cuó','9E7F':'lù','9E80':'yōu','9E81':'cū','9E82':'jǐ','9E83':'biāo','9E84':'cū','9E85':'páo','9E86':'zhù','9E87':'jūn/qún','9E88':'zhǔ','9E89':'jiān/qiān','9E8A':'mí','9E8B':'mí','9E8C':'wú','9E8D':'liú','9E8E':'chén','9E8F':'jūn/qún','9E90':'lín','9E91':'ní','9E92':'qí','9E93':'lù','9E94':'jiù','9E95':'jūn/qún','9E96':'jīng','9E97':'lì/lí','9E98':'xiāng','9E99':'yán','9E9A':'jiā','9E9B':'mí','9E9C':'lì','9E9D':'shè','9E9E':'zhāng','9E9F':'lín','9EA0':'jīng','9EA1':'qí','9EA2':'líng','9EA3':'yán','9EA4':'cū','9EA5':'mài','9EA6':'mài','9EA7':'gē','9EA8':'chǎo','9EA9':'fū','9EAA':'miàn','9EAB':'miǎn','9EAC':'fū','9EAD':'pào','9EAE':'qù','9EAF':'qū/qǔ','9EB0':'móu','9EB1':'fū','9EB2':'xiàn','9EB3':'lái','9EB4':'qú/qū','9EB5':'miàn','9EB6':'chī/lí','9EB7':'fēng','9EB8':'fū','9EB9':'qū','9EBA':'miàn','9EBB':'má','9EBC':'má','9EBD':'mó','9EBE':'huī','9EBF':'mǒ','9EC0':'zōu','9EC1':'nēn','9EC2':'fén','9EC3':'huáng','9EC4':'huáng','9EC5':'jīn','9EC6':'guāng','9EC7':'tiān','9EC8':'tǒu','9EC9':'hóng','9ECA':'xī','9ECB':'kuàng','9ECC':'hóng','9ECD':'shǔ','9ECE':'lí','9ECF':'nián','9ED0':'chī/lí','9ED1':'hēi','9ED2':'hēi','9ED3':'yì','9ED4':'qián','9ED5':'zhěn','9ED6':'xì','9ED7':'tuǎn','9ED8':'mò','9ED9':'mò','9EDA':'qián','9EDB':'dài','9EDC':'chù','9EDD':'yǒu','9EDE':'diǎn','9EDF':'yī','9EE0':'xiá','9EE1':'yǎn','9EE2':'qū','9EE3':'měi','9EE4':'yǎn','9EE5':'qíng','9EE6':'yù','9EE7':'lí','9EE8':'dǎng','9EE9':'dú','9EEA':'cǎn','9EEB':'yīn','9EEC':'àn','9EED':'yǎn','9EEE':'tán','9EEF':'àn','9EF0':'zhěn','9EF1':'dài','9EF2':'cǎn','9EF3':'yī','9EF4':'méi','9EF5':'dǎn','9EF6':'yǎn','9EF7':'dú','9EF8':'lú','9EF9':'zhǐ','9EFA':'fěn','9EFB':'fú','9EFC':'fǔ','9EFD':'mǐn/miǎn','9EFE':'mǐn','9EFF':'yuán','9F00':'cù','9F01':'qù','9F02':'cháo','9F03':'wā','9F04':'zhū','9F05':'zhī','9F06':'máng','9F07':'áo','9F08':'biē','9F09':'tuó','9F0A':'bì','9F0B':'yuán','9F0C':'cháo','9F0D':'tuó','9F0E':'dǐng','9F0F':'mì','9F10':'nài','9F11':'dǐng','9F12':'zī','9F13':'gǔ','9F14':'gǔ','9F15':'dōng','9F16':'fén','9F17':'táo','9F18':'yuān','9F19':'pí','9F1A':'chāng','9F1B':'gāo','9F1C':'qì','9F1D':'yuān','9F1E':'tāng','9F1F':'tēng','9F20':'shǔ','9F21':'shǔ','9F22':'fén','9F23':'fèi','9F24':'wén','9F25':'bá','9F26':'diāo','9F27':'tuó','9F28':'tóng','9F29':'qú','9F2A':'shēng','9F2B':'shí','9F2C':'yòu','9F2D':'shí','9F2E':'tíng','9F2F':'wú','9F30':'niàn','9F31':'jīng','9F32':'hún','9F33':'jú','9F34':'yǎn','9F35':'tú','9F36':'sī','9F37':'xī','9F38':'xiǎn','9F39':'yǎn','9F3A':'léi','9F3B':'bí','9F3C':'yáo','9F3D':'yǎn/quí','9F3E':'hān','9F3F':'huī','9F40':'wù','9F41':'hōu','9F42':'xì','9F43':'gé','9F44':'zhā','9F45':'xiù','9F46':'wèng','9F47':'zhā','9F48':'nóng','9F49':'nàng','9F4A':'qí','9F4B':'zhāi','9F4C':'jì','9F4D':'zī/jī','9F4E':'jī','9F4F':'jī','9F50':'qí','9F51':'jī','9F52':'chǐ','9F53':'chěn','9F54':'chèn','9F55':'hé','9F56':'yá','9F57':'kěn','9F58':'xiè','9F59':'bāo','9F5A':'zé','9F5B':'shì','9F5C':'zī','9F5D':'chī','9F5E':'niàn','9F5F':'jǔ','9F60':'tiáo','9F61':'líng','9F62':'líng','9F63':'chū','9F64':'quán','9F65':'xiè','9F66':'yín','9F67':'niè','9F68':'jiù','9F69':'niè','9F6A':'chuò','9F6B':'kǔn','9F6C':'yǔ','9F6D':'chǔ','9F6E':'yǐ','9F6F':'ní','9F70':'cuò','9F71':'chuò','9F72':'qǔ','9F73':'niǎn','9F74':'xiǎn','9F75':'yú','9F76':'è','9F77':'wò','9F78':'yì','9F79':'chī','9F7A':'zōu','9F7B':'diān','9F7C':'chǔ','9F7D':'jìn','9F7E':'yà','9F7F':'chǐ','9F80':'chèn','9F81':'hé','9F82':'yín','9F83':'jǔ','9F84':'líng','9F85':'bāo','9F86':'tiáo','9F87':'zī','9F88':'yín','9F89':'yǔ','9F8A':'chuò','9F8B':'qǔ','9F8C':'wò','9F8D':'lóng','9F8E':'páng','9F8F':'gōng','9F90':'páng','9F91':'yǎn','9F92':'lóng','9F93':'lóng','9F94':'gōng','9F95':'kān','9F96':'tà','9F97':'líng','9F98':'tà','9F99':'lóng','9F9A':'gōng','9F9B':'kān','9F9C':'guī/jūn/qiū','9F9D':'qiū','9F9E':'biē','9F9F':'guī/jūn/qiū','9FA0':'yuè','9FA1':'chuī','9FA2':'hé','9FA3':'jué','9FA4':'xié','9FA5':'yuè'},pin=exports.pin=new RegExp('%u(3[4-9a-fA-F][0-9a-fA-F]{2}|[4-9][0-9a-fA-F]{3})','g'),pinyin2=exports.pinyin2={'a':{'a':['554A'],'ai':['560A'],'ā':['5416','9312','9515','554A','814C','963F'],'āi':['5509','6328','6371','9384','3dbc','54C0','54CE','57C3','92B0','953F'],'ān':['3784','4002','4156','5388','6849','8164','36fa','3ae8','3e29','48bf','4F92','53B0','57B5','5A95','5B89','5CD6','5E83','5EB5','5EE0','5EE3','6C28','75F7','76E6','76EB','843B','844A','84ED','8A9D','8AF3','8C19','92A8','978C','978D','97FD','9D6A','9E4C'],'āng':['80AE','9AAF'],'āo':['356d','3a60','4adc','51F9','67EA','688E','71AC','8EEA'],'á':['554A','55C4'],'ái':['4839','5540','6328','6371','6571','6573','7691','3c6f','4da3','51D2','560A','5A3E','5D66','764C','769A','9A03'],'án':['4719','557D','73B5','96F8'],'áng':['6602','3b7f','401a','44a2','4a55','4b79','536C','5C87','663B'],'áo':['3802','6556','7352','7353','7488','8071','9068','37fc','3ff0','495d','498b','4d45','53AB','55F7','55F8','56C2','5D85','5ED2','646E','6EF6','71AC','720A','78DD','7FF1','7FF6','7FFA','851C','87AF','8B37','8B38','93D6','969E','9C32','9CCC','9DD4','9F07'],'ǎ':['554A'],'ǎi':['4442','6639','9744','388a','4a20','4F41','55F3','566F','6B38','6BD0','77EE','853C','85F9','8EB7','972D','99A4'],'ǎn':['5535','5837','371d','3f62','4FFA','57EF','63DE','667B','7F6F','92A8','94F5','968C'],'ǎng':['41e6','4b7a','8EEE'],'ǎo':['3443','3907','8884','8956','4be0','4d08','5AAA','5ABC','629D','82BA','957A'],'à':['554A'],'ài':['3637','3776','3905','4033','5509','5828','5867','7231','7477','7839','7919','8586','9440','9698','9749','354c','35d2','3fa2','3fc4','416c','453d','477d','4F0C','50FE','53C6','55CC','55F3','566F','5AD2','5B21','611B','61D3','61DD','66A7','66D6','6FED','74A6','76A7','77B9','784B','788D','827E','8B6A','8CF9','9C6B','9D31'],'àn':['4141','5111','5813','6309','6697','6848','37c1','3c58','4b13','4b97','4be5','530E','533C','5A69','5CB8','6D1D','72B4','80FA','834C','83F4','8C7B','8C8B','930C','95C7','9B9F','9EEC','9EEF'],'àng':['3f1c','678A','76CE','91A0'],'ào':['3729','3817','4712','5773','5787','5961','5965','5967','6160','6277','362c','362d','371c','397f','443f','4ae8','4baf','50B2','58BA','5AEF','5C99','5DB4','61CA','62D7','64D9','6F9A','6FB3','8A4F','93CA','9A41','9A9C']},'b':{'ba':['5427','7F77'],'bai':['35d1'],'bā':['5427','6252','6733','7390','3b6d','3e2d','3eb4','3fec','4c3e','4E37','4EC8','516B','53ED','54F5','593F','5C9C','5DF4','634C','75A4','7B06','7C91','7D26','7F93','82AD','8C5D','91DF','9B5E','9C83'],'bāi':['34e6','4ab9','63B0'],'bān':['4232','6273','6591','6592','7622','8668','8929','9812','9881','40d1','642C','653D','670C','73ED','764D','80A6','822C','878C','8FAC'],'bāng':['3643','6360','6886','3a0d','3ff6','4a77','57B9','5E2E','5E47','5E5A','5E6B','6D5C','7E0D','90A6','90AB','97A4'],'bāo':['5265','5305','7172','8554','8912','8943','4F68','52F9','5B62','67B9','70AE','7B23','80DE','82DE','85F5','95C1','9F59','9F85'],'bá':['8307','9238','351c','47e6','4b82','4cca','53D0','577A','58A2','59AD','629C','62D4','70A6','72AE','79E1','80C8','83DD','8A59','8DCB','8EF7','999B','9B43','9F25'],'bái':['3fdf','4cc6','767D'],'báo':['4964','8584','3d61','3ffa','420f','4a0c','4a14','4aa8','5AD1','74DD','7A87','96F9'],'bǎ':['9200','9776','378e','628A','6B1B','94AF'],'bǎi':['4653','5161','6446','6822','4F2F','4F70','636D','64FA','67CF','74F8','767E','77F2','7AE1','7CA8','7D54','896C'],'bǎn':['5742','6604','7248','8228','8742','9211','427d','4b33','5C85','677F','74EA','7C84','94A3','95C6','962A'],'bǎng':['7253','7255','8180','3b84','699C','7D81','7ED1','9AC8'],'bǎo':['3645','4382','5821','5822','6009','8446','8913','9971','3ec4','4b4b','4b78','4cc8','4cf0','4d10','4FDD','5AAC','5B9D','5BB2','5BDA','5BF3','5BF6','73E4','7DE5','85F5','8CF2','974C','98FD','99C2','9CF5','9D07','9E28'],'bà':['4189','7238','7308','8019','8987','9738','3d9a','40fb','41d1','43ac','43b1','4a57','4a7b','4d95','575D','57BB','58E9','5F1D','628A','6B1B','705E','7F62','7F77','9B81','9B8A','9C85','9C8C'],'bài':['3525','3814','4494','4899','5504','6557','5E8D','62DC','62DD','77F2','7A17','7CBA','85AD','86FD','8D01','8D25'],'bàn':['3698','6011','9261','3ab5','4F34','529E','534A','59C5','626E','62CC','67C8','6E74','74E3','79DA','7D46','7ECA','8FA6','977D'],'bàng':['6412','8255','9551','3b4b','409c','43a7','45ab','49db','4c37','508D','585D','68D2','68D3','78C5','7A16','84A1','868C','872F','8B17','8C24','938A'],'bào':['3678','4916','5124','5228','5697','5831','7206','8663','9464','3ae7','3c92','52FD','5FC1','62A5','62B1','66B4','66D3','72A6','83E2','86AB','888C','8C79','8DB5','924B','94C7','9B91','9C8D'],'bei':['5457','5504','81C2'],'bē':['8421'],'bēi':['5351','6911','7891','7986','8406','9303','9642','35d7','3f61','496f','4F13','505D','57E4','60B2','63F9','676F','686E','76C3','7DBC','80CC','9D6F','9E4E'],'bēn':['5954','7287','9029','681F','6CCD','6E00','8CC1','8D32','931B','951B'],'bēng':['3519','5623','5874','446b','4a1c','4F3B','595F','5D29','5D6D','5F38','794A','7D63','7DB3','7E43','7EF7','958D'],'béng':['752D'],'běi':['3933','5317','9273','42f3'],'běn':['3877','5932','5959','3bba','672C','694D','755A','82EF'],'běng':['4640','345f','42fd','4a6c','4cde','57F2','73A4','742B','7DB3','7EF7','83F6','8A81','979B'],'bèi':['3528','4512','4876','5079','5099','5907','5970','6096','6102','6601','6896','7119','7295','7432','7999','8919','9101','9781','36dd','38c1','3af2','3c06','3d94','3df6','3e22','3e2c','3e3d','3ed7','3fb1','47fa','4a40','4c3d','4FFB','500D','50C3','54F1','5B5B','60EB','618A','726C','72C8','72FD','73FC','789A','7AE1','7CD2','7D34','80CC','84D3','88AB','8A96','8C9D','8D1D','8EF0','8F29','8F88','90B6','90E5','92C7','943E','94A1','97B4','97DB'],'bèn':['3913','5034','5954','6379','6873','7287','7356','3a27','3ba5','4b31','574C','64AA','7B28','8F3D'],'bèng':['3def','4a3b','4b70','580B','63FC','69F0','6CF5','750F','7DB3','7EF7','868C','872F','8DF0','8E66','8FF8','902C','93F0','955A'],'biān':['6944','7178','7251','7335','7371','7502','8759','9089','47cd','67C9','782D','7A28','7B3E','7BAF','7C69','7DE8','7F16','8FB9','8FBA','908A','937D','97AD','9BFE','9BFF','9CCA'],'biāo':['4043','4673','5126','5882','6753','6807','7202','8198','8508','9463','9556','9573','3dbe','406d','417a','4bbd','5E56','5F6A','647D','6A19','6EEE','700C','706C','719B','730B','762D','78E6','7A6E','7F86','813F','81D5','85E8','8B24','8D06','93E2','98A9','98AE','98B7','98C6','98C7','98C8','98CA','98CD','98D1','98D9','98DA','9A43','9A6B','9A89','9AA0','9ADF','9E83'],'biǎn':['4075','6241','8439','399a','533E','60FC','78A5','7A86','7CC4','85CA','890A','8CB6','8D2C'],'biǎo':['3812','4538','8868','9336','37fd','3bf9','5A4A','6AA6','88F1','893E','8AD8'],'biàn':['3778','4278','4862','5909','6283','8251','38d0','3b53','3ca2','3cce','3cd2','3d1c','3d77','3eb9','44aa','46d2','4abb','4FBF','535E','53D8','5CC5','5F01','5FA7','5FED','63D9','662A','6C73','6C74','709E','73A3','7DF6','7F0F','82C4','898D','8B8A','8FA1','8FA7','8FA8','8FA9','8FAB','8FAE','8FAF','904D','91C6','959E','9D18'],'biào':['4784','39fc','4FF5','647D','9C3E','9CD4'],'biē':['3521','4637','42e2','4ce4','618B','762A','765F','864C','9C49','9CD6','9F08','9F9E'],'bié':['4825','5225','5487','8382','8952','41f7','43df','4b71','522B','5FB6','87DE','8E69'],'biě':['3fdc','762A','765F','86C2'],'biè':['4318','38bc','522B','5F46','7E2A'],'bī':['3859','7680','8795','469c','4afe','4ba0','506A','5C44','698C','6BF4','7A2B','8C4D','903C','9CBE'],'bīn':['4694','5110','6915','7015','7478','8819','9554','9726','3ede','49ec','4a08','50A7','5BBE','5F6C','658C','68B9','69DF','6AB3','6C43','6EE8','6FD2','6FF1','6FF5','6FF9','73A2','74B8','77C9','7E7D','7F24','8C69','8C73','8CD3','8CD4','90A0','944C','986E','99AA','9A5E'],'bīng':['5175','450a','4ECC','4ED2','50A1','51AB','51B0','63A4','681F','68B9','69DF','6AB3','6C37','7ADD','92F2'],'bí':['8378','4a06','4d44','5B36','9F3B'],'bǐ':['3832','4621','5315','5421','5936','7595','9119','3a8f','3ef6','40fe','43e2','48e5','4F4A','4FFE','555A','59A3','5C44','5F7C','673C','67C0','6BD4','6C98','6F77','79D5','7B14','7B46','7C83','822D','8C8F'],'bǐn':['4414'],'bǐng':['6032','7415','7980','9235','9643','9905','9920','3a00','4d35','4E19','5C4F','5EB0','62A6','661E','663A','67C4','68C5','70B3','772A','79C9','7A1F','7A89','82EA','86C3','90B4','927C','979E','997C'],'bì':['3620','3629','3644','3840','4023','4079','4136','4557','5302','5489','5752','6255','6583','6707','6788','6890','6945','7358','7359','7540','7562','7695','8177','8298','8406','8890','8945','8952','8963','9128','9434','9587','9589','9946','34d6','38b0','38b6','38b8','39d9','3aa4','3bbf','3bc7','3c78','3cfc','3d65','3eeb','3feb','427e','42a7','42d4','43b5','43f6','45a9','47c6','47e4','480b','49d7','4a5b','4a90','4ac1','4b1b','4ba1','4bd7','4F56','54D4','55F6','57E4','581B','58C1','59BC','5A62','5AF3','5B16','5E01','5E63','5E64','5E87','5EB3','5EE6','5F0A','5F3B','5F3C','5F43','5FC5','602D','610A','610E','655D','67EB','67F2','6A98','6BD5','6BD6','6BD9','6CCC','6E62','6ED7','6EED','6F77','6FDE','714F','719A','72F4','73CC','74A7','75AA','75F9','75FA','78A7','79D8','7B5A','7B84','7B85','7B86','7BE6','7BF3','7C8A','7E2A','7F7C','805B','81C2','82FE','835C','841E','84D6','84FD','853D','859C','870C','88E8','895E','89F1','8A56','8BD0','8CB1','8CC1','8D14','8D32','8D51','8DF8','8E55','8E83','8E84','8F9F','907F','90B2','912A','924D','939E','93CE','94CB','959F','95E2','95ED','965B','97B8','97E0','98F6','999D','99DC','9A46','9AB3','9AC0','9B53','9B85','9C0F','9D56','9DDD','9DE9','9F0A'],'bìn':['5110','6448','8191','64EF','6BA1','6BAF','6C1E','81CF','9ACC','9AD5','9AE9','9B02','9B13','9B22','9DA3'],'bìng':['5002','6452','6824','9750','34c8','45d2','4E26','4F75','504B','50A1','57AA','5BCE','5E76','5E77','75C5','7ADD','9BA9','9D67'],'bo':['5575','8514','535C','818A'],'bō':['3788','5265','7676','7677','7835','7886','8543','9262','9911','40d7','475b','4b66','525D','5CA5','5D93','62E8','64A5','64AD','67ED','6CE2','6E8A','73BB','76CB','7F3D','83E0','889A','894F','8DB5','8E73','94B5','997D','9A4B','9AC9','9C4D'],'bó':['4378','4448','6540','6822','6872','7254','7921','7934','8116','8236','8421','8467','8584','9251','9548','35d8','37d1','3a67','3a6d','3a8d','3b0d','3b27','3d3e','3dbf','3e40','3f0e','3f1f','3f23','408d','42bf','431f','45da','464f','47b3','47db','488c','48aa','496c','4a87','4aac','4b2a','4b6f','4b80','4bcb','4c0a','4cc1','4d57','4d88','4EB3','4F2F','4FBC','50F0','52C3','535A','5B5B','5D8F','5E1B','613D','61EA','632C','640F','67CF','6B02','6CCA','6D61','6E24','717F','72B1','72BB','733C','767E','7B94','7C19','7CEA','80C9','818A','824A','82E9','88AF','896E','8B08','8E04','8E23','90E3','92CD','939B','946E','94B9','94C2','993A','998E','999E','99C1','99EE','9A73','9AB2','9AC6','9C8C','9D53','9E14','9E41'],'bǒ':['7677','377f','7BA5','7C38','86BE','8DDB','99CA'],'bò':['6300','7588','8584','8617','5B79','64D8','6A97','72DB','7C38','7E74','8B52'],'bū':['6661','9914','5CEC','5DED','5EAF','900B','923D','94B8','9D4F'],'bú':['91AD'],'bǔ':['5821','6355','8514','8865','365b','3a10','402f','42e0','4a81','4a94','535C','535F','54FA','735B','88DC','9CEA'],'bù':['3635','4287','4470','4480','4775','5498','6016','6091','6357','8379','8500','9208','9922','36b4','3ccd','3ec9','3f9f','434c','43fd','4b0f','4d3a','4E0D','4F48','52CF','57D4','57D7','57E0','5E03','67E8','6B65','6B68','6B69','74FF','7BF0','7C3F','90E8','90F6','923D','949A']},'c':{'cā':['4328','5693','40f0','64E6'],'cāi':['4797','4815','5072','47c0','731C'],'cān':['3717','4254','7218','8593','9910','47c3','4c57','53C2','53C3','53C5','6E4C','84E1','8B32','98E1','9A42','9A96'],'cāng':['5009','5096','8231','8259','4ED3','4EFA','4F27','51D4','5D62','6CA7','6EC4','6FF8','7F49','82CD','84BC','87A5','9DAC','9E27'],'cāo':['9135','43ad','55BF','64A1','64CD','7CD9'],'cái':['6750','34b2','4d2d','621D','624D','6EA8','7E94','88C1','8CA1','8D22'],'cán':['3947','4609','4641','4773','6159','8695','8745','8836','3a3b','3c5a','43fc','45dd','45de','48df','4cfb','5B20','5B31','60ED','615A','6B8B','6B98','883A'],'cáng':['5328','8535','9476','3d74','3d93','6B0C','85CF'],'cáo':['3716','5608','3be5','411a','43c6','442c','5D86','66F9','66FA','69FD','6F15','825A','84F8','87AC','893F','93EA'],'cǎ':['7924'],'cǎi':['3952','4406','5038','433d','48cb','5A47','5BC0','5F69','63A1','68CC','6BDD','776C','7DB5','8DF4','8E29','91C7'],'cǎn':['5646','6158','6701','39a7','3fca','415f','60E8','61AF','9EEA','9EF2'],'cǎo':['4491','8278','8279','8349','613A','61C6','9A32'],'cà':['4d7d','56C3'],'cài':['8521','4c02','57F0','7E29','83DC'],'càn':['6158','7218','8592','36d1','38d3','3eee','3f69','46f9','510F','5B71','6FAF','707F','71E6','74A8','7CB2'],'càng':['416e','48a2','8CF6'],'cào':['4483','8959','808F'],'cēn':['8593','53C2','53C3','53C5','5D7E','68AB'],'cēng':['564C'],'cén':['4901','37a5','417e','4a19','4c8b','57C1','5C91','68A3','6A6C','6D94','7B12'],'céng':['4255','7880','3b1d','406c','5C42','5C64','5D92','66FD','66FE','7AF2','912B'],'cè':['4282','4534','5074','5395','5884','6547','8326','8417','397d','3a32','3a4d','41f2','421f','4FA7','518A','518C','53A0','5AE7','5EC1','607B','60FB','61A1','62FA','6D4B','6E2C','6EAD','755F','77E0','7B27','7B56','7B5E','7BA3','7CA3','835D','84DB','906A'],'cèng':['38d2','8E6D'],'cī':['5472','5DEE','5E9B','75B5','8D7C','8D80','9AB4'],'cí':['3602','3639','3796','3935','4218','5179','5790','6148','7506','7960','8308','8328','9908','34e8','40a3','46d0','49f3','4a0f','4b63','4cbf','4cc4','5B28','67CC','6FE8','73C1','74F7','78C1','7CA2','7CCD','858B','8A5E','8BCD','8F9D','8F9E','8FA4','8FAD','96CC','98FA','9DC0','9E5A'],'cǐ':['7689','4F4C','6B64','6CDA','73BC','8DD0'],'cì':['3880','6828','3a5e','44e7','45f9','4bf8','4c0d','4cd0','4F3A','4F7D','523A','523E','673F','6B21','7D58','83BF','86D3','8D50'],'cōng':['3721','3956','4221','5306','7127','7481','8061','8066','8070','8310','8471','8525','9350','37b1','440b','442b','44d7','45d3','486f','48a8','56EA','56F1','5F9E','60A4','66B0','679E','68C7','6A05','6A2C','6F17','719C','71EA','747D','779B','7BF5','7E71','806A','82C1','84EF','87CC','93E6','9A18','9A44','9AA2'],'cóng':['4258','6152','7047','35f0','3f3b','457a','4cf7','4E1B','4ECE','53E2','5A43','5B6E','5F93','5F96','5F9E','60B0','6A37','6DD9','6F0E','6F40','6F48','721C','742E','8AB4','8CE8','8CE9','931D'],'còng':['6B09','85C2','8B25'],'còu':['6971','8160','51D1','6E4A','8F33','8F8F'],'cuān':['9479','9569','64BA','651B','6C46','8E7F','8EA5','92D1'],'cuán':['5297','6505','6512','6522','381d','5DD1','6AD5'],'cuàn':['7228','3e11','6BA9','71B6','7A9C','7AC4','7BE1','7BF9','7C12'],'cuī':['3720','4651','5894','6467','7355','411f','50AC','55FA','5D14','69B1','69EF','78EA','7F1E','93D9','96B9'],'cuí':['51D7','615B','76A0','7FC6'],'cuǐ':['7480','3d4f','42ab','49fd','6F3C','8DA1'],'cuì':['5005','5550','7120','7417','7601','8103','8106','8403','9847','376e','3bd4','3bdc','3c56','3cc3','3dea','40c0','418a','4F1C','555B','5FF0','60B4','6BF3','6DEC','6FE2','712B','75A9','7AC1','7C8B','7CB9','7D23','7DB7','7FE0','813A','81AC','81B5','81CE'],'cuō':['6413','7749','9073','64AE','78CB','84AB','8E49','9ACA'],'cuó':['4458','4821','7625','8516','8658','9142','3b6b','3f68','3ff7','48dc','4c08','4d3e','5D6F','5D73','75E4','77EC','919D','9E7A','9E7E'],'cuǒ':['7473','7870','40b3','7E12','811E'],'cuò':['5249','5252','9509','9519','37c7','4c5c','4FB3','539D','632B','63AA','6B75','839D','83A1','84CC','902A','92BC','932F','9F70'],'cū':['7C97','89D5','9E81','9E84','9EA4'],'cūn':['6751','47ad','6F8A','76B4','7AF4','90A8'],'cú':['4890','48ef','5F82','6B82','8C60'],'cún':['5B58','88B8'],'cǔn':['520C','5FD6'],'cù':['4944','4958','5648','6880','8128','9162','35e4','40da','466f','46e4','47df','481e','4FC3','6BA7','731D','762F','7C07','7E2C','851F','8D97','8DA8','8E27','8E59','8E74','918B','932F','93C3','9F00'],'cùn':['434e','540B','5BF8','7C7F','928C']},'ch':{'chang':['573A'],'chā':['5693','6260','6268','6748','7580','8256','9364','9388','9538','9937','9987','36fc','3b91','505B','53C9','55B3','55CF','5AC5','5DEE','633F','63D2','63F7','809E','929F'],'chāi':['4424','5068','8286','9497','3f2e','5DEE','62C6','91F5'],'chān':['3910','6400','6519','8998','36b2','389f','3c2b','3e97','4a9c','5B13','60C9','63BA','647B','68B4','6B03','88A9','895C','89C7','8FBF','92D3'],'chāng':['5000','7316','7429','9329','9520','415b','45c9','4b96','4F25','5A3C','660C','667F','6DD0','83D6','88EE','95B6','960A','9BE7','9CB3','9F1A'],'chāo':['4708','5435','6284','9214','4af8','4aff','4c2b','527F','52E6','5DD0','5F28','600A','6B29','7EF0','7F7A','8A2C','8D85','949E'],'chá':['3889','3892','4553','4929','6942','7339','8336','9364','3aaf','3ac5','405f','414a','53C9','579E','5BDF','5D56','643D','67E5','67FB','69CE','6AAB','78B4','79C5','81FF','832C','8A67'],'chái':['5115','7961','346a','3fb9','44f1','4FAA','558D','67F4','72B2','8C7A'],'chán':['3886','4081','4872','5296','5355','5358','7158','7351','7985','8749','9141','9414','9471','9561','9575','367b','3da3','3ea5','471b','48d1','492b','49ef','4aee','50DD','55AE','56B5','58E5','5A75','5B0B','5B68','5B71','5DC9','5EDB','68CE','6BDA','6E79','6F79','6F7A','6FB6','700D','703A','78DB','79AA','7DFE','7E75','7E8F','7E92','7F20','826C','87EC','87FE','8A97','8B92','8C17','8E94','913D','92CB','995E','998B'],'cháng':['3982','4806','5617','5690','5834','5872','8178','8193','8407','9577','9578','364a','45c5','4bf4','4EE7','507F','511F','514F','573A','5AE6','5C1D','5E38','5F9C','747A','74FA','751E','7CBB','80A0','82CC','87D0','92FF','93DB','957F','9C68','9CBF'],'cháo':['5632','6641','5DE2','5DE3','671D','6A14','6F6E','8B3F','8F48','911B','9F02','9F0C'],'chǎ':['8869','9454','9572','53C9','8E45'],'chǎi':['473a','831D'],'chǎn':['3983','4918','4940','5181','5257','5277','5574','7522','7523','8487','8546','9610','3bc6','3e4c','3e7d','442e','444e','4a76','4d50','4E33','4EA7','522C','563D','56C5','5D7C','5E5D','644C','65F5','6D50','6EFB','705B','71C0','7C05','7E5F','8AC2','8B42','8B87','8C04','93DF','94F2','95B3','95E1'],'chǎng':['5382','5388','5834','5872','6636','3ae4','50D8','53B0','573A','5EE0','60DD','655E','6C05','92F9'],'chǎo':['4390','5435','7092','7727','3da4','3dc5','43da','717C','9EA8'],'chà':['4868','5239','6748','8869','38fe','391e','44b2','44ed','47d5','4daa','4EDB','4F98','524E','53C9','597C','59F9','5C94','5DEE','6C4A','7D01','8A0D','8A6B','8BE7'],'chài':['7625','8806','8883','3cd7','460d','56C6','867F'],'chàn':['3674','4021','4828','5133','3b04','3e25','42b2','4c7f','4d3c','5FCF','61F4','61FA','785F','7FBC','97C2','986B','98A4'],'chàng':['5021','5531','6005','7545','4a68','60B5','66A2','713B','739A','757C','8AAF','97D4','9B2F'],'chào':['8016','4EE6','4EEF','89D8'],'chē':['5513','7817','7868','8397','4F21','4FE5','86FC','8ECA','8F66'],'chēn':['3972','4463','4833','5814','6437','403c','441c','55D4','62BB','68FD','741B','778B','8AC3','8B13','8CDD','90F4'],'chēng':['4793','5041','6186','6490','6491','7424','9423','9637','9757','9819','9833','9953','34cc','36f5','455d','45c0','47d3','47eb','564C','57E5','5D1D','645A','67FD','68E6','6A55','6A89','6CDF','6D7E','725A','725C','77A0','79F0','7A31','7A6A','7AC0','7DFD','7F49','86CF','87F6','8D6A','8D6C','93FF','943A','94DB'],'chén':['3574','4885','4888','5875','6116','6550','6668','7141','8380','8390','9202','9648','9673','9703','3af3','3d34','3f78','41a3','449e','471f','47e2','48bb','48c5','491f','4F14','5BB8','5C18','5C52','5FF1','66DF','6A04','6C89','70E5','81E3','831E','852F','85BC','87B4','8A26','8AF6','8C0C','8ED9','8FB0','8FE7','9DD0','9E8E'],'chéng':['4107','4191','4698','5448','5818','5856','6195','6210','6330','6381','6909','7013','8100','9172','37bc','3c82','3f29','404e','41b5','41f8','49d5','4ac6','4baa','4E1E','4E57','4E58','57CE','57D5','584D','5A0D','5BAC','5CF8','60E9','61F2','627F','63E8','67A8','68D6','6A59','6D06','6F82','6F84','73F5','73F9','757B','76DB','7A0B','7A9A','7B6C','7D7E','812D','837F','88CE','8AA0','8BDA','90D5','92EE','94D6','9A2C','9BCE'],'chě':['5056','5972','3a0b','3d54','42f2','47a3','4c29','626F','64A6'],'chěn':['6375','7876','9356','4ac8','4ad6','588B','789C','78E3','88D6','8D02','8DBB','8E38','9F53'],'chěng':['5863','7748','4FB1','5EB1','5F8E','609C','88CE','901E','9A01','9A8B'],'chè':['3934','3949','4064','4486','4720','7221','7869','8045','34a4','352d','3b1a','3ce7','3f9d','3fed','46a2','46f8','49ea','52F6','577C','5C6E','5F7B','5FB9','63A3','64A4','6F88','70F2','77AE','8F4D','8FE0'],'chèn':['5926','6987','39f1','478b','512D','56AB','6AEC','75A2','79F0','7A31','7A6A','85FD','886C','896F','8B96','8C36','8D81','8D82','9F54','9F80'],'chèng':['5041','343c','725A','79E4','7A31','7A6A'],'chī':['4709','5403','5644','7661','7735','3c1e','3df0','3e88','41ea','49dd','54E7','55AB','55E4','599B','5AB8','5F68','5F72','645B','74FB','75F4','779D','7B1E','7D7A','86A9','87AD','8A35','8ABA','8CBE','9B51','9D1F','9D44','9E31','9EB6','9ED0','9F5D','9F79'],'chí':['4659','4704','5319','5880','6301','6818','8694','9045','9072','365c','37b4','38ae','3b9b','47be','4aa7','4b88','4d94','4db5','4FFF','577B','5CBB','5F1B','5FA5','5FB2','5FEF','6B6D','6C60','6C66','7AFE','7B42','7B88','7B8E','7BEA','801B','830C','834E','86B3','8B18','8CBE','8D7F','8D8D','8E1F','8FDF','905F','99B3','9A70'],'chǐ':['3881','4735','5082','5791','6040','6065','6261','8687','9279','361c','388b','3c40','3db4','42bc','445b','473b','4F2C','4F88','53FA','544E','59FC','5C3A','62F8','6B3C','6B6F','79A0','7C8E','803B','88B3','88ED','892B','8A83','8C49','9D92','9F52','9F7F'],'chì':['3486','3511','3961','4038','4820','4932','6157','6220','6470','6555','6758','9253','9290','34fc','37bf','387f','3f5a','47f7','4bbb','4c21','4cf5','4F99','50BA','52C5','53F1','557B','5F73','605C','618F','61D8','62B6','65A5','683B','6DD4','707B','70BD','70FE','71BE','75D3','75F8','761B','7CE6','7FC4','7FC5','7FE4','8D64','8DA9','8DEE','98ED','994E','996C','9DD8'],'chōng':['4194','4751','4874','5145','5603','8202','391d','3cd8','408c','41b9','462a','51B2','5FB8','5FE1','61A7','644F','6C96','6D7A','6E67','73EB','794C','7FC0','825F','833A','885D','8E56'],'chōu':['4337','7633','3a28','3bb2','403a','5A64','62BD','640A','72A8','72AB','7BD8','970C'],'chóng':['8769','8908','9680','34fd','3e50','432c','459d','4cef','5D07','5D08','6F34','75CB','79CD','7A2E','7FC0','866B','87F2','91CD'],'chóu':['4327','5114','6101','6826','6906','7574','7587','7697','9167','341c','393d','399e','3d5e','3fe7','44d3','4c96','4EC7','4FE6','568B','5B26','5E31','5E6C','60C6','61E4','71FD','7A20','7B79','7C4C','7D2C','7D52','7DA2','7EF8','83D7','85B5','88EF','8A76','8B8E','8B90','8E0C','8E8A','916C','91BB','96D4','96E0','9B98','9BC8'],'chǒng':['5BA0','5BF5'],'chǒu':['7785','4aae','4E11','4E12','4FB4','541C','677B','677D','77C1','83A5','919C','9B57'],'chòng':['9283','39e4','3b94','51B2','63F0','885D','94F3'],'chòu':['9714','450f','61B1','6BA0','81ED','81F0'],'chu':['698B','6A7B'],'chuā':['350d','42ac','4d75'],'chuāi':['63E3','640B'],'chuān':['9409','5DDB','5DDD','6C1A','744F','7A7F','7A93'],'chuāng':['5205','5275','6183','6227','6450','7621','411d','41ab','521B','56EA','75AE','7A97','7ABB'],'chuái':['8197','3a93'],'chuán':['4063','7240','8221','8229','8239','9044','3bcc','3f37','4F20','50B3','66B7','693D','6B42','7BC5','8AEF','8F32'],'chuáng':['3856','4692','7592','40e5','4b5a','5E62','5E8A'],'chuǎi':['3a9c','63E3'],'chuǎn':['5598','8348','3c5b','50E2','583E','821B'],'chuǎng':['6436','6464','3f3d','6F3A','95D6','95EF'],'chuà':['4ac4'],'chuài':['49a4','49b7','4d1d','562C','63E3','81AA','8E39'],'chuàn':['7394','4E32','524F','6C4C','8CD7','91E7','948F'],'chuàng':['5231','5259','5275','6006','6134','43ab','521B','734A','95D6'],'chuī':['5439','708A','9FA1'],'chuí':['5015','5782','6376','6425','7500','8144','9318','9524','9672','9840','377d','434b','570C','57C0','5A37','68F0','69CC','6E77','7BA0','83D9','939A'],'chuǐ':['3dc3','47bc'],'chuì':['8AC8'],'chuo':['7EF0'],'chuō':['6233','3aac','8E14'],'chuó':['72B3'],'chuò':['5437','7577','9034','9461','369f','3c8b','42d8','44ce','555C','56BD','5A16','5A65','5A7C','60D9','64C9','6B60','6DB0','73FF','78ED','7DBD','7E5B','7EF0','814F','8AC1','8DA0','8F1F','8F8D','8FB5','8FB6','916B','918A','9F6A','9F71','9F8A'],'chū':['4759','35d9','48ba','51FA','521D','5C80','6A17','8C99','9F63'],'chūn':['4845','6625','6699','6776','7443','8405','47ba','4ca0','5A8B','65FE','693F','6AC4','711E','7BBA','81A5','877D','8F34','9C06','9D9E'],'chú':['3551','3861','4173','4802','4827','7293','8021','9504','9664','354f','36c0','42b0','439d','47de','520D','53A8','58B8','5E6E','5EDA','66EF','6A71','6AC9','6AE5','6EC1','7BE8','82BB','84A2','84AD','854F','870D','87F5','8D8E','8DE6','8E70','8E87','8E95','924F','92E4','96CF','96DB','9DB5'],'chún':['3744','3747','5507','8123','8493','9187','9195','9659','3d6e','3e2a','44d0','451a','48e8','48e9','494e','4ac3','618C','6D71','6DF3','6E7B','6EE3','6F18','7D14','7EAF','83BC','84F4','931E','9BD9','9D89','9E51'],'chǔ':['4658','5132','5904','6775','6918','7840','8655','458f','50A8','51E6','695A','696E','6A9A','6FCB','74B4','790E','891A','9F6D','9F7C'],'chǔn':['4790','5046','7776','8436','8822','35ba','3fe4','43db','440f','49ae','4b9e','60F7','8E33'],'chù':['3518','3647','3915','4734','5097','5904','6035','6410','7421','8372','8655','9110','3fa5','41cd','438c','440d','47e3','498c','4E8D','4FF6','510A','51E6','61B7','62C0','654A','65B6','6B2A','6B5C','6CCF','6EC0','755C','77D7','7ACC','7AD0','7D40','7ECC','81C5','89E6','89F8','8A58','8C56','8E00','905A','95A6','9EDC']},'d':{'da':['5896','7629','37f7','57AF','58B6','75B8','8DF6'],'dā':['5491','5660','6498','8037','8921','366e','3ff4','430b','441b','4a9a','54D2','55D2','642D','7B54'],'dāi':['5446','5454','7343','61DB'],'dān':['3424','3806','4121','4437','5330','5355','5358','5989','7514','7605','7649','7708','7803','8043','8078','9132','9156','9815','3d37','449f','4E39','510B','52EF','55AE','56AA','5A85','62C5','64D4','6B9A','6BAB','7BAA','7C1E','803C','803D','891D','894C','8EAD','90F8'],'dāng':['5105','5679','7576','8261','8960','9441','3f15','3f46','5D63','5F53','6FA2','73F0','74AB','7B5C','7C39','87F7','88C6','943A','94DB'],'dāo':['5200','5202','6737','8220','53E8','5C76','5E4D','5FC9','6C18','91D6','9B5B','9C7D'],'dá':['3713','5312','6253','7557','7563','7629','8345','8359','8598','9039','9054','9618','9791','3a49','3f91','3fef','40ee','4d63','547E','59B2','601B','6C93','709F','71F5','7B2A','7B54','7E68','87FD','8A5A','8FBE','8FDA','943D','95D2','977C','97C3'],'dáo':['53E8','636F'],'dǎ':['6253'],'dǎi':['469e','469f','50A3','6B79','6B7A','902E'],'dǎn':['5210','7649','8874','356a','40eb','425e','4E3C','4EB6','63B8','64A2','64A3','64D4','6FB8','73AC','74ED','75B8','7D1E','80C6','81BD','8CE7','8D55','9EF5'],'dǎng':['6321','6529','7059','48ca','48e3','515A','64CB','6A94','6B13','8B61','8B9C','8C20','9EE8'],'dǎo':['3800','5012','6363','6417','7977','7982','3a36','3fd2','58D4','5BFC','5C0E','5C9B','5CF6','5D8B','5D8C','5DB9','64E3','69DD','79B1','8E48','969D','96AF'],'dà':['5927','7714'],'dài':['3432','4206','5788','5927','6020','6234','7447','7519','8976','9168','9734','9746','37ad','3bc2','3da1','3ed6','44ab','4ca6','4EE3','53C7','57ED','5CB1','5E12','5E26','5E2F','5E36','5ED7','5F85','5FD5','66C3','67CB','6B86','6C4F','703B','73B3','7C24','7D3F','7DFF','7ED0','825C','888B','8CB8','8D37','8DE2','8E5B','8EDA','8EE9','8F6A','8FE8','902E','9A80','9B98','9EDB','9EF1'],'dàn':['5556','5557','5649','7057','7605','7649','8145','8215','8711','35d6','387a','3cb7','4a22','4a35','4a65','4b5b','4cc9','4EB6','4F46','50E4','557F','563E','5E0E','5E68','5F39','5F3E','5F48','60EE','619A','61BA','62C5','64D4','65E6','66BA','67E6','6BAB','6C2E','6C8A','6CF9','6DE1','6F6C','6FB9','72DA','758D','765A','77F3','7A9E','840F','84DE','86CB','89DB','8A95','8BDE','972E','994F','99BE','99F3','9AE7','9D20'],'dàng':['4457','4992','5735','6113','6863','7497','7576','7800','7911','8361','8569','51FC','57B1','58CB','5B95','5F53','64CB','6C39','74FD','76EA','778A','78AD','7C1C','83EA','862F','8DA4','903F','95E3','96FC'],'dào':['4183','4326','5012','5230','5675','6921','7118','8254','9053','42ad','49c2','5C0E','5E31','5E6C','60BC','6AA4','71FE','74D9','76D7','76DC','7A32','7A3B','7E9B','7FFF','83FF','885C','885F','8EC7'],'de':['5730','7684','8126','5F97'],'dē':['561A'],'dēi':['561A'],'dēng':['3501','4532','5654','7492','8260','9419','3caa','465e','4cfe','5B01','706F','71C8','767B','7AF3','7C26','857D','89B4','8C4B','8E6C'],'dé':['3775','3941','4677','4678','6074','8126','9340','392b','3bd6','5F97','5FB3','5FB7','60B3','60EA','68CF','6DC2','951D'],'děi':['5F97'],'děng':['6225','6729','44ad','7B49'],'dèn':['3a50'],'dèng':['9086','9093','9127','9419','482c','4bb4','50DC','51F3','58B1','5D9D','6AC8','6F82','6F84','77AA','78F4','8E6C','956B','96A5','972F'],'dian':['70B9'],'diān':['6382','6527','6541','7628','7672','508E','53A7','5D6E','5DC5','5DD3','5DD4','69C7','69D9','6EC7','766B','8E4E','985A','985B','98A0','9F7B'],'diāo':['5201','7431','7797','7889','368b','38af','3e66','408f','461f','4cc2','51CB','53FC','595D','5F34','5F6B','625A','6BA6','6C48','7C13','866D','86C1','8C82','96D5','9B89','9BDB','9CB7','9CED','9D70','9F26'],'diǎ':['55F2'],'diǎn':['4344','5178','6923','7420','7898','8547','3e03','44e6','56B8','594C','5A70','70B9','8E2E','932A','9EDE'],'diǎo':['4246','412a','5C4C'],'diàn':['5960','6242','7414','7535','7538','8714','34e0','376a','379f','3d98','3f2d','4F43','576B','57AB','588A','58C2','5A5D','5E97','60E6','655F','6A42','6BBF','6DC0','6FB1','73B7','75C1','765C','78F9','7C1F','923F','94BF','963D','96FB','975B'],'diào':['4519','6389','7639','9443','9493','349b','3a95','40bd','4F04','540A','5F14','7A8E','7AB5','7AE8','7F40','84E7','8A0B','8ABF','8C03','91E3','929A','92B1','92FD','94DE','94EB','9B61'],'diē':['3985','7239','4a93','893A','8DCC'],'dié':['3459','3948','4787','6315','6633','7245','7252','7573','7582','7589','7723','7730','8051','8253','8728','8776','39b6','3a78','3a79','3afc','3b2a','3cb2','3cb3','3df8','43f2','481f','4ad5','4cc0','4d11','53E0','54A5','558B','57A4','581E','5CCC','5D80','5E49','604E','60F5','621C','63F2','66E1','696A','6C0E','74DE','758A','789F','7D70','7ED6','800A','800B','80C5','81F7','82F5','890B','8A44','8ADC','8C0D','8D83','8DD5','8E40','8FED','957B','9C08','9CBD'],'diū':['4E1F','4E22','4E63','92A9','94E5'],'dī':['4355','5547','5600','5824','5891','5943','7721','9349','34f3','3add','40c5','440e','49d1','4EFE','4F4E','57DE','5F7D','63D0','6C10','6EF4','78FE','7F9D','889B','8D86','93D1','955D','97AE'],'dīng':['7594','8035','8670','9489','38d4','49ba','4E01','4E87','4EC3','53EE','5E04','738E','753A','753C','76EF','914A','91D8','976A'],'dí':['5519','5600','5681','6575','6891','7684','8510','9814','38d9','3c05','3e4d','42ae','4a00','4a24','4bfc','4d1e','4d60','4EE2','5AE1','5EF8','654C','6DA4','6ECC','6F6A','72C4','7B1B','7BF4','7C74','7CF4','7FDF','82D6','837B','850B','85CB','85E1','89BF','89CC','8C74','8E62','8FEA','93D1','955D','976E','9E10'],'dǐ':['4891','5467','5758','7274','7825','3a86','3b7d','40a1','43c4','48cc','577B','5E95','5F24','62B5','62DE','638B','67E2','6C10','805C','830B','83E7','89DD','8A46','8BCB','8EE7','90B8','963A','9AB6','9BF3'],'dǐng':['5975','9424','9802','9876','3ac0','3d3f','5D7F','6A99','6FCE','85A1','914A','9F0E','9F11'],'dì':['5059','5572','5730','5754','5886','6178','6455','6755','6974','7208','7393','7684','7747','7976','7998','8091','8163','8482','8515','8673','9012','9013','38a9','3f35','403f','43d1','446d','446f','45d6','4a58','4a5a','4d8d','50C0','54CB','57CA','5A23','5D7D','5DB3','5E1D','5F1F','601F','65F3','67A4','688A','68E3','6A00','6E27','710D','73F6','750B','78B2','7B2C','7D88','7DE0','7F14','83C2','87AE','8AE6','8C1B','8E36','8ED1','905E','91F1','926A','99B0'],'dìng':['5576','6917','7887','8062','8423','9320','9489','9841','9964','374e','5A17','5B9A','5FCA','639F','77F4','78A0','78F8','815A','874A','8A02','8BA2','91D8','92CC','94E4','952D','98E3'],'dōng':['4376','5032','6638','6771','8740','36b5','4c24','4E1C','51AC','549A','57EC','5A3B','5CBD','5D20','5D2C','5F9A','6C21','6C2D','6DB7','70B5','7B17','82F3','83C4','9B97','9BDF','9D87','9DAB','9E2B','9F15'],'dōu':['5160','8538','3a2e','515C','543A','6A77','7BFC','90D6','90FD'],'dóu':['8254'],'dǒng':['8463','35a6','3a02','40a2','4d54','58A5','5B1E','61C2','7BBD'],'dǒu':['5517','6296','6568','6597','6793','9627','9661','37b3','3ab7','4E67','551E','67A1','86AA','95D8','9B25','9B26','9B2A','9B2D'],'dòng':['3448','4792','6219','7850','8156','9718','34ca','38a5','3f2f','4F97','50CD','51BB','51CD','52A8','52D5','5CD2','606B','630F','680B','68DF','6D1E','80E8','80F4','99E7'],'dòu':['3884','4108','4546','6597','8130','8373','9017','9597','9916','36d2','41fa','46e0','4b26','65A3','68AA','6BED','6D62','75D8','7AA6','7AC7','8AAD','8B80','8C46','92C0','95D8','997E','9B25','9B26','9B2A','9B2C','9B2D'],'duān':['5073','8011','37e8','526C','5A8F','7AEF','890D'],'duǎn':['9374','77ED'],'duàn':['5845','6934','7145','7456','8176','3ac1','3c6d','482a','65AD','65B7','6BB5','6BC8','78AB','7C16','7C6A','7DDE','7F0E','846E','8E96','935B','953B'],'duī':['4099','4703','5796','5806','5860','9827','4b54','5D5F','75FD','78D3'],'duǐ':['3a03','8B09'],'duì':['3642','5151','7029','7893','9413','37cb','381a','3b23','3cd4','41cf','4a34','4a3a','4b08','4bdf','514A','514C','5BF9','5BFE','5C0D','603C','619D','619E','61DF','6FE7','6FFB','7D90','85B1','8B48','8F5B','941C','961F','966E','968A'],'duo':['6387'],'duō':['5484','5689','6387','7553','8324','364d','525F','54C6','591A','591B','5D1C','88F0'],'duó':['6553','6560','8957','9438','38de','443e','51D9','526B','593A','596A','5EA6','655A','656A','692F','6BF2','75E5','814F','838C','8E31','922C','94CE','9BB5'],'duǒ':['3650','3969','4664','4824','6305','6306','6735','6736','35bc','36ca','3ed4','44b3','492a','4ac2','4bec','4EB8','54DA','56B2','579B','579C','57F5','75D1','7D9E','7F0D','8D93','8EB1','8EB2','8EC3','9B0C'],'duò':['4468','4643','5234','5241','5815','6857','8235','9973','36c6','3ee7','415c','493b','4a54','4c8a','579B','579C','58AE','58AF','5C2E','5D9E','60F0','619C','67EE','6CB2','70A7','70A8','8C80','8DE5','8DFA','964A','964F','98FF','99B1','99C4','9A6E','9D7D'],'dū':['3798','7763','9607','49a0','4a72','53BE','561F','90FD','918F','95CD'],'dūn':['5428','5678','6489','6566','7364','7905','8733','9413','9566','40e6','453b','4a83','58A9','58AA','60C7','64B4','729C','8E72','8E7E','9A50'],'dú':['4671','5125','5335','7006','7258','7368','8773','9813','3c69','3e3f','3f84','44ef','48b1','4a85','4af3','4bb7','51DF','5B3B','691F','6ADD','6BB0','6BD2','6D9C','6E0E','724D','728A','72A2','72EC','74C4','76BE','8AAD','8B80','8B9F','8BFB','8C44','8D15','945F','97C7','97E5','9A33','9AD1','9EE9','9EF7'],'dǔ':['5835','7779','9316','403e','421e','5E3E','668F','743D','7B03','7BE4','809A','88FB','89A9','8CED','8D4C'],'dǔn':['76F9','8DB8','8E89'],'dù':['5992','6581','8370','8799','8827','8839','9540','34c3','47fb','4ca7','55A5','59AC','5EA6','675C','6BAC','6E21','79FA','7C35','809A','828F','934D','976F'],'dùn':['5678','5749','7096','7818','9007','9041','9813','491c','4F05','56E4','5D38','5E89','627D','696F','6C8C','6F61','71C9','76FE','78B7','815E','8E32','906F','920D','949D','987F','9DA8']},'e':{'e':['5443'],'ē':['9312','42ea','59B8','59BF','5A3F','5A40','5C59','5CC9','75FE','963F'],'ēn':['5940','6069','84BD'],'ēng':['97A5'],'é':['4109','7692','9507','3f02','454f','45b8','4a79','4c6e','4cd7','4cd8','4FC4','542A','54E6','56EE','5A25','5CE8','5CE9','6D90','73F4','774B','78C0','83AA','86FE','8A1B','8A90','8B4C','8BB9','8FD7','920B','92E8','981F','984D','989D','9A00','9B64','9D5D','9D5E','9E45'],'éi':['8BF6'],'ér':['3587','5150','5152','5532','9651','39eb','42e9','439f','43a0','4b98','4F95','513F','682D','6ABD','6D0F','800C','800F','804F','80F9','834B','88BB','8F00','8F5C','96AD','9AF5','9B9E','9C95','9D2F','9E38'],'ě':['6076','60AA','60E1','9D48'],'ěi':['8BF6'],'ěn':['4170'],'ěr':['8033','9087','9975','36b7','38bd','42d9','433a','5C12','5C13','5C14','5CCF','682E','6D31','723E','73E5','85BE','8DB0','8FE9','927A','94D2','990C','99EC'],'è':['3529','4193','4465','4748','5054','5384','5443','5669','5714','5828','6076','6115','6239','6424','6439','6799','7427','7810','7828','7846','8601','8685','8741','9102','9354','9469','9537','9628','9638','9913','9929','34f5','35be','35c1','37e7','380b','38c2','398d','39d6','3a75','3b99','3dc8','446a','46d6','47a9','48de','4af7','4cec','50EB','537E','545D','54A2','54B9','57A9','580A','582E','5C75','5C8B','5D3F','5DAD','60AA','60E1','627C','64DC','6AEE','6E42','816D','82CA','843C','855A','89A8','8A7B','8AE4','8B8D','8C14','8C5F','8C96','8EDB','8EF6','8F6D','904C','904F','922A','95BC','981E','984E','989A','997F','9C10','9C77','9CC4','9D83','9D9A','9E57','9F76'],'èi':['8BF6'],'èn':['6441','4b36','4b53','4b61'],'èr':['3483','5235','7732','8848','36c5','43b6','43ea','48f5','4E8C','54A1','5F0D','5F10','6A32','6BE6','804F','8A80','8CAE','8CB3','8D30'],'ế':['6B38','8A92'],'ễ':['6B38','8A92'],'ể':['6B38','8A92'],'ề':['6B38','8A92']},'f':{'fā':['7782','9166','9197','53D1','5F42','6A43','767A','767C','91B1','98B0'],'fān':['8543','4a9b','50E0','5B0F','5E06','5E61','65D9','65DB','756A','7C53','7E59','7FFB','85E9','8F53','98DC','9C55'],'fāng':['4131','7265','8684','9201','531A','574A','580F','65B9','678B','6C78','6DD3','82B3','90A1','94AB','9D0B'],'fá':['3579','5788','6830','8337','9600','363a','41c5','48f9','4E4F','4F10','50A0','57A1','59C2','683F','6D4C','726B','75BA','7B29','7B4F','7F5A','7F70','7F78','85C5','95A5'],'fán':['3836','4252','4313','4570','5325','7169','8224','8227','8543','8629','9407','9422','9492','3e0b','3e95','401f','42a9','42e3','42e6','4aa4','4af6','4b75','4bb3','51E1','51E2','51E3','52EB','58A6','5FDB','61A3','674B','67C9','68E5','6A0A','6A4E','702A','703F','70E6','71D4','74A0','77FE','792C','7B32','7C75','7DD0','7E41','7FB3','81B0','85A0','881C','894E','8E6F','91E9','98BF','9DED'],'fáng':['3903','9632','574A','57C5','580F','59A8','623F','80AA','9B74','9C82'],'fǎ':['9345','40b2','4F71','6CD5','704B','73D0','781D'],'fǎn':['3f79','46c0','484a','53CD','8FD4','9B6C'],'fǎng':['3442','5023','6609','6618','7706','356b','39cd','3bd0','488d','4cb1','4EFF','65CA','74EC','7D21','7EBA','822B','8A2A','8BBF','9AE3','9DAD'],'fà':['36f2','53D1','743A','855F','9AEA','9AEE'],'fàn':['3568','3906','4000','7548','8303','9124','36ef','3d00','3d97','3f1d','424a','442a','44a6','48f2','597F','5B0E','5B14','68B5','6C3E','6C4E','6CDB','6EFC','72AF','76D5','7B35','7BC4','8A09','8CA9','8D29','8ED3','8EEC','98EF','98F0','996D'],'fàng':['653E','8DBD'],'fēi':['5561','5983','6249','6683','3af5','4a41','5A53','5A54','6E04','7DCB','7EEF','83F2','871A','88F6','970F','975E','975F','98DB','98DD','98DE','99A1','9A11','9A1B','9BE1','9CB1'],'fēn':['5206','5429','6610','6706','9216','9934','9959','390b','3b1f','515D','5C8E','5E09','68A4','68FB','6C1B','73A2','74F0','780F','7AD3','7AD5','7D1B','7EB7','7FC2','82AC','886F','8A1C','8EAE','915A','96AB','96F0','9CFB'],'fēng':['3702','3826','4031','5051','6340','6953','7043','7326','7412','8391','8451','8634','8702','9137','9146','343d','34a5','36d4','44a0','4E30','4EF9','50FC','51E8','51EC','51EE','59A6','5BF7','5C01','5CEF','5CF0','5D36','67AB','687B','6A92','6CA3','6CA8','6E84','70FD','71A2','728E','75AF','760B','76FD','781C','78B8','7BC8','882D','8AF7','8C4A','8C50','92D2','93BD','93E0','950B','973B','974A','98A8','98CC','98CE','9EB7'],'féi':['4208','6683','8153','8409','8730','6DDD','80A5'],'fén':['5746','7083','8561','3dca','3e2e','4a7f','4d05','575F','58B3','59A2','5E69','5F05','678C','68FC','6C7E','6FC6','711A','71CC','71D3','7F92','84B6','86A0','86A1','8C6E','8C76','8F52','943C','999A','99A9','9EC2','9F16','9F22'],'féng':['3980','5838','5906','6453','8242','9022','3d6f','43ce','465c','4a7c','51AF','6D72','6E22','6E84','6F28','7D98','7E2B','7F1D','99AE'],'fěi':['3971','4541','6590','7306','9925','4a3d','532A','595C','60B1','670F','68D0','69A7','7BDA','7FE1','83F2','855C','871A','8AB9','8BFD'],'fěn':['3979','7C89','9EFA'],'fěng':['8982','47ea','552A','8AF7','8BBD'],'fèi':['3517','4454','4488','4560','4935','5255','5420','6632','7648','7829','9428','9544','9745','3a4c','3d52','3e43','418f','426c','46a8','46cd','480a','4a3e','4c01','4FF7','539E','5C5D','5E9F','5EC3','5EE2','66CA','676E','6AE0','6CB8','6FF7','72D2','75BF','75F1','80BA','80C7','82BE','87E6','8CBB','8D39','9F23'],'fèn':['5206','6124','7035','3c75','3fce','4EFD','507E','50E8','574B','594B','596E','5FFF','61A4','6A68','79CE','7CAA','7CDE','7FB5','81B9','9B75','9C5D','9CBC'],'fèng':['5949','7128','7148','8451','8615','385d','4FF8','51E4','6E57','752E','7E2B','7F1D','8AF7','8CF5','8D57','9CEF','9CF3','9D0C'],'fiào':['8985'],'fó':['5772','4ECF','4F5B','68BB','9AF4'],'fóu':['527B','54F9','7D11','82A3','88E6'],'fǒu':['5426','6B95','7F36','7F39','7F3B','96EC','9D00'],'fū':['4394','6024','6577','7806','8374','9207','354a','3a64','3b6a','3c97','40ff','412e','44cf','44f5','4c50','4d38','4F15','544B','592B','598B','59C7','5A10','5B75','5C03','65C9','67CE','6CED','739E','74B7','7A03','7B5F','7B99','7BBB','7CB0','7CD0','7D28','7D92','7F66','80A4','819A','886D','8C67','8DBA','8DD7','909E','911C','915C','9CFA','9EA9','9EAC','9EB1','9EB8'],'fú':['3695','3711','3805','4356','4467','4620','5310','5488','5489','5798','6255','6276','6632','6874','7408','7536','7549','7641','7829','7953','8240','8274','8299','8300','8659','8709','8760','9258','37ca','3a84','3ad9','42f9','433f','454e','479e','47ee','484d','4a17','4b6e','4cd5','4d7e','4E40','4ECF','4F0F','4F5B','4FD8','51EB','521C','5B5A','5CAA','5DFF','5E17','5E45','5E5E','5F17','5F7F','602B','61EF','62C2','670D','678E','67B9','67EB','68F4','6C1F','6CB7','6D11','6D6E','6DAA','6F93','70A5','70F0','73B8','798F','7B26','7B30','7D31','7D3C','7D65','7D8D','7E1B','7EC2','7ECB','7F58','7FC7','82BE','82FB','832F','83A9','83D4','844D','86A8','889A','88B1','8AE8','8E3E','8F3B','8F90','90DB','925C','97CD','97E8','98AB','9AF4','9B84','9BB2','9CE7','9CEC','9D14','9D69','9D95','9D9D','9EFB'],'fǔ':['4317','5638','6928','7124','8150','8151','8705','34e1','356e','42e8','45c4','4a49','4acd','4add','4E76','4FCC','4FEF','51B9','5E9C','5F23','629A','62CA','636C','64AB','65A7','668A','6ECF','752B','76D9','79FF','7C20','812F','86A5','8EF5','8F14','8F85','90D9','915C','91DC','91E1','982B','9B34','9BC6','9EFC'],'fù':['3686','3914','3931','4484','4487','4530','4600','4835','5069','5085','5490','5987','6931','6991','7236','7550','7954','8179','8567','8907','8914','8984','8986','9351','9362','9644','364f','3b3c','3cc7','3dc6','3f6c','3f88','40a4','477e','479c','47af','47b8','47d4','49a3','4a31','4b7b','4b9b','4ED8','51A8','526F','577F','590D','59C7','5A4F','5A66','5A8D','5BCC','5CCA','5FA9','670D','6D11','79A3','7A2A','7ACE','7DEE','7F1A','80D5','842F','86B9','86D7','875C','876E','889D','8A03','8A42','8BA3','8CA0','8CE6','8CFB','8D1F','8D4B','8D59','8D74','8F39','961C','961D','965A','99A5','99D9','9A78','9B92','9C12','9C8B','9CC6']},'g':{'gā':['5496','5620','5939','4F3D','560E','65EE'],'gāi':['4429','5793','6650','7561','7974','8344','9654','9691','3c7e','402d','4b35','4F85','59DF','5CD0','8A72','8BE5','8C65','8CC5','8CCC','8D45','90C2'],'gān':['5481','5769','6746','7395','7518','8677','9150','34e7','390c','3da5','3ffb','41de','42bb','4E79','4E81','51F2','5C32','5C34','5C35','5C36','5C37','5D45','5E72','5E79','5FD3','653C','67D1','6CD4','75B3','77F8','7AFF','7B78','7C93','809D','82F7','872C','8FC0','9CF1'],'gāng':['4697','5188','5808','6386','7285','7598','7899','39cf','3b4e','3f1a','51AE','521A','525B','583D','5CA1','5D17','625B','68E1','7B10','7DB1','7EB2','7F38','7F41','7F52','7F61','809B','91ED','92FC','93A0','94A2'],'gāo':['3912','4181','7690','44d8','69D4','69F9','6A70','6ADC','6EDC','768B','776A','777E','7BD9','7CD5','7F94','7F99','818F','81EF','97DF','993B','9AD8','9AD9','9F1B'],'gá':['5676','9337','9486','5C1C','91D3'],'gǎ':['560E','5C15','738D'],'gǎi':['6539','4ab1','5FCB','653A','7D60','80F2'],'gǎn':['4917','6562','6746','8866','40ed','4d5f','4EE0','611F','64C0','687F','6A44','6F89','76AF','76F0','79C6','7A08','8D11','8D76','8D95','9C64','9CE1'],'gǎng':['5842','37e0','37f5','3f58','4d1a','5C97','5D17','6E2F'],'gǎo':['3696','5930','6772','9550','368f','3d46','3fb8','641E','652A','66A0','69C1','6ABA','7A3E','7A3F','7B76','7E1E','7F1F','83D2','85C1','85F3','93AC'],'gà':['5C2C'],'gài':['3562','5303','5304','6224','6461','6982','9223','9499','39c9','3ba3','43d7','4E10','4E62','69E9','69EA','6E89','6F11','74C2','76D6','82A5','84CB','9B6A'],'gàn':['7068','8289','3f4f','4bce','4cba','501D','51CE','5D45','5E72','5E79','65F0','69A6','6A8A','6C75','6DBB','6DE6','7C33','7D3A','7EC0','8A4C','8D1B','8D63','9AAD'],'gàng':['6205','6206','6760','7135','7139','69D3','7B7B','92FC','94A2'],'gào':['7170','7970','9506','543F','544A','796E','799E','818F','8AA5','8BF0','90DC','92EF','9BCC'],'gē':['4505','5272','6208','6213','6228','6401','7599','8090','390e','4EE1','54AF','54E5','572A','5F41','64F1','683C','6B4C','6E2E','6ED2','7D07','7EA5','80F3','88BC','8B0C','93B6','9D1A','9D3F','9E3D','9EA7'],'gēn':['6839','522F','8DDF'],'gēng':['6404','6929','8015','3e74','3e79','43b4','489a','5E9A','63B6','63EF','66F4','6D6D','713F','754A','7D59','7D5A','7DEA','7E06','7FAE','7FB9','83EE','8CE1','8D53','9D8A','9E52'],'gé':['3837','4213','4419','4601','5444','5865','6105','6401','6546','7366','8188','8316','9398','9549','9601','9694','9769','35b5','35c6','39b4','3b58','3d67','3df4','45d8','46ff','4a23','4a82','4aba','4ae6','4F6E','530C','55DD','630C','643F','64F1','654B','683C','69C5','6ACA','81F5','845B','86D2','86E4','88D3','89E1','8AFD','8F35','8F55','95A3','97B7','97D0','97DA','9ABC','9B32','9BAF','9C2A','9F43'],'gén':['54CF'],'gě':['5408','8238','8462','54FF','64D6','76D6','7B34','845B','84CB','9A14','9B7A'],'gěi':['7D66','7ED9'],'gěn':['4ac0'],'gěng':['4304','6897','8384','9838','9888','3f98','42c1','54FD','57C2','5CFA','632D','7D86','7EE0','803F','90E0','981A','9ABE','9BC1','9CA0'],'gè':['5404','49c4','4E2A','500B','55F0','7B87','867C','927B','94EC','9DAE'],'gèn':['3ad4','3b93','4E98','4E99','826E','831B'],'gèng':['5829','6685','4c4d','4c4e','4c6d','4c74','4E99','66F4'],'gōng':['4354','4435','5311','5868','6129','6150','7598','34da','356c','40b5','48bc','4c38','4cb2','4ccd','4F9B','516C','529F','55D7','5BAB','5BAE','5DE5','5E4A','5F13','606D','653B','675B','78BD','7ACD','7ACF','7AD3','7AD4','7AD5','7AE1','7BE2','7CFC','7D05','80B1','86A3','89E5','89F5','8EAC','8EB3','91ED','9AF8','9F8F','9F94','9F9A'],'gōu':['4466','8920','9264','385a','3f5b','4b32','4F5D','52FE','67B8','6C9F','6E9D','7BDD','7DF1','7F11','82B6','920E','94A9','97B2'],'góu':['8008'],'gǒng':['3928','4857','6831','7926','9790','39ec','3ad2','3b5f','3eac','3f26','40ac','4c4b','5DE9','5EFE','62F1','62F2','6C5E','73D9','7A6C','86EC','92BE','92DB','978F'],'gǒu':['8007','8009','8329','3e83','5CA3','67B8','72D7','73BD','7B31','82DF','830D','86BC','8C7F'],'gòng':['3536','4508','5171','6150','6443','7195','34cb','3bef','41e8','4F9B','551D','7FBE','8CA2','8D21'],'gòu':['3745','3764','5193','5526','5778','5920','6406','6480','6784','9058','35d5','3a0c','40d3','476d','508B','52FE','57A2','591F','59E4','5ABE','5F40','69CB','7C3C','89AF','89CF','8A3D','8A6C','8BDF','8CFC','8D2D','96CA','97DD'],'guā':['5280','5471','7171','7611','8161','8440','8778','9822','39d3','3dbd','43e6','44b7','4ada','4bc4','4bcf','522E','61D6','681D','6B44','74DC','7B48','7DFA','80CD','81BC','8D8F','8E3B','92BD','98AA','98B3','9A27','9D30','9E39'],'guāi':['6451','3fa9','40b7','4E56','5B94','63B4'],'guān':['5173','8484','46aa','493d','500C','51A0','550D','5B98','68FA','761D','764F','7AA4','7DB8','7EB6','839E','898C','89B3','89C0','89C2','95A2','95D7','95DC','9C25','9C5E','9CCF'],'guāng':['5149','5799','6844','7097','4F8A','50D9','54A3','59EF','6B1F','6D38','706E','709A','70E1','73D6','80F1','832A','8F04','92A7','9EC6'],'guǎ':['4211','5250','34b7','518E','526E','53E7','5BE1'],'guǎi':['62D0','67B4','67FA','7B89'],'guǎn':['5715','8218','9327','9928','9986','43d3','45c6','463e','498e','4a6a','4a80','4c98','550D','742F','75EF','7B66','7BA1','839E','8F28','9CE4'],'guǎng':['7377','5E7F','5E83','5EE3','72B7'],'guà':['5366','5569','6302','8902','639B','7D53','7F63','7F6B','8A7F','8BD6','9AFA'],'guài':['6060','7650','39d4','40af','42bd','53CF','592C','5EE5','602A','65DD'],'guàn':['6163','7936','9066','9475','3ba1','3d26','439a','45f0','465b','466e','477a','4E31','51A0','60B9','60BA','60EF','63BC','645C','6A0C','6BCC','6CF4','6DAB','6F45','704C','721F','74D8','76E5','77D4','797C','7F46','7F50','89B3','89C0','89C2','8B34','8CAB','8D2F','93C6','96DA','9C79','9E1B','9E73'],'guàng':['6844','392e','3adb','6ACE','77CC','81E6','81E9','901B'],'guī':['4145','7470','7688','7845','3c2a','4c85','4E80','572D','59AB','5AAF','5AE2','5B00','5E30','5F52','646B','691D','69FB','69FC','6AF7','6B78','6E88','73EA','749D','74CC','7A90','80FF','81AD','88BF','898F','89C4','90BD','90CC','95A8','95FA','9B36','9B39','9BAD','9C91','9F9C','9F9F'],'guǐ':['3533','4925','5326','6051','6531','6677','7678','9652','39ea','3a33','3cb9','3e35','40fd','436f','47a8','48c0','4F79','532D','53AC','579D','59FD','5B84','5E8B','5EAA','6C3F','796A','7C0B','86EB','87E1','89E4','8A6D','8BE1','8ECC','8F68','9B3C'],'guì':['4210','4306','4434','4788','4829','6530','6842','6867','7085','7094','3a88','405b','477f','4ccf','523D','523F','528A','528C','5DA1','5DDC','660B','66A9','67DC','697F','6A9C','6AC3','6E8E','7B40','84D5','8CB4','8D35','8DEA','97BC','9C56','9C65','9CDC'],'guō':['5459','5613','8052','8748','9505','35fb','3ce1','3fc6','54BC','556F','57DA','581D','588E','5D1E','6DA1','6E26','6FC4','87C8','8FC7','904E','90ED','921B','934B'],'guó':['3575','4190','5700','6156','6451','8158','8195','8662','9998','3d81','40b8','4b0e','56EF','56F6','56FB','56FD','570B','5E3C','5E57','6F0D','7C02','805D'],'guǒ':['4668','6901','7313','9301','9439','9983','4d39','60C8','679C','69E8','6DC9','7CBF','7DB6','83D3','873E','88F9','8F20','991C'],'guò':['8142','3cc0','8FC7','904E'],'gū':['4249','5495','5903','9164','9232','9237','3f0b','443b','4F30','59D1','5AF4','5B64','67E7','6A6D','6CBD','6CD2','7B1F','7B8D','7B9B','7BD0','7F5B','82FD','83C7','83F0','84C7','86C4','89DA','8EF1','8EF2','8F42','8F71','8F9C','9AA8','9B95','9D23','9E2A'],'gūn':['88E9'],'gú':['473c','4ba9'],'gǔ':['3689','4007','4026','4030','4428','5502','5503','6132','6262','6996','7014','7271','8135','8831','9027','9237','9936','9989','34b4','3bcf','3fb6','401c','4d7b','4d9c','50A6','53E4','560F','5C33','675A','6BC2','6C69','6DC8','6FF2','726F','72DC','76B7','76BC','76EC','77BD','7A40','7CD3','7E0E','7F5F','7F96','80A1','81CC','85A3','86CA','86CC','8A41','8BC2','8C37','8CC8','8D3E','8F42','94B4','9AA8','9D60','9DBB','9E44','9E58','9F13','9F14'],'gǔn':['4707','8509','3a30','3bfb','40c2','43be','638D','6EDA','6EFE','78D9','7DC4','7EF2','84D8','886E','889E','8F25','8F8A','9B8C','9BC0','9CA7'],'gù':['6545','9522','9867','39fd','3f7d','435b','44e2','4F30','50F1','51C5','543F','56FA','580C','5D13','5D2E','688F','68DD','69BE','727F','75FC','797B','7A12','932E','96C7','980B','987E','9BDD','9CB4'],'gùn':['3665','7774','4d6a','68CD','74AD']},'h':{'han':['7233'],'hā':['54C8','927F','94EA'],'hāi':['3a1f','3c27','3c29','3c7c','3f82','548D','54B3','55E8'],'hān':['3937','4636','5505','9163','9807','9878','48fb','5AE8','61A8','70B6','751D','86B6','8C3D','99A0','9B7D','9F3E'],'hāng':['3c20','40ab','49ad','592F'],'hāo':['5090','5686','8585','4FBE','84BF'],'há':['8766','86E4','9C15'],'hái':['9084','373e','483d','4bd0','4c7a','56A1','5B69','8FD8','9AB8'],'hán':['4204','4934','4941','5705','6657','6892','7113','7400','9097','35a4','37cf','37d4','3b80','3db0','3f28','438f','45d9','4a21','4d83','4F44','51FD','51FE','542B','5A22','5BD2','5D21','69A6','6C57','6D5B','6DB5','7B68','90AF','92E1','97D3','97E9'],'háng':['4615','9883','391a','402a','4cb3','542D','57B3','65BB','676D','7B55','7D4E','7ED7','822A','82C0','86A2','884C','8CA5','8FD2','96FD','980F','9B67'],'háo':['3819','4765','5637','5651','6903','7346','7354','8814','3a5d','3b14','49eb','512B','52C2','53F7','55E5','568E','58D5','6BDC','6BEB','6FE0','72E2','734B','74F1','7C47','865F','869D','8AD5','8B79','8C6A','8C89'],'hǎ':['54C8'],'hǎi':['5870','6D77','70F8','80F2','917C','91A2'],'hǎn':['3615','4350','4351','5383','5682','360e','361a','3e01','3e96','44cd','558A','6D6B','7F55','850A','8C43','95DE'],'hǎo':['597D','604F','90DD'],'hà':['54C8'],'hài':['3925','9900','39e1','3e94','41cb','4EA5','55D0','56A1','5BB3','6C26','7D6F','995A','99ED','9A87'],'hàn':['3475','3488','6496','6658','6665','7305','7694','7745','8792','9588','9837','9844','9894','38a8','3a14','3a8b','3ca6','3d44','3e9d','43af','43f7','44ff','457f','45e3','46de','49f2','4af2','4ba7','50BC','54FB','57BE','5C7D','608D','61BE','625E','634D','64BC','650C','65F1','66B5','6C49','6C57','6D86','6DCA','6F22','6F8F','701A','710A','71AF','72BE','7FF0','839F','83E1','86FF','872D','8B40','8C7B','91EC','92B2','92CE','95EC','96D7','981C','99AF','99FB','9DBE'],'hàng':['47d8','48c8','5DF7','6C86'],'hào':['3671','3740','6626','6667','7025','7693','8017','8055','8583','9117','9550','9865','362a','36aa','37bb','3b36','44b5','46bd','475e','49da','4abd','4beb','53F7','54E0','597D','5CFC','608E','660A','66A4','66AD','66CD','6D69','6DCF','6EC8','6F94','704F','705D','769C','769E','76A1','76A5','79CF','865F','93AC','98A2','9C1D'],'hē':['5475','3c24','3fe3','43dc','4d8e','54EC','559D','55EC','5CC6','62B2','8A36','8BC3'],'hēi':['3c44','563F','6F76','9ED1','9ED2'],'hēng':['6099','4EA8','4EAF','54FC','6DA5','811D','8AFB'],'hé':['3561','4142','4563','4894','5408','6838','6941','7186','7909','8377','8402','8988','9602','9616','9932','9978','35ff','397a','3a83','3a89','3b71','3b9d','3bab','3e47','3fe5','40d2','44a9','47a6','4ad8','4ba4','4d85','4F55','4FF0','52BE','548A','548C','555D','59C0','5D51','5EC5','60D2','66F7','67C7','6BFC','6CB3','6DB8','6EC6','6F95','72E2','76C7','76C9','76CD','76D2','79BE','79F4','7BD5','7CAD','7D07','7EA5','7FEE','83CF','849A','84CB','86B5','879B','8A38','8A65','8C88','8C89','8DB7','90C3','91DB','924C','95A1','95A4','95D4','97A8','981C','988C','9B7A','9DA1','9E56','9F55','9F81','9FA2'],'hén':['3bca','62EB','75D5','978E'],'héng':['3530','6046','6052','6841','8605','8861','9445','3d87','4b16','4b1d','4bd2','4F77','59EE','63D8','697B','6A2A','6A6B','73E9','8A99','8AFB','9D34','9D46','9E3B'],'hěn':['44f3','5F88','72E0','8A6A'],'hè':['4682','5413','5687','7142','7187','7200','7332','8377','8894','8910','3b1e','3d51','3dce','4cfd','4F6B','548A','548C','559D','55C3','58D1','5BC9','668D','764B','76AC','788B','7FEF','881A','8CC0','8D3A','8D6B','96BA','974D','974E','974F','9DB4','9E16','9E64'],'hèn':['6068'],'hèng':['5548','6494','583C','6A2A','6A6B','6F8B','7D4E'],'hōng':['4395','7122','7861','9367','41aa','53FF','543D','544D','54C4','54C5','63C8','6E39','70D8','85A8','8A07','8C3E','8EE3','8F37','8F5F','8F70','95A7','986D','9B5F'],'hōu':['9F41'],'hóng':['3593','4196','4791','5985','7074','7392','7854','8452','8453','8679','9277','9783','35e2','38ac','40d4','427a','484c','484f','49c6','4a0e','4a51','4aa6','4af9','4afa','4ca8','4EDC','57AC','5A02','5B8F','5B96','5CF5','5F18','5F4B','6C6F','6CD3','6D2A','6D64','6E31','6F42','739C','74E8','7AD1','7AE4','7BCA','7CA0','7D05','7D18','7D2D','7D8B','7EA2','7EAE','7FC3','7FDD','803E','823C','82F0','836D','857B','8A0C','8C39','8C3C','921C','92D0','958E','95F3','971F','9D3B','9E3F','9EC9','9ECC'],'hóu':['3927','4089','4648','5589','7334','8454','9297','9931','35cb','3b0b','3ba2','3e85','45d4','4adb','4ce7','4FAF','5E3F','760A','777A','77E6','7BCC','7CC7','7FED','936D','9ABA','9BF8'],'hǒng':['4027','3b34','54C4','55CA','664E','95A7'],'hǒu':['3583','3e38','543C','72BC'],'hòng':['9359','3db9','54C4','6F92','8A0C','8BA7','95A7','9B28'],'hòu':['4780','5019','5795','5820','9005','9107','3ad7','47a7','4ab7','4FAF','539A','540E','5F8C','6D09','77E6','7F3F','8C5E','90C8','9B9C','9C5F','9C8E','9C98'],'huang':['8352','614C'],'huā':['5629','7809','7874','8550','9335','3cf8','54D7','57D6','5A72','691B','7CC0','82B1','82B2','8AAE','9DE8'],'huāi':['7AF5'],'huān':['9144','3e55','61FD','6B22','6B53','6B61','72BF','737E','8B99','8C9B','9A69','9D05','9D4D'],'huāng':['3835','3843','5843','8093','8352','8841','3b3b','402e','569D','5DDF','614C','671A'],'huá':['3572','4522','5212','5283','5629','8550','8796','37c6','380f','398a','3b49','4c7b','4d33','4da4','534E','54D7','5D0B','64B6','6A3A','6ED1','733E','748D','78C6','83EF','8B41','91EB','93F5','94E7','9A4A','9A85'],'huái':['3733','3822','6000','7024','8032','8922','8931','40f6','4F6A','5F8A','61D0','61F7','69D0','6AF0','6DEE','8E1D'],'huán':['3872','4760','4967','6356','6853','8092','8341','8408','8411','9084','9370','9436','3d79','3d8e','3fea','49a1','4b74','4d09','4d0b','4d1f','571C','57B8','5B1B','5BCF','5BF0','61C1','6D39','6FB4','72DF','72E5','73AF','74B0','74DB','7CEB','7E6F','7F33','7FA6','8C72','8C86','8FD8','90C7','953E','956E','95E4','961B','96C8','9B1F','9E6E'],'huáng':['4113','4163','4297','6497','7640','7687','8757','9051','9360','9404','37b7','3fae','417f','42a3','437f','445f','47b9','4a84','4bb2','4ce8','505F','51F0','55A4','582D','58B4','5A93','5D32','5FA8','60F6','6E5F','6F62','714C','71BF','735A','745D','749C','78FA','7A54','7BC1','7C27','824E','845F','87E5','8DAA','953D','968D','97F9','992D','9A1C','9C09','9C51','9CC7','9DEC','9EC3','9EC4'],'huǎn':['4220','7746','38ea','6FA3','7DE9','7F13','85E7','8F10'],'huǎng':['4420','6033','6643','6644','7180','393a','595B','5BBA','5E4C','604D','69A5','6D38','6EC9','769D','7E28','8A64','8B0A','8C0E','93A4'],'huà':['3566','3577','4028','5212','5283','5316','6466','6779','6866','7575','8219','8550','34f0','368c','41c8','42c0','46e1','534E','593B','5A73','5AFF','5B05','5D0B','69EC','6A3A','6F85','753B','756B','7E63','83EF','89DF','8A71','8AE3','8B6E','8BDD'],'huài':['8639','54B6','574F','58CA','58DE','863E','8AD9'],'huàn':['3555','4013','4809','5524','5942','5950','6362','6899','7115','7165','7613','3ab1','3b07','3b0a','3e56','3f2b','41a0','437a','449b','4bd8','559A','559B','56BE','57B8','5BA6','5D48','5E7B','60A3','610C','63DB','64D0','69F5','6D63','6DA3','6E19','6F36','70C9','744D','75EA','77A3','89E8','8C62','8F58','902D','9BC7','9C00','9CA9'],'huàng':['4319','6130','6643','6644','3a2a','3fe0','405c','76A9','8EE6'],'huī':['3780','4710','4745','5655','6062','6325','6656','6689','7008','7070','7073','7147','7773','7988','8886','8918','9693','39d1','3ace','3dc7','3e46','3faf','45b6','54B4','58AE','5A4E','5A88','5E51','5FBD','62FB','63EE','649D','6D03','70E3','743F','7FDA','7FEC','867A','8A7C','8BD9','8C57','8F1D','8F89','96B3','986A','9C34','9EBE','9F3F'],'huí':['7858','8334','8698','8716','9025','56D8','56DE','56EC','5EFB','5EFD','605B','6D04','75D0','85F1','86D4','86D5','8FF4','9BB0'],'huǐ':['6094','6703','3a53','3dc4','3dd0','40e3','43e8','46fc','6A93','6BC0','6BC1','6BC7','70E0','71EC','867A','8AA8','8B6D'],'huì':['3470','3479','3707','3963','4095','4307','4547','4927','5136','5349','5599','5612','5666','5667','5696','6075','6167','6193','6666','6703','6867','7369','8294','8527','8559','8588','8958','9613','9767','9892','9956','37a7','392c','3a24','3a39','3a68','3b29','3c71','3ec5','414f','46db','470b','49e5','4a48','4aed','4F1A','50E1','532F','54D5','571A','5B07','5BED','5C76','5C77','5EC6','5F57','5F59','5F5A','605A','60E0','61F3','66B3','69E5','6A5E','6A9C','6AD8','6BA8','6C47','6CCB','6D4D','6E83','6ED9','6F53','6F70','6FAE','6FCA','70E9','71F4','74A4','74AF','77BA','79AC','79FD','7A62','7BF2','7D75','7E50','7E62','7E6A','7ED8','7F0B','7FD9','7FFD','835F','87EA','8A6F','8A74','8AA8','8AF1','8B53','8B7F','8BB3','8BF2','8CC4','8D3F','93F8','942C','95E0','97E2','982E','992F'],'huo':['548A','548C'],'huō':['5290','5684','6509','8020','9343','499d','8C41','936F','93D3'],'huó':['4106','4111','9225','9584','48f6','4F78','548A','548C','6D3B','79F3','843F'],'huǒ':['5925','9225','4F19','6F37','706B','90A9','94AC'],'huò':['4068','4084','4100','4438','5268','5684','6216','6347','6947','7016','7372','7668','7713','7978','8267','8816','9743','34c9','35aa','35f2','361e','398e','399c','39af','3a2f','3a47','3bc9','3e0c','3ea2','425f','4a25','4b09','4c25','4c5b','548A','548C','549F','55C0','56AF','56BF','596F','5F5F','5F60','60D1','639D','64ED','65E4','66E4','6AB4','6C8E','6E71','6FE9','74C1','77C6','77D0','77F1','790A','798D','7A6B','802F','81D2','83B7','848A','84A6','85FF','8B0B','8B97','8C41','8CA8','8D27','944A','952A','956C','96D8','970D','97C4','9A1E','9C6F'],'hū':['3986','5322','5430','5552','5611','5780','6057','6232','6612','8656','398c','39ee','39fe','3ada','3cf7','3e80','44e4','4a1a','4a50','4b0d','4c27','4d23','4d2f','4E4A','4E4E','532B','547C','553F','5BE3','5CD8','5E60','5FFD','60DA','622F','66F6','6B3B','6B51','6B58','6CD8','6DF2','6DF4','6EF9','70C0','70FC','7CCA','81B4','82F8','864D','8B3C','8EE4','8F77','96D0','992C'],'hūn':['4863','7767','8364','8477','35a7','439c','5A5A','60DB','60FD','656F','660F','662C','68D4','6B99','6DBD','776F','95BD','960D'],'hú':['4238','4280','4381','4812','5596','6287','6430','6838','7100','7173','7322','7324','8774','9190','9378','9836','35c5','3ab6','3bdb','3f47','3fb0','406b','427f','469b','47b1','49fc','4a74','4b45','4b4c','4b4d','561D','56EB','58F6','58F7','58FA','5AA9','5F27','659B','695C','69F2','6E56','702B','72D0','745A','74F3','7BB6','7CCA','7D57','7E20','80E1','846B','851B','879C','885A','89F3','992C','9B0D','9B71','9C17','9D60','9D98','9DA6','9DBB','9E44','9E55','9E58'],'hún':['4290','9850','9984','346e','3a21','3baf','4b9d','4c1f','4d37','581A','5FF6','68DE','694E','6D51','6DF7','6E3E','73F2','743F','7E49','8F4B','991B','992B','9B42','9F32'],'hǔ':['7425','8400','45c2','4E55','552C','6C7B','6D52','6EF8','864E','865D','8A31','933F','9BF1'],'hǔn':['7754','9BF6'],'hù':['3546','4353','4576','6018','6019','6236','6237','6238','6248','6462','6608','6791','8530','9120','9800','3a2d','3de4','3e26','3e89','41d8','42ba','4a3c','4a9d','4E55','4E92','51B1','51B4','569B','5A5F','5AED','5AEE','5CB5','5E0D','5F16','623D','62A4','695B','69F4','6C8D','6CAA','6EEC','71A9','74E0','795C','7B0F','7C04','7C90','7CCA','7D94','81DB','865D','8B22','8B77','8C70','992C','9CE0','9CF8','9E0C','9E71'],'hùn':['3975','4159','4171','5031','5702','6141','46a0','46f0','49f0','4adf','4FD2','6DF7','6EB7','711D','8AE2','8BE8']},'j':{'ji':['7B95','8F91'],'jiā':['3699','4552','5609','5939','7333','8175','8304','8888','9553','3e62','409f','4d25','4E6B','4F3D','4F73','50A2','52A0','55E7','593E','5BB6','5E4F','62C1','67B7','6BE0','6CC7','6D43','6D79','728C','73C8','75C2','7B33','7CD8','7E00','801E','846D','8C6D','8C91','8DCF','8FE6','926B','93B5','9D10','9E9A'],'jiān':['3868','4311','4320','4510','5805','5978','6214','6937','7010','7038','7777','8270','8271','8551','8573','8643','9203','9593','9930','34fa','350b','39b0','3b74','44f8','460b','4da2','4dac','517C','51BF','56CF','575A','59E6','59E7','5B6F','5C16','5E75','5ECC','60E4','620B','63C3','641B','6A2B','6AFC','6B7C','6BB1','6BB2','6DFA','6E10','6E54','6F38','6FFA','714E','719E','71B8','724B','728D','730F','73AA','76D1','76E3','788A','791B','7B3A','7B8B','7BEF','7C5B','7DD8','7E11','7F04','7F23','80A9','83C5','83FA','844C','84B9','8B7C','8C5C','8C63','946F','95F4','976C','97AC','97AF','97C0','97C9','98E6','99A2','9A1D','9B0B','9B50','9C1C','9C39','9CA3','9CD2','9CFD','9D73','9DBC','9E63','9E89'],'jiāng':['7555','7585','7586','7913','8333','8441','8591','8780','3e54','45f5','472b','50F5','58C3','59DC','5C06','5C07','646A','6A7F','6BAD','6C5F','6D46','6F3F','74E8','757A','7E6E','7F30','7FDE','87BF','8C47','97C1','9C42','9CC9'],'jiāo':['4892','5604','6559','6912','7126','7901','8281','8549','8660','3cac','3d80','432d','434a','4d14','4db0','4EA4','50EC','59E3','5A07','5B0C','5CE7','5D95','618D','61BF','6D47','6F86','71CB','7A5A','80F6','81A0','81B2','827D','832D','832E','86DF','87C2','87ED','8A68','8DE4','90CA','940E','9A55','9A84','9BAB','9C4E','9C9B','9D35','9D41','9DCD','9DE6','9DEE','9E6A'],'jiá':['3545','5939','6274','7848','9782','9788','9830','9904','3ab4','3b96','3fd3','402b','455b','46df','4a61','550A','573F','57C9','593E','605D','621B','621E','689C','6D79','7B74','823A','835A','83A2','86F1','86FA','88B7','88CC','8DF2','90CF','90DF','927F','92CF','94D7','982C','988A','9D4A'],'jiáo':['56BC','6AF5','77EF'],'jiǎ':['5047','6341','6935','7532','7615','9240','9278','9903','445d','4EEE','53DA','560F','5A7D','5CAC','5FA6','649F','64B9','652A','659A','659D','698E','69DA','6A9E','6A9F','73BE','77EF','7D5E','7E73','80DB','8CC8','8D3E','8E0B','94BE'],'jiǎn':['3513','4150','5039','5109','6229','6338','6361','6695','6898','7450','7751','7877','7906','8327','8812','8947','9386','9417','9427','3a35','3ce8','3d95','412f','424d','468a','47f0','4b60','4bbf','4d61','4d64','4da0','4FED','51CF','526A','56DD','583F','5BCB','5F3F','5F45','622C','62E3','63C0','64BF','67A7','67EC','68C0','691C','6AA2','6E1B','6E55','703D','77BC','78B1','7B15','7B67','7B80','7C21','7D78','7E6D','7FE6','85C6','88E5','897A','8A43','8B07','8B2D','8B7E','8C2B','8DBC','8E47','950F','9C14','9E78','9E7B','9E7C'],'jiǎng':['4070','4243','4482','5956','5968','6868','8029','8199','8523','38a1','3bcd','42cc','596C','69F3','6EF0','734E','848B','8B1B','8BB2','985C'],'jiǎo':['4628','6322','6341','6405','6648','8173','9278','9903','3a70','3b42','3cc5','3f71','3f72','400a','46a9','495e','4F7C','4FA5','50E5','510C','527F','528B','52E6','5B42','5FBA','5FBC','649F','64B9','652A','656B','657D','669E','66D2','6E6C','6F05','705A','70C4','714D','72E1','74AC','768E','76A6','77EB','77EF','7B4A','7D5E','7E73','7E90','7EDE','7F34','811A','81EB','87DC','89D2','8B51','8CCB','8E0B','94F0','997A','9D64'],'jià':['5047','4EEE','4EF7','4FA1','50F9','5AC1','67B6','69A2','7A3C','99D5','9A7E'],'jiàn':['4914','5065','5251','5263','5271','5292','5294','6957','6997','7033','7900','8171','8230','8266','8350','8949','9274','9373','9375','9417','9427','9451','9452','9473','9593','38e4','3a34','3bfa','3c04','3d4e','41df','47c5','495c','49d6','4b3b','4b48','4be1','4EF6','4F9F','4FF4','50ED','528D','528E','58B9','5EFA','5FA4','64F6','65D4','682B','69DB','6A7A','6ABB','6BFD','6D0A','6DA7','6E10','6E85','6F38','6F97','6FFA','726E','73D4','76D1','76E3','77B7','78F5','7BAD','7CCB','7CEE','7E5D','7E7F','81F6','852A','85A6','87B9','898B','89B5','89B8','89C1','8ACC','8AD3','8AEB','8B56','8B7C','8C0F','8C2E','8CCE','8CE4','8D31','8D9D','8DF5','8E10','8E3A','91F0','91FC','92FB','93E9','946C','950F','952E','95F4','991E','996F','9C0E'],'jiàng':['4952','5320','6762','8679','9171','47aa','531E','5C06','5C07','5D79','5F36','5F37','5F3A','5F4A','647E','6AE4','6D1A','6F3F','729F','7CE1','7CE8','7D73','7EDB','88B6','8B3D','91A4','91AC','964D'],'jiào':['3810','4083','5602','5626','6559','6821','8990','9175','3b2d','3c3e','53EB','544C','564D','566D','56BC','5CE4','5DA0','5FBC','630D','654E','65A0','6ED8','6F16','6F50','71DE','73D3','76AD','7A8C','7A96','85E0','899A','89BA','89C9','8A06','8B65','8F03','8F4E','8F7F','8F83','91AE','91C2'],'jiē':['4578','4988','5551','5588','5826','6904','7596','7664','7686','8149','8282','8754','8857','9636','3af8','40c8','495b','55DF','5A98','5E6F','63A5','63B2','63ED','64D1','6E5D','716F','79F8','7A2D','7BC0','7D50','7ED3','83E8','968E','9D9B'],'jié':['3636','4037','4039','4165','4316','4559','5022','5048','5091','5226','5227','5369','6377','6429','6605','6770','6840','6854','6976','7004','8282','8710','8818','8871','9263','9411','9821','9889','34d7','351a','36c3','37af','39a2','3a17','3a29','3b9e','3bae','3e05','3f2a','409d','40b6','45fb','48e0','4c99','507C','516F','523C','52AB','52BC','536A','55BC','5A55','5AAB','5B51','5C8A','5D28','5D51','5D65','5DC0','622A','62EE','63B6','63E4','64F3','685D','696C','69A4','6AED','6D01','6D2F','6ED0','6F54','72B5','776B','78A3','7AED','7BC0','7D50','7D5C','7DC1','7DF3','7ED3','7FAF','813B','83AD','84F5','881E','883D','88BA','8A10','8A70','8AB1','8BA6','8BD8','8D8C','8E15','8FFC','937B','9A14','9B9A','9C92'],'jiě':['59D0','5A8E','89E3','89E7','98F7'],'jiè':['3458','3839','5424','5536','6088','6212','6950','7297','7974','8265','9385','374f','3f8f','3fcd','41d2','46fa','4bf0','4c3a','4c44','4cb8','4E2F','4ECB','4FA1','501F','583A','5C46','5C4A','5C95','5E8E','5FA3','73A0','743E','754C','754D','75A5','75CE','780E','7D12','7E72','82A5','85C9','86A7','892F','89E3','89E7','8AA1','8BEB','8EA4','9AB1','9B40'],'jin':['65A4','83BB'],'jiōng':['5182','5770','6243','8614','518B','57DB','860F','99C9','99EB'],'jiǒng':['4339','8927','9008','9848','34cf','38a0','392f','3bcb','3dd7','3de1','489b','4FB0','50D2','518F','56E7','5E5C','6CC2','6F83','70AF','70F1','715A','715B','71B2','769B','7A98','7D45','7D97','8FE5','988E'],'jiū':['4842','9604','3e28','41b6','4E29','52FC','557E','63C2','63EA','63EB','673B','6A1B','725E','7A76','7CFA','7CFE','7EA0','841B','89D3','8D73','8F47','9B0F','9B2E','9CE9','9E20'],'jiú':['3eb5'],'jiǔ':['3871','7078','7396','9152','9579','4E45','4E46','4E5D','597A','6C63','7D24','820F','97ED','97EE'],'jiù':['3807','4162','4192','4286','4298','5313','5336','6166','6344','6551','6855','8205','374c','3a46','3c83','3ea9','46ee','4b28','4cce','50E6','531B','53A9','548E','5AA8','5C31','5EC4','5ECF','5ED0','65E7','67E9','67FE','6B0D','759A','81FC','820A','9BE6','9DF2','9E6B','9E94','9F68'],'jī':['3998','4076','4091','4564','5527','5630','5947','6483','6785','7284','7391','7578','8401','8640','8940','8989','9288','9416','9447','9459','9951','9965','36bb','36f7','3af7','3bb7','41eb','441a','45d7','46f4','47c7','4E0C','4E69','51E0','51FB','520F','525E','52E3','53FD','54AD','559E','55D8','573E','57FA','58BC','59EB','59EC','5C10','5C50','5CDC','5D46','5D47','5E7E','64CA','671E','673A','6A0D','6A2D','6A5F','6AC5','6B1A','6BC4','6FC0','74A3','757F','766A','77F6','78EF','79A8','79EF','7A18','7A3D','7A4D','7AD2','7B04','7B53','7B95','7C0A','7DDD','7E3E','7F09','7F81','7F87','7F88','802D','807B','808C','82A8','86E3','898A','89ED','8AC5','8B4F','8B64','8BA5','8CEB','8CF7','8D4D','8DE1','8DFB','8E5F','8E8B','8EB8','96AE','96DE','97BF','97F2','98E2','9C3F','9CEE','9D8F','9DC4','9E04','9E21','9F4D','9F4E','9F4F','9F51'],'jīn':['3997','4225','4633','5153','7467','7981','8355','9485','39c6','3ef1','40e1','423d','431d','493a','4ECA','57D0','5D9C','5DFE','60CD','65A4','6D25','73D2','740E','743B','77DC','781B','7B4B','7D1F','83F3','887F','895F','89D4','91D1','91D2','9E76','9EC5'],'jīng':['5162','5755','5759','6676','7304','8059','8148','8346','8396','4aab','4d16','4EAC','4EB0','5A5B','5DE0','60CA','65CC','65CD','6A78','6CFE','6D87','775B','79D4','7A09','7CB3','7CBE','7D4C','7D93','7ECF','830E','834A','83C1','9A5A','9BE8','9CB8','9D5B','9D81','9D84','9E96','9EA0','9F31'],'jí':['3515','3902','4052','4415','4690','4798','5359','5373','5409','5832','5849','6025','6131','6222','6781','6956','6975','7620','8024','8540','8871','9212','9353','9735','35ca','35f1','360d','366b','380d','380e','386e','395b','39c0','3b72','3cba','3d15','3ef7','3f7a','3f8a','47cc','48e2','4a6f','4caf','4ced','4E9F','4EBC','4EBD','4F0B','4F76','506E','537D','53CA','53DD','59DE','5AC9','5C8C','5D74','5DAF','5EB4','5F76','5FE3','63E4','64CA','64EE','68D8','696B','69C9','6A76','6B9B','6C72','6E52','6F03','6F57','6FC8','72E4','75BE','790F','7B08','7BBF','7C4D','7D1A','7EA7','818C','838B','84BA','84FB','857A','85C9','874D','878F','894B','89D9','8E16','8E50','8F2F','8F5A','8F91','90C6','92A1','93F6','96C6','96E6','96E7','978A','9D36','9DBA','9E61'],'jǐ':['3786','4364','5980','6324','36a1','379b','37a6','39b8','3a08','3d09','48b3','4E2E','51E0','5DF1','5E7E','621F','638E','64A0','64E0','6CF2','6D4E','7A56','7D66','7EAA','7ED9','810A','866E','87E3','9B55','9B62','9C7E','9E82'],'jǐn':['4910','4946','5118','5807','5890','9326','9526','9949','9991','377b','3bf8','3e4f','430d','44ba','4b59','4EC5','4FAD','50C5','537A','53AA','5C3D','5DF9','5ED1','616C','69FF','6F0C','747E','76E1','7D27','7DCA','83EB','89B2','8B39','8C28','93F1'],'jǐng':['4718','5106','5244','9631','9838','9888','362b','4E3C','4E95','522D','5B91','61AC','61BC','666F','66BB','6C6C','70F4','71DB','71DD','749F','74A5','7A7D','80BC','87FC','8B66','981A'],'jì':['3467','3668','3783','3831','4008','4400','4778','4912','4987','5048','5180','5209','5242','5264','5291','5756','5848','5993','6280','6589','7031','7608','7660','8360','8415','8507','8900','9645','9701','34ab','386d','394d','3ba8','3c1f','3c85','3cf5','3e04','3e44','3ed1','3fb5','42df','44fd','45c1','46cb','471e','480f','488b','4a16','4bba','4c0f','4d93','4da9','4F0E','517E','54DC','568C','578D','588D','5B63','5BC2','5BC4','5EED','5F50','5F51','5FCC','60B8','60CE','61FB','658A','65E1','65E2','65E3','66A8','66C1','689E','6A95','6A9D','6AB5','6D0E','6D4E','6E08','6F08','6FDF','74BE','75F5','768D','77A1','77C2','785B','796D','799D','7A29','7A37','7A44','7A4A','7A67','7CFB','7D00','7D99','7E4B','7E6B','7E7C','7EAA','7EE7','7EE9','7F7D','81EE','82B0','846A','84DF','858A','85BA','860E','862E','863B','88DA','89AC','89CA','8A08','8A18','8A8B','8BA1','8BB0','8DFD','8E8B','8FF9','969B','973D','9A65','9AA5','9AFB','9B3E','9B5D','9B86','9BDA','9BFD','9C02','9C36','9C40','9C6D','9C9A','9CAB','9D4B','9F4C'],'jìn':['4006','4464','4772','5664','5997','6422','6649','7468','7972','7981','8369','9032','9773','3a37','3b10','3b1c','3bf2','3c48','3d06','3da6','3db3','41ae','42ee','45ef','4af4','4d96','4F12','4FAD','50C5','50F8','51DA','52B2','52C1','568D','58D7','5AE4','5B27','5BD6','5C3D','664B','6B4F','6BA3','6D55','6D78','6E8D','6FC5','6FDC','70EC','71FC','74A1','74B6','763D','76E1','7E09','7F19','80B5','84F3','85CE','89B2','89D0','8CEE','8D10','8D46','8FD1','8FDB','9F7D'],'jìng':['4514','5883','6871','9015','9753','9756','9759','38a3','38cf','3b0c','477c','4d5e','4FD3','501E','51C0','51C8','51CA','52A4','52B2','52C1','598C','5A59','5A67','5F2A','5F33','5F84','5F91','64CF','656C','66D4','68B7','6D44','6DE8','6FEA','701E','734D','75C9','75D9','7ADE','7ADF','7AE7','7AEB','7AF6','7AF8','7D4C','7D93','7ECF','80EB','811B','845D','8AA9','8FF3','93E1','955C','975A','975C'],'ju':['77E9'],'juān':['5276','5708','6350','6718','8127','8832','414c','48fa','52EC','570F','59E2','5A1F','6D93','88D0','93B8','942B','954C','9D51','9E43'],'juǎn':['5377','6372','9308','9529','3df7','57E2','5DFB','81C7','83E4'],'juàn':['4105','4338','4688','4853','5026','5101','5377','5708','5946','6081','7367','7737','7760','8143','9104','38a7','38be','3abb','3bde','45ad','4cea','52B5','52CC','570F','594D','5DFB','5E23','617B','684A','6DC3','72F7','74F9','774A','7D79','7EE2','7F65','7F82','96BD','97CF','98EC','9B33'],'juē':['5658','6485'],'jué':['3503','3522','4017','4077','4418','4660','4807','4848','4986','5014','5095','5214','5282','5800','6204','6289','6317','6354','6398','6877','7106','7133','7211','7234','7235','7357','7474','7804','8568','8697','8990','9481','9562','37f2','391c','3a71','3b48','3b7e','3c10','3c84','3d50','3dfe','3e15','3e5f','3ed5','41f6','43d0','43e3','45bc','463f','474c','47b7','48e4','49bc','4E85','50EA','51B3','53A5','56BC','5B52','5B53','5C69','5C6B','5D1B','5D2B','5DA5','5F21','5F4F','61B0','64A7','652B','658D','6A5B','6A5C','6B14','6B2E','6B8C','6C12','6C7A','71A6','721D','73A6','73A8','73CF','75A6','761A','77CD','77E1','7A71','7D55','7D76','7EDD','811A','81C4','82B5','855D','87E8','87E9','899A','89BA','89C9','89D2','89D6','89FC','8A23','8B4E','8BC0','8C32','8C3B','8D7D','8DB9','8E0B','8E76','8E77','8EA9','902B','920C','940D','941D','9C4A','9D03','9DE2','9FA3'],'juě':['47b5','8E76'],'juè':['5014','61A0'],'jū':['3790','3879','4155','5036','6285','6910','7717','8152','8445','9514','35a9','3aba','477b','48b8','4ab6','51E5','521F','5A35','5A6E','5C45','5D0C','62D8','62E0','636E','63AC','63DF','64DA','65AA','6BF1','6CC3','6DBA','72D9','741A','75BD','75C0','7F5D','824D','82F4','871B','88FE','8ACA','8D84','8DD4','8E19','8ECA','8F0B','8F66','92E6','92F8','96CE','97A0','97AB','99D2','9A79','9B88','9BFA','9D21','9D8B'],'jūn':['5747','7885','8399','8690','8880','9281','9835','36ac','4E80','519B','541B','56F7','59F0','62A3','687E','6C6E','76B2','76B8','76B9','7B60','7B9F','83CC','89A0','8ECD','921E','929E','94A7','9BB6','9CAA','9E87','9E8F','9E95','9F9C','9F9F'],'jú':['3632','5579','6336','6908','7117','7291','9113','9514','9671','394c','3a74','3b82','3e7c','3f64','42f0','43a4','43f1','456e','45c7','472f','485e','490e','4a95','4c2c','4c61','4cd4','4d17','4FB7','530A','5A45','5C40','5DC8','68AE','6A58','6BE9','6CE6','6DD7','6E68','72CA','7BA4','7CB7','83CA','861C','8D9C','8DFC','8E18','8E6B','8EB9','8F02','90F9','92E6','99F6','9A67','9D02','9D59','9D74','9DAA','9F33'],'jǔ':['4114','4153','5480','6319','6907','6940','6989','8209','8392','8893','8977','40ca','48b9','4E3E','5F06','64E7','67B8','67DC','6AC3','6AF8','6B05','6CAE','77E9','7ABC','7AD8','7B65','849F','877A','8DD9','8E3D','9F5F','9F83'],'jǔn':['8720'],'jù':['3718','4020','5028','5036','5177','5267','5287','6007','6133','6998','7123','7220','8661','9245','360c','37ab','382a','3a3f','3a40','3b2c','422e','46ef','48f0','4c5f','4d55','4d99','4F62','4FF1','52EE','53E5','57E7','57FE','58C9','59D6','5BE0','5C66','5C68','5CA0','5DE8','5DEA','601A','60E7','61FC','62D2','62E0','636E','64DA','661B','6A8B','6B6B','6CAE','6D30','6FBD','70AC','70E5','728B','77BF','79EC','7AAD','7AB6','7C34','7C94','7D47','801F','805A','82E3','86B7','8A4E','8BB5','8C97','8DDD','8E1E','8E86','907D','90AD','91B5','92F8','943B','949C','952F','98B6','98D3','99CF','9B94'],'jùn':['3559','3766','4403','4551','5101','5441','6343','6358','6508','6659','8470','8528','9656','9915','9982','347a','349e','35a5','3d2b','3ed2','3f59','41f9','472d','474d','4FCA','57C8','5BEF','5CFB','61CF','651F','6D5A','6FEC','710C','73FA','756F','7AE3','7B98','7B9F','83CC','90E1','96CB','99FF','9A8F','9D58']},'k':{'kā':['4614','5496','5580','9272'],'kāi':['4924','5952','9426','368a','4F85','5F00','63E9','950E','958B'],'kān':['6221','361b','520A','52D8','582A','5D41','681E','770B','9F95','9F9B'],'kāng':['3769','6177','3c42','3f39','41b2','45e7','5ADD','5D7B','5EB7','5FFC','69FA','6F2E','7A45','7C87','7CE0','8EBF','93EE','958C','95F6','9C47'],'kāo':['4bcc','5C3B','9ADB','9DF1'],'káng':['625B'],'kǎ':['5361','5494','4F67','54AF','57B0','5CE0','80E9','88C3'],'kǎi':['4057','4493','5240','5274','5605','6137','6168','6977','8488','9347','9534','51EF','51F1','57B2','584F','607A','669F','8F06','93A7','94E0','95D3','95FF','98BD'],'kǎn':['3673','4594','5058','9851','4F83','519A','51F5','574E','57F3','586A','5D01','60C2','69DB','6ABB','6B3F','6B41','6B5E','780D','7E7F','83B0','8F21','8F57','95DE'],'kǎng':['4849'],'kǎo':['6537','6832','8003','4bea','4E02','62F7','69C0','6D18','70E4','718C','71FA','7A01','85A7','9BB3'],'kài':['4877','6112','3aa1','52D3','58D2','5FFE','613E','6B2C','708C','708F','70D7'],'kàn':['4613','5888','400d','4cda','770B','77B0','77D9','78E1','7AF7','884E','95DE','961A','9B2B'],'kàng':['6297','7095','9227','389c','4EA2','4F09','531F','56E5','72BA','780A','909F','94AA','958C'],'kào':['4427','7292','9760','438b','92AC','94D0','9C93'],'kē':['4216','4300','4426','5475','5777','7241','7290','7822','8596','9198','9233','9826','9846','9897','3e2f','5CC7','5D59','67EF','68F5','6A16','73C2','75B4','778C','78D5','791A','79D1','7A1E','7AA0','7C3B','80E2','82DB','842A','874C','8EFB','8F72','94B6','988F','9AC1'],'kēng':['4869','4870','5748','5751','5994','6333','7841','39f6','3c22','40d8','52A5','542D','5A19','647C','727C','785C','787B','92B5','935E','93D7','94FF','962C'],'ké':['9826','54B3','58F3','69BC','6BBB','6BBC','988F'],'kě':['5777','5801','6564','37b9','3a99','3abc','3d63','53EF','5CA2','5DB1','6E07','6E34','70A3','790D','8EFB','959C','9C84'],'kěn':['5543','6073','9339','57A6','58BE','61C7','808E','80AF','80BB','8C64','9F57'],'kěng':['6333'],'kè':['3549','3753','3929','4650','5159','5161','5392','6119','6415','354e','419f','4d97','514B','523B','524B','52C0','52CA','53EF','55D1','578E','5A14','5BA2','5C05','606A','63E2','69BC','6C2A','6E98','78A6','7DD9','7F02','86B5','8AB2','8BFE','951E','9A0D','9A92'],'kèn':['8903','3e27','63AF','73E2','784D','88C9'],'kōng':['5025','9313','369a','3c81','415d','57EA','5D06','60BE','6DB3','787F','7A7A','7B9C','8EBB','9D7C'],'kōu':['4071','6473','7798','527E','5F44','62A0','770D','82A4','88A7','93C2'],'kǒng':['5025','6050','391f','5B54'],'kǒu':['52B6','53E3'],'kòng':['3e1c','63A7','7A7A','979A'],'kòu':['6010','6263','6542','7789','8532','34c2','3c2f','434d','4cf9','51A6','53E9','5BBC','5BC7','6EF1','7A9B','7B58','7C06','853B','91E6','9DC7'],'kuā':['4838','5938','6647','8342','36fb','44d9','4bde','54B5','59F1','823F','8A87'],'kuāi':['54BC','558E','7CE9'],'kuān':['9467','5BBD','5BDB','5BEC','81D7','9ACB','9AD6'],'kuāng':['5321','5329','6047','7844','344c','44b0','45b1','4bd1','52BB','54D0','6D2D','7B50','7B7A','8A86','8BD3','8EED','90BC'],'kuáng':['6282','3fa0','72C2','8A91','8BF3','9D5F'],'kuǎ':['3841','9299','4F89','57AE'],'kuǎi':['39df','44d2','64D3','84AF'],'kuǎn':['4540','4957','3bd8','4c8c','68A1','6B35','6B3E','6B40','7ABD','7ABE'],'kuǎng':['5123','4FC7','593C'],'kuà':['3404','499a','630E','80EF','8DE8','9ABB'],'kuài':['3655','5108','5672','5726','5757','6703','9136','351e','37f4','3c6e','421b','4b5d','4be4','4F1A','4FA9','51F7','54D9','584A','58A4','5FEB','6B33','6FAE','72EF','736A','7B77','810D','81BE','90D0','99C3','9B20','9C60','9C99'],'kuàng':['5164','5739','6846','7716','7736','7926','9271','42af','4d43','51B5','535D','58D9','5CB2','5F49','61ED','65F7','663F','66C2','66E0','6CC1','720C','77FF','783F','7D4B','7D56','7E8A','7EA9','8CBA','8D36','8E80','909D','913A','945B','9ECB'],'kuī':['5232','5645','8325','8667','9377','3a12','4bd3','4E8F','5CBF','5DCB','609D','76D4','7AA5','7ABA','85C8','862C','95DA','97B9'],'kuí':['3653','4906','5914','6223','6646','6951','8067','8475','8637','8770','9035','9108','9368','9697','9997','367a','456b','45af','47f8','49f6','4ceb','55B9','594E','63C6','668C','694F','6AC6','6E40','72AA','777D','8EA8','982F','9A24','9A99','9B41'],'kuǐ':['3491','4811','5080','7143','368d','4ae5','5CDE','8DEC','8E5E','980D'],'kuì':['4646','4661','5331','5633','6126','6127','6192','6922','7786','8069','8075','8489','8562','9400','9988','355f','455a','464c','4be3','4c0e','532E','559F','5ABF','5C2F','648C','69F6','6A3B','6E83','6F70','77B6','784A','7BD1','7C00','7C23','7C44','806D','852E','944E','993D','994B','9A29'],'kuǒ':['64C3'],'kuò':['6269','6304','6870','7140','9069','9614','9729','35e5','3fa7','47ef','49a2','4bfa','59E1','5ED3','5F4D','62E1','62EC','64F4','6F37','6FF6','7C57','86DE','95CA','979F','97B9','97D5'],'kū':['4097','4250','5233','5710','5800','35c4','3a7f','3a82','3c60','3d60','49ca','4bc7','54ED','625D','67AF','684D','6A6D','77FB','7A9F','80D0','8DCD','90C0','985D','9AB7'],'kūn':['3853','5764','5803','5812','6606','7311','7428','9315','3c4e','440a','45b5','4ab2','5A6B','5C21','5D10','5D11','60C3','665C','6F49','711C','71B4','747B','83CE','872B','88C8','890C','8C87','918C','951F','9A09','9AE0','9AE1','9AE8','9BE4','9CB2','9D7E','9E4D'],'kǔ':['41e2','695B','82E6'],'kǔn':['4805','6083','6346','7871','7975','9603','3a72','58F8','58FC','68B1','7A07','7A1B','7D91','88CD','95AB','95B8','9F6B'],'kù':['3838','7614','8932','9177','452f','4d48','4FC8','55BE','56B3','5E93','5EAB','79D9','7D5D','7ED4','88B4','88E4','8DB6'],'kùn':['3afb','56F0','6D83','774F']},'l':{'la':['5566','85CD','97A1'],'lan':['84DD'],'lang':['5525'],'lā':['3547','3874','5566','5783','56B9','62C9','67C6','7FCB','83C8','908B'],'lāng':['5577'],'lāo':['6488','635E','7CA9'],'lá':['62C9','63E6','65EF','782C','78D6'],'lái':['4158','5008','6765','9338','394e','42f1','482d','49d2','4F86','4FEB','553B','5A61','5D03','5D0D','5EB2','5F95','5FA0','68BE','68F6','6D9E','6DF6','741C','7B59','7B82','83B1','840A','90F2','94FC','9A0B','9BE0','9D86','9EB3'],'lán':['3463','3613','4340','5116','5170','6514','6593','6595','7046','7061','7937','8934','8955','8964','8974','9484','9567','9611','37a9','39a8','3cd5','41be','444c','49a8','4a8d','4c10','53B1','56D2','5A6A','5C9A','5D50','5E71','61E2','62E6','680F','6B04','6B17','6F9C','703E','71E3','71F7','74BC','7BEE','7C43','7C63','7CF7','847B','84DD','85CD','862B','862D','897D','8B4B','8B95','8C30','8E9D','946D','95CC','97CA'],'láng':['3757','3883','4859','6879','6994','7405','8246','8782','9512','9606','37cd','3c62','3fbf','41a1','4bd6','4c76','4FCD','52C6','5ACF','5ECA','6B34','72FC','746F','7A02','7B64','84C8','84E2','870B','8EB4','90CE','90D2','90DE','92C3','95AC'],'láo':['4741','5520','6725','7262','7646','9412','35e6','37a0','37c9','37f9','3a13','40d5','470e','4c8f','52B3','52B4','52DE','54F0','562E','5D02','5D97','61A5','6D76','6F87','75E8','78F1','7A82','7C29','87E7','91A6','91AA','94F9'],'lǎ':['5587','62C9','85DE'],'lǎi':['3693','8970','40be'],'lǎn':['6984','7060','7226','9182','9872','36e6','3a2b','3a5c','3c16','432b','58C8','5B3E','5B44','5B4F','61D2','61F6','63FD','64E5','652C','6B16','6D68','6F24','7E9C','7F06','7F71','89A7','89BD','89C8'],'lǎng':['5871','6716','6717','6724','7103','7860','34ea','365f','3bbe','5CCE','658F','6A03','70FA','8A8F','95AC'],'lǎo':['4569','4764','6045','6833','7853','8001','8002','8356','39ef','3e90','41ed','4cd3','4d4f','4F6C','54BE','59E5','6A51','72EB','73EF','86EF','8F51','92A0','94D1','9BB1'],'là':['8721','8772','9574','3ecb','3edd','40b0','40f3','43c0','44e5','45f6','4c68','4c6b','4d9b','524C','63E7','650B','694B','6E82','74CE','760C','814A','81C8','81D8','843D','874B','881F','8FA2','8FA3','945E','9B0E','9BFB','9D63'],'lài':['4124','4685','7028','7669','7750','9842','3e0a','44f6','4c9a','52D1','5A15','6AF4','6FD1','702C','765E','775E','7C41','7C5F','85FE','8CDA','8CF4','8D49','8D56','983C'],'làn':['7201','7224','372e','3c6b','40f9','58CF','6EE5','6FEB','70C2','71D7','721B','722B','74D3','7E9C','946D'],'làng':['8497','9606','3af0','435a','455e','57CC','5D00','6D6A','83A8','88B0','90CE','90D2','95AC'],'lào':['8022','50D7','52DE','562E','5AEA','61A6','6A6F','6D9D','6F87','70D9','7D61','7EDC','802E','843D','8EBC','8EC2','916A','9ADD'],'le':['9979','4E86','990E'],'lei':['561E'],'lēi':['52D2'],'lēng':['3604'],'léi':['3523','4363','9433','9458','9741','348d','3d62','3e4e','442f','4a13','58E8','5AD8','64C2','6A91','6AD1','6B19','74C3','757E','790C','7D2F','7E32','7E8D','7E9D','7F27','7F4D','7FB8','881D','8F60','956D','96F7','9C69','9F3A'],'léng':['4244','5030','5844','8506','8590','4b0b','5D1A','68F1','695E','7A1C'],'lěi':['4242','5121','5792','5841','7045','7623','7657','7927','7928','8012','8632','8646','9478','34a6','367c','3d7d','3d9f','3f0d','3fd4','46f6','48c2','4d0e','50AB','53BD','58D8','6A0F','6AD0','6D21','78CA','78E5','7D2F','7D6B','854C','857E','85DF','863D','8A84','8B84','8BD4','981B','9E13'],'lěng':['51B7'],'lè':['3539','3580','6250','7833','9831','39a1','4E50','4EC2','52D2','53FB','54F7','5FC7','697D','6A02','6C3B','6CD0','738F','7AFB','7C15','827B','961E','9C33','9CD3'],'lèi':['6502','8631','9179','9287','9311','344d','3c95','3d03','426a','44b9','48ae','48e6','4b91','513D','64C2','6CEA','6D99','6DDA','79B7','7C7B','7D2F','7E87','808B','982A','985E','98A3'],'lèng':['6123','4b9a','580E','8E1C'],'liang':['91CF'],'liāo':['64A9','8E7D'],'lián':['3715','3858','3898','3955','3981','4060','4182','4965','5286','5332','5333','5652','5941','5969','5971','6169','6190','7191','7489','8054','8068','8595','8933','9023','9570','377a','37c0','3d8c','3ea6','3f13','40db','43c8','467a','4a2c','4b51','4EB7','55F9','5AFE','5B1A','5E18','5EC9','601C','68BF','69E4','6AE3','6D9F','6E93','6F23','6FC2','6FD3','71EB','78CF','7A34','7C3E','7C62','7C68','7E3A','7FF4','806B','806E','806F','81C1','83B2','84EE','878A','880A','88E2','899D','8B30','8B67','8E65','8FDE','938C','942E','9B11','9C31','9CA2'],'liáng':['4776','6881','3e41','48fc','4b6a','51C9','589A','690B','6A11','6DBC','7C17','7CAE','7CB1','7CE7','7DA1','826F','83A8','8F2C','8F8C','91CF','99FA'],'liáo':['3669','5639','6180','6579','7360','7499','7597','7642','9410','3d73','44bf','470d','472e','4a05','50DA','5AFD','5BE5','5BEE','5C1E','5C6A','5D7A','5D9A','5D9B','5EEB','644E','64A9','6F3B','71AE','71CE','720E','7AB7','7C1D','7E5A','7F2D','804A','818B','81AB','85D4','8C42','8CFF','8E58','8FBD','907C','957D','985F','98C2','98C9','9ACE','9DDA','9DEF','9E69'],'liǎ':['5006','4FE9'],'liǎn':['6459','6582','7489','8138','8539','3a98','3bec','3c08','3c38','431e','50C6','655B','740F','7FB7','81C9','861E','88E3','895D','913B'],'liǎng':['4803','5006','5169','5521','5562','34b3','351d','44e3','4a6b','4E21','4E24','4FE9','639A','7DC9','813C','873D','88F2','9B49','9B4E'],'liǎo':['4126','4460','374b','3dab','4a4d','4E86','5C1E','61AD','66B8','66E2','6F66','71CE','84FC','87DF','911D','91D5','948C'],'liàn':['3703','6200','6582','7032','7149','7453','8430','373b','3a9d','3c68','3d91','3f11','581C','5AA1','604B','695D','6B5B','6B93','6BAE','6E45','6F4B','6FB0','6FB5','70BC','7DF4','7E9E','7EC3','859F','861D','861E','895D','932C','934A','93C8','94FE','9C0A'],'liàng':['4036','4041','7177','9344','3f97','4EAE','501E','51C9','54F4','55A8','60A2','667E','6E78','8AD2','8C05','8E09','8F0C','8F1B','8F86','91CF','975A'],'liào':['4386','6482','6599','7093','7212','9410','9563','387b','427c','48a7','5C25','5C26','5ED6','77AD','7AB2','87C9','91D5','948C'],'liē':['54A7'],'liě':['6318','47e9','54A7','6BDF'],'liè':['3920','4140','4732','4753','5120','5217','6312','6369','7375','7759','8057','8322','39dc','3b2f','3b5e','3b69','3bff','3cb1','3e39','3f32','3f5f','407d','426d','42d1','47f9','4a89','4d15','51BD','52A3','52BD','57D2','57D3','59F4','5DE4','64F8','6D0C','6D56','70C8','70EE','716D','72A3','730E','731F','811F','86DA','86F6','88C2','8D94','8E90','8FFE','98B2','9B1B','9B23','9BA4','9C72','9D37'],'liū':['6E9C','6F91'],'liú':['4267','4740','5218','5289','7409','7460','7544','7559','7571','7581','7624','7645','9402','9560','342c','3f5e','45dc','46a7','4b1f','4c18','4c56','4c5e','4d89','56A0','5AB9','5B3C','5D67','61F0','65C8','65D2','69B4','6A4A','6CA0','6D41','6D4F','700F','746C','74A2','786B','84A5','84C5','85F0','88D7','905B','938F','93A6','93D0','954F','98C0','98C5','98D7','993E','998F','99E0','99F5','9A2E','9A51','9A9D','9C21','9DB9','9DCE','9E60','9E8D'],'liǔ':['6801','39d5','67F3','685E','687A','6A6E','73CB','7DB9','7EFA','7F76','7F80','925A','92F6','950D','98F9'],'liù':['3640','4102','5774','7198','7542','9402','9646','9678','9724','3daf','3f4c','516D','586F','5EC7','6E9C','6F91','788C','78C2','7FCF','8E53','905B','93A6','954F','96E1','993E','998F','9B38','9DDA','9E68'],'lī':['54E9'],'līn':['62CE'],'lí':['3992','4360','4366','4506','4523','4527','4670','5215','5253','5299','5398','6521','7055','7281','7282','7483','8243','8821','8935','9305','9457','34bf','34ef','36e4','381f','3c00','3c1a','3d1d','3e48','411c','417b','426b','428d','42e5','45a5','45bd','45bf','48d3','48eb','4c58','4d3b','4d53','4d69','527A','55B1','569F','56C4','5AE0','5B4B','5B77','5EF2','60A1','68A8','68A9','68B8','68C3','6A06','6C02','6F13','6F26','729B','72F8','730D','74C8','775D','79BB','7A72','7BF1','7C6C','7C8D','7C9A','7CCE','7E2D','7F21','7F79','83DE','84E0','853E','85DC','863A','870A','87CD','87F8','8B27','8C8D','908C','91A8','91D0','92EB','93EB','96E2','9A39','9A6A','9A8A','9BCF','9BEC','9C7A','9CA1','9D79','9E1D','9E42','9E97','9EB6','9ECE','9ED0','9EE7'],'lín':['3502','5549','6797','7036','7433','7498','7510','7584','7884','9074','9130','9716','375d','3de0','46ac','48af','4ad0','4bbc','4E34','50EF','51A7','53B8','58E3','5D0A','5D99','60CF','65B4','667D','66BD','6DCB','6F7E','71D0','735C','75F3','77B5','77DD','78F7','7B96','7CA6','7CBC','7E57','7F67','7FF7','81E8','8E78','8F54','8F65','8F9A','90BB','93FB','96A3','9A4E','9C57','9CDE','9E90','9E9F'],'líng':['3007','3875','3944','4125','4241','4256','4279','4322','4345','4516','4558','4585','4665','4696','4832','5222','6395','6624','7075','7227','7756','7831','7890','8046','8232','8576','8626','8851','9143','9234','9302','9675','9717','9748','35ab','39ad','3aae','3b21','3bea','3c65','3c86','3e33','3ecf','3f89','420a','487c','487f','49d9','4a29','4bcd','4c31','4d07','4d12','4d2b','4EE4','4F36','51CC','546C','56F9','577D','580E','590C','59C8','5A48','5B41','670E','67C3','68C2','68F1','6AFA','6B1E','6CE0','6DE9','6FAA','702E','71EF','72D1','73B2','740C','74F4','768A','797E','79E2','7ADB','7B2D','7D37','7DBE','7EEB','7F9A','7FCE','82D3','83F1','84E4','86C9','88EC','8A45','8DC9','8EE8','8F18','91BD','94C3','959D','96F6','970A','971B','971D','99D6','9B7F','9BEA','9CAE','9D12','9E30','9E77','9EA2','9F61','9F62','9F84','9F97'],'lǐ':['5163','7406','8821','9026','9090','9502','3e1a','3f96','45cd','491a','49c9','4FDA','5A0C','5CDB','5CE2','674E','6B1A','6D6C','6FA7','793C','79AE','7CB4','87F8','88CF','88E1','91B4','91CC','92F0','9BC9','9C67','9CA4','9CE2'],'lǐn':['4572','342d','3a06','4E83','51DB','51DC','5EE9','5EEA','61CD','61D4','649B','6A81','6AA9','6F9F','765B','765D','7D9D','83FB'],'lǐng':['9818','9886','4EE4','5CAD','5CBA','5DBA','5F7E','888A','963E'],'lì':['3466','3578','3611','3823','3842','3921','3926','4144','4365','4501','4509','4608','4695','4843','4919','4976','5088','5137','5229','5386','5389','5456','5533','6144','6526','6584','6738','6803','6817','6835','7204','7301','7658','7667','7805','7930','8137','8318','8354','8385','8389','8727','8777','8807','8823','9148','9742','34a7','350f','35da','37f3','39f0','3b0f','3b9a','3be4','3c79','3ea1','3ece','3efa','3f16','3f41','3f5d','3f90','3fdb','3fe8','40ef','41d0','42aa','437d','44de','457b','47cf','47d0','4b05','4b06','4b8b','4ba5','4c1b','4c1c','4c9e','4d21','4d98','4E3D','4F8B','4FD0','4FEA','512E','51D3','529B','52B1','52F5','53A4','53AF','53B2','540F','550E','56A6','56C7','575C','585B','58E2','5A33','5A6F','5C74','5CA6','5CF2','5DC1','60A7','60B7','623B','623E','642E','652D','66A6','66C6','66DE','67A5','680E','681B','68D9','6AAA','6AD4','6ADF','6AEA','6B10','6B74','6B77','6CA5','6CB4','6D70','6D96','6EA7','6FFF','701D','720F','72A1','73D5','740D','746E','74C5','74D1','74E5','75A0','75AC','75E2','76AA','76ED','77CB','782C','783A','783E','78FF','792A','792B','79B2','79DD','7ACB','7B20','7B63','7BE5','7C92','7C9D','7CF2','7D9F','7E85','82C8','82D9','849E','85F6','861A','86B8','86CE','86E0','882B','89FB','8A48','8B88','8D72','8DDE','8E92','8F62','8F63','8F79','90E6','91D9','925D','96B6','96B7','96B8','96F3','96F4','974B','9B01','9B32','9C71','9C73','9CE8','9D17','9DC5','9DD1','9E97','9E9C'],'lìn':['3581','6061','426e','45f2','468f','4af0','541D','608B','6A49','6DCB','711B','81A6','853A','85FA','8CC3','8D41','8E8F','8E99','8EAA','95B5'],'lìng':['5464','4EE4','53E6','70A9'],'lo':['54AF'],'lou':['55BD','560D'],'lōng':['9686','9733'],'lōu':['4056','6402','645F'],'lóng':['3685','3863','3995','4962','5131','5499','6727','7027','7216','7643','7931','7932','8622','8971','9468','9686','9733','9747','376b','3c0d','40e7','418d','43ca','466a','4a8a','4bbe','56A8','5C78','5D90','5DC3','5DC4','663D','66E8','680A','69DE','6AF3','6CF7','6E70','6EDD','6F0B','73D1','74CF','772C','77D3','783B','7ABF','7ADC','7B3C','7BED','7C60','804B','807E','80E7','830F','882A','882C','8C45','8E98','93E7','9E17','9F8D','9F92','9F93','9F99'],'lóu':['5245','8027','9071','37fa','385e','396a','3c8e','3e8f','411b','474f','48da','4aeb','4bab','4c7e','507B','50C2','55BD','560D','5A04','5A41','5ED4','697C','6A13','6E87','6F0A','71A1','779C','802C','825B','848C','851E','877C','87BB','8B31','8EC1','97BB','9AC5','9ACF','9DDC'],'lǒng':['3659','4841','5784','5785','9647','3d33','58DF','58E0','62E2','650F','7B3C','7BED','7C60','96B4'],'lǒu':['4179','6402','3ab9','587F','5D5D','5D81','645F','750A','7BD3','7C0D'],'lòng':['3885','6335','6887','7866','8856','345d','36de','37d6','3ce5','54E2','5F04','5FBF','630A','8D1A'],'lòu':['3537','7618','9542','9732','5C5A','6F0F','763A','763B','93E4','941A','964B'],'luán':['3748','3869','4582','6523','7053','7064','7674','7675','8114','3c4d','470c','571D','571E','5A08','5B4C','5B6A','5B7F','5CE6','5DD2','631B','66EB','683E','6B12','6EE6','7F89','81E0','864A','92AE','947E','9D49','9E1E','9E3E'],'luǎn':['5375'],'luàn':['4E71','4E82','858D','91E0'],'lué':['941A'],'luě':['7A24'],'luè':['7A24','92E2'],'luō':['5570','56C9','56D6','5BFD','634B','651E','7F85'],'luó':['3469','5138','5246','6924','7321','7380','8136','8161','8502','8999','9523','9559','9960','3f08','3f4b','42a8','4bc1','56C9','56D6','6B0F','7BA9','7C6E','7F57','7F85','841D','863F','87BA','89B6','89BC','903B','908F','93CD','947C','9A3E','9A58','9AA1','9E01'],'luǒ':['7630','7673','8803','34a9','39ac','3a61','3c01','502E','66EA','81DD','84CF','88F8','8EB6','93AF'],'luò':['3785','4029','4237','4253','4331','4334','7296','8366','34e2','3abe','3c7b','3d16','3fda','41d4','438a','54AF','55E0','5CC8','645E','6CFA','6D1B','6D1C','6F2F','6FFC','6FFD','70D9','73DE','784C','7B3F','7D61','7E99','7EDC','843D','96D2','97F7','99F1','9A86','9BA5','9D3C','9D45'],'lū':['5695','565C','64B8','64FC'],'lūn':['6384','62A1'],'lú':['3820','5362','5725','5786','7018','7089','7210','7379','7388','8606','8826','9229','9871','9885','38b3','3aad','3b54','3c7a','3fd6','484e','4b89','4c15','56A7','58DA','5E90','5EEC','650E','66E5','67A6','680C','6AE8','6CF8','74D0','76E7','77D1','7C5A','7E91','7F4F','80EA','81DA','822E','823B','826B','82A6','8F64','8F73','946A','9AD7','9B72','9C78','9C88','9E15','9E2C','9EF8'],'lún':['4201','4473','5707','6384','7896','8140','8726','9300','35ae','3dcd','4ED1','4F26','4F96','502B','55E7','56F5','5A68','5D18','5D19','60C0','62A1','68C6','6CA6','6DEA','78EE','7DB8','7EB6','83D5','8AD6','8BBA','8E1A','8F2A','8F6E','966F','9BE9'],'lǔ':['5364','5877','7002','7875','8263','8606','9465','9565','352a','389a','3bed','4c90','63B3','64C4','6A10','6A79','6AD3','6C07','6C0C','6EF7','6F9B','78E0','826A','82A6','84FE','864F','865C','93C0','942A','9B6F','9C81','9E75'],'lǔn':['8023','57E8','7A10'],'lù':['3719','3987','4312','4361','4391','4402','4635','4684','5279','5876','6902','7490','7769','7849','7984','8194','8557','8642','9181','9304','9332','9334','9646','9678','9732','34d0','35a8','36ec','37e4','3a90','3a96','3afd','3bdd','3bdf','3f3e','40d9','43bc','47ff','485c','4a6e','4c5a','4d2a','4F93','50C7','516D','52CE','52E0','578F','5A3D','5CCD','5ED8','5F54','5F55','622E','645D','6A1A','6DD5','6DE5','6E0C','6F09','6F5E','719D','742D','752A','76DD','76E0','788C','78DF','797F','7A11','7A4B','7B93','7C0F','7C2C','7C36','7C59','7CB6','7EFF','83C9','850D','87B0','89EE','8CC2','8D42','8DA2','8DEF','8E1B','8E57','8F05','8F46','8F82','8F98','902F','93D5','93F4','9A04','9A3C','9BE5','9D66','9D71','9DFA','9E6D','9E7F','9E93'],'lùn':['6EA3','8AD6','8BBA'],'lüè':['3500','4923','5719','7565','7567','347c','35c9','3a3c','40ae','430e','46da','63A0','64FD','650A','92DD','950A'],'lǘ':['4561','6988','617A','6AD6','6ADA','6C00','81A2','85D8','95AD','95FE','99BF','9A62','9A74'],'lǚ':['5122','5415','5442','6314','7112','7963','8182','8190','8938','36ce','3b5a','3ef2','3f94','4FA3','4FB6','507B','50C2','5A41','5BFD','5C61','5C62','5C65','634B','635B','65C5','68A0','6F0A','7A06','7A5E','7A6D','7D7D','7E37','7F15','891B','90D8','92C1','94DD'],'lǜ':['3527','3825','4968','7209','7387','8651','9462','3cb6','451e','52F4','535B','5D42','5F8B','616E','6C2F','6EE4','6FFE','7DA0','7DD1','7EFF','819F','83C9','844E','844F']},'m':{'ma':['5417','55CE','561B'],'mā':['5988','6469','8534','5ABD','5B24','5B37','62B9','64F5','879E'],'mān':['9862','5ADA','989F'],'māo':['732B','8C93'],'má':['3984','7298','8534','45eb','4cf8','5AF2','75F2','87C6','87C7','9EBB','9EBC'],'mái':['3725','4072','4691','399f','4a2a','57CB','85B6','973E'],'mán':['3662','6097','6172','6471','7792','9794','9862','9945','9992','34bc','417c','42a1','443d','44a5','46f2','47c2','4bf6','4c0b','57CB','69FE','748A','779E','86EE','883B','8B3E','8C29','8E63','9B17','9B18','9C3B','9CD7'],'máng':['3751','3936','4152','5402','5940','6082','6757','6767','7264','8292','8609','9099','37cc','385b','3eca','420d','44fc','4d68','54E4','5A0F','5C28','5FD9','607E','6C13','6D5D','727B','72F5','75DD','76F2','76F3','786D','7B00','832B','86D6','91EF','92E9','94D3','99F9','9F06'],'máo':['4166','5825','6786','7266','8305','8306','8765','8992','9155','9328','375f','3b98','3ca0','4b77','515E','5A8C','5AF9','65C4','6BDB','6E35','77DB','7F5E','87CA','8EDE','951A','9AE6','9AF3','9D9C'],'mǎ':['3437','5417','7341','7801','8682','9064','48d5','48d6','55CE','561C','6EA4','72B8','739B','746A','78BC','879E','93B7','99AC','9A6C','9C22','9DCC'],'mǎi':['8552','4E70','562A','836C','8CB7','9DF6'],'mǎn':['4731','8954','36e7','5C58','6E80','6EE1','6EFF','77D5','87A8','87CE','93CB'],'mǎng':['4073','7865','37d0','37ff','3b12','448e','459f','58FE','5EAC','6C52','6F2D','833B','83BD','83BE','87D2','880E'],'mǎo':['5187','5918','6634','36b9','39c7','536F','5CC1','623C','6CD6','7B37','925A','94C6'],'mà':['6769','7770','7943','9581','347b','372b','3a38','3fba','49de','4be6','508C','551B','561C','5E13','69AA','79A1','7F75','879E','99E1','9A82'],'mài':['4611','4715','5356','8108','8109','8750','9081','9721','4a2b','4bae','4F45','52A2','52F1','58F2','773F','8CE3','8FC8','9EA5','9EA6'],'màn':['3862','4555','4761','4762','5881','6162','8504','8513','8630','9558','35c8','3b05','3d58','486c','50C8','5ADA','5E54','66FC','69FE','6F2B','6FAB','6FB7','71B3','734C','7E35','7F26','8B3E','8C29','93DD'],'mào':['4024','5183','5190','5192','6693','6959','7441','7683','7780','7790','8004','8252','8302','34b5','34bb','384c','39cc','3a9e','3aef','3d18','3eba','3fde','42c3','44ee','485a','4ac9','5AA2','5E3D','61CB','67D5','6BF7','770A','82BC','843A','88A4','8C8C','8CBF','8D38','911A','912E'],'me':['5692','4E48'],'men':['5011','4EEC'],'mē':['5692'],'mēn':['60B6','691A','95F7'],'mēng':['8499','63B9','64DD'],'méi':['3641','4288','4359','4902','5445','5833','6517','6802','6885','6963','6973','7164','7338','7442','7709','7742','7996','8104','8122','8393','9176','9387','9545','9709','3eb3','587A','5A92','5D4B','5FBE','679A','69D1','6C92','6CA1','6E44','6E48','73AB','73FB','7BC3','815C','82FA','847F','90FF','92C2','9DA5','9E5B','9EF4'],'mén':['5011','9346','9494','9580','9585','429f','4ad2','4EEC','626A','636B','6A20','7A48','83DB','864B','95E8'],'méng':['3679','3813','4004','4443','4445','4490','4666','4669','4913','4970','6726','8268','8394','8420','8499','8544','8771','9133','9138','9740','3a5a','41c7','425a','45c8','47e5','4c12','4c9b','4d0c','4d3f','4d46','511A','51A1','5E6A','63B9','66DA','6A57','6AAC','6C0B','6FDB','750D','753F','76DF','77A2','77C7','77D2','791E','840C','867B','96FA','995B','9BCD','9E0F','9E72'],'měi':['4180','4738','6334','9382','9541','44fa','51C2','5A84','5ABA','5B0D','5D44','6BCE','6BCF','6D7C','6E3C','71D8','7F8E','8EBE','9EE3'],'měn':['66AA'],'měng':['4045','7374','8499','8722','8813','9333','9530','43f5','52D0','61DC','61DE','61F5','731B','74FE','824B','9BED'],'mè':['7666'],'mèi':['6627','7778','7959','8882','3b51','401b','424b','4c28','4c2a','4d62','59B9','5A9A','5BD0','6CAC','715D','75D7','771B','875E','8B0E','8DCA','97CE','9B3D','9B45'],'mèn':['3943','3996','7116','3c6a','3d4d','60B6','61D1','61E3','71DC','95F7'],'mèng':['3734','3771','4822','4942','5922','5923','9725','44dd','5B5F','68A6','6E95','973F'],'miāo':['55B5'],'mián':['3499','3770','6763','7720','8287','8752','3b8c','3c03','40c7','43c3','4af5','4c13','5A42','5A94','5B35','5B80','68C9','6AB0','6ACB','77C8','77CA','77CF','7DBF','7DDC','7EF5','81F1'],'miáo':['3464','4067','7784','45a2','63CF','7DE2','82D7','9C59','9D93','9E4B'],'miǎn':['3743','3901','4904','5195','5595','6110','7704','9766','3a3a','3ef0','400e','4a44','4E0F','4FDB','506D','514D','52C9','52D4','5A29','6C45','6C94','6E11','6E4E','6FA0','7D7B','7DEC','7F05','817C','9BB8','9EAB','9EFD'],'miǎo':['7707','9088','399d','676A','6DFC','6E3A','79D2','7BCE','7DF2','7F08','85D0'],'miàn':['9762','9763','3d10','46c9','7CAB','7CC6','9EAA','9EB5','9EBA'],'miào':['5999','7385','5E99','5EBF','5EDF','7AD7','7E46','7F2A'],'miē':['5400','4E5C','54A9','5B6D','7F8B'],'miè':['4329','6423','7923','8511','8849','8995','9456','349d','3a62','407e','423c','460a','4a4f','5E6D','61F1','6AD7','6EC5','700E','706D','7BFE','858E','881B','884A','9C74','9D13'],'miū':['5512'],'miù':['7E46','7F2A','8B2C','8C2C'],'mī':['7787','54AA','772F'],'mí':['3737','4272','4315','4358','4573','4577','4978','6202','6520','7030','7222','7315','7962','9761','37dc','38c6','3e0f','42b3','46e7','490d','4d22','519E','58D0','5F25','5F4C','64DF','6AB7','737C','74D5','772F','79B0','7C4B','7CDC','7E3B','7F59','84BE','862A','863C','88AE','8A78','8B0E','8C1C','8FF7','919A','91BE','91BF','91C4','957E','9E0D','9E8A','9E8B','9E9B'],'mín':['4055','4767','4851','7418','7449','7807','7888','9231','9309','9372','37e9','37ed','3a09','40a5','40c9','42cb','47e8','487b','4ab8','4c84','51A7','578A','5CB7','5D0F','5FDE','5FDF','600B','636A','65FB','65FC','668B','6C11','739F','73C9','75FB','76FF','7DCD','7DE1','7F17','7F60','82E0','95BA'],'míng':['3760','4119','4285','6719','7190','7700','7791','8317','9298','41a9','4ae4','4cdf','4F72','51A5','540D','5AC7','660E','669D','69A0','6D3A','6E9F','733D','84C2','879F','89AD','8A7A','910D','94ED','9CF4','9E23'],'mǐ':['3765','3827','6549','7056','8112','8288','9761','395d','3cfd','42db','4b67','4c4a','4F8E','54F6','5B4A','5F2D','6CB5','6D23','6E33','6FD4','772B','7C73','845E','851D','92A4'],'mǐn':['3978','5221','6543','9594','9596','37b6','3b06','50F6','51BA','52C4','60AF','610D','615C','61AB','62BF','654F','656F','668B','6CEF','6E63','6F63','6FA0','76BF','7B22','7B3D','7C22','95A9','95F5','95FD','9C35','9CD8','9EFD','9EFE'],'mǐng':['7733','9169','37f0','3ae5','51D5','59F3','614F'],'mì':['3706','4047','4310','4591','4909','5196','5627','5853','6993','7955','8524','8820','8993','8994','3a20','3ad8','3cf4','3d35','3d4b','3e13','423f','430f','46d1','48fe','4bad','51AA','5B93','5BBB','5BC6','5CDA','5E42','5E4E','5E66','6A12','6AC1','6C68','6CCC','6DE7','6DFF','6EF5','6F1E','6FD7','79D8','7C1A','7CF8','7CF9','7E9F','7F83','85CC','871C','89C5','8B10','8C27','9F0F'],'mìng':['448c','547D','63B5'],'mo':['5E85'],'mō':['6478'],'mōu':['54DE'],'mó':['5298','6469','6479','7121','8611','9943','40fa','4b69','4be2','56A4','56A9','56B0','5AEB','64F5','6A21','6A45','78E8','7CE2','819C','85E6','8B28','8C1F','995D','998D','9ACD','9B54','9B79','9EBD'],'móu':['4950','5463','6048','7738','3b4c','42f7','43ec','45cb','4c55','4F94','52BA','6D20','725F','7E46','7F2A','86D1','8B00','8C0B','8E0E','927E','936A','9D3E','9EB0'],'mǒ':['4a4b','61E1','62B9','62BA','9EBF'],'mǒu':['4352','5187','67D0','8E07'],'mò':['4603','5190','6154','6629','7205','7799','7933','8031','8108','8109','8309','8388','8847','9286','9546','9722','9786','3c73','3dac','3dec','3df5','3e6e','407c','407f','43de','44ac','4b34','4bac','4c45','4cee','4d32','4E07','52B0','55FC','561C','569C','573D','587B','58A8','59BA','5AFC','5BDE','5E1E','603D','62B9','66AF','672B','67BA','6B7E','6B7F','6B81','6C92','6CA1','6CAB','6E50','6F20','72E2','734F','763C','768C','771C','773D','781E','78E8','79E3','7C96','7E38','7E86','83AB','842C','84E6','85E6','86E8','87D4','88B9','899B','8B29','8C83','8C8A','8C98','93CC','964C','977A','9A40','9B15','9B69','9ED8','9ED9'],'mòu':['6117'],'mú':['4c6f','58B2','6A21','6A45','6BEA','6C01'],'mǔ':['4948','7261','7273','7546','7552','9267','37c2','4EA9','59C6','5A12','5CD4','62C7','6BCD','755D','755E','756E','782A','80DF'],'mù':['3708','4032','4475','5776','5893','6048','6155','6728','6958','7091','7267','7766','9702','38ce','39c5','3f87','42be','4EEB','51E9','52DF','5E55','5E59','66AE','6BE3','6C90','725F','76EE','7A46','82DC','83AF','869E','926C','94BC','96EE','97AA','9DA9'],'ḿ':['5452','5638']},'n':{'na':['54EA'],'nā':['90A3'],'nān':['56E1'],'nāng':['4E6A','56A2','56CA','56D4'],'nāo':['5B6C','5CF1'],'ná':['6310','46d4','4af1','55F1','62CF','62FF','8ABD','93BF','954E'],'nái':['3728','4372','4605','6468','3f8d','4bee','5B7B','718B'],'nán':['5357','5583','6694','6960','7537','7558','8433','9056','34d3','3f56','451c','46c1','4db2','4FBD','597B','5A1A','678F','67AC','67DF','83AE','8AF5','96BE','96E3'],'náng':['4078','9962','9995','56A2','56CA','6B1C'],'náo':['5476','5912','6013','6320','6493','7331','7376','7847','8641','9403','37aa','40e9','46dd','4d03','4F2E','5CF1','5DA9','5DCE','5DD9','61B9','737F','7E77','86F2','87EF','8A49','8B4A','94D9','9AD0'],'nǎ':['4E78','54EA','96EB'],'nǎi':['5976','7593','4E43','59B3','5B2D','5EFC','6C16','6C1D','827F','8FFA','91E2'],'nǎn':['4212','4296','6201','8169','3af1','63C7','6E73','877B','8D67'],'nǎng':['7062','9962','9995','3d9e','652E','66E9'],'nǎo':['4700','4727','5318','5816','7459','8111','8133','8166','344e','36f4','3e81','57B4','607C','60A9','60F1','78AF'],'nà':['4593','5436','5450','6290','8872','9209','3a25','3d4a','41f1','422b','438e','43e7','45a7','47dc','4a8f','59A0','5A1C','637A','7B1D','7D0D','7EB3','80AD','84B3','88A6','8A25','8C7D','8EDC','90A3','94A0','9B76'],'nài':['5037','5948','8010','8418','8926','3b88','3b8f','3ca1','4F74','67F0','6E3F','879A','933C','9F10'],'nàn':['3b2e','5A7B','96BE','96E3'],'nàng':['3682','513E','9F49'],'nào':['9599','6DD6','81D1','95F9','9B27'],'ne':['5462'],'nēn':['9EC1'],'né':['54EA'],'néng':['3d30','43fb','511C','80FD','85B4'],'něi':['8147','9912','9981','3f0f','4c8e','812E','9BBE','9BD8'],'nè':['356f','415e','43aa','4b46','8A25','8BB7'],'nèi':['5167','5185','343b','3a05','6C1D'],'nèn':['6041','371b','3bce','3da7','5AE9','5AF0'],'nèng':['3c8c'],'ng':['55EF'],'niān':['62C8','852B'],'nián':['4139','412d','4b2f','54D6','59E9','5E74','79CA','79E5','9B8E','9BF0','9C87','9CB6','9D47','9ECF'],'niáng':['5A18','5B22','5B43'],'niǎn':['3724','4693','6506','378b','3b9f','637B','649A','64B5','6D8A','713E','78BE','7C10','8DC8','8E68','8E8E','8F26','8F87','9BF0','9F73'],'niǎo':['3735','3821','8311','8526','8885','349f','3b64','40f5','465a','498a','4b8d','5ACB','5AD0','5B1D','5B32','6A22','88CA','892D','9CE5','9E1F'],'niàn':['5344','5538','3cbd','49d4','57DD','5EFF','5FF5','6DF0','824C','9F30','9F5E'],'niàng':['4586','917F','91B8','91C0'],'niào':['3799','8132','3cee','5C3F'],'niē':['9222','9448','60D7','634F','63D1','8E17'],'nié':['386a','82F6'],'niè':['3595','3596','3628','3694','3738','4112','4330','5699','8042','8076','8616','8617','8825','9477','9480','9667','9689','9873','358f','361d','363f','365e','3a76','3b86','3d2a','3e0e','40bc','41e3','431c','487e','4bc0','4bc5','4bf5','4cd6','4E5C','556E','55A6','55EB','565B','56C1','56D3','573C','5B7C','5B7D','5D72','5DD5','5E07','655C','67BF','68FF','6AF1','6D85','6E7C','758C','75C6','7BDE','7CF1','7CF5','81EC','81F2','83CD','8E02','8E51','8EA1','931C','93B3','954A','954D','95D1','989E','9F67','9F69'],'niū':['599E'],'niú':['35bb','449c','6C7C','725B'],'niǔ':['4087','7084','9215','9775','3eb2','43d4','5FF8','626D','677B','72C3','7D10','7EBD','83A5','94AE'],'niù':['42f4','62D7'],'nī':['59AE','59C4'],'nīn':['810C'],'ní':['4626','5462','6029','8063','9268','9713','37be','3a92','3e78','463d','46cf','475a','502A','576D','57FF','5A57','5C3C','5C54','6CE5','6DE3','72CB','72D4','730A','79DC','7C7E','81E1','873A','89EC','8C8E','8DDC','8F17','90F3','922E','94CC','9BD3','9BE2','9CB5','9D82','9E91','9F6F'],'nín':['391b','42fb','46be','56DC','60A8'],'níng':['3755','5680','7370','8079','3cb0','41a8','45ff','4b62','51DD','549B','5B23','5B81','5BCD','5BD5','5BD7','5BDC','5BE7','62E7','64F0','67E0','6AB8','72DE','752F','804D','82E7','944F','9B21','9E0B'],'nǐ':['4565','5117','7962','3a58','49b5','4F31','4F60','511E','59B3','5B74','62B3','62DF','64EC','65CE','67C5','6AB7','79B0','82E8','85BF','86AD','8B7A','96AC','999C'],'nǐn':['62F0'],'nǐng':['62E7','64F0','6A63','77C3'],'nì':['3990','4065','5804','6635','7768','9006','381c','397e','3cbb','3d6b','460c','4d51','4d52','4F32','533F','57FF','5ADF','5B3A','5C70','60C4','615D','66B1','6C3C','6CE5','6EBA','7E0C','80D2','817B','81A9','8FE1','9DCA'],'nìng':['38f7','3fe6','452d','4F5E','4FAB','503F','5B81','5BE7','6CDE','6F9D','6FD8'],'nóng':['4889','5102','5665','7651','8113','3db6','3e9c','4FAC','519C','54DD','6A82','6B01','6D53','6FC3','71F6','79AF','79FE','7A60','81BF','895B','8FB2','8FB3','91B2','9B1E','9F48'],'nóu':['3779','7373','4a32','7FBA'],'nǒng':['4d5c'],'nǒu':['370c','3cf6'],'nòng':['6335','5F04','630A'],'nòu':['4176','5542','8028','9392','462b','4c2d','55D5','69C8','8B68','8B73','941E'],'nuǎn':['6696','7156','7157','3b09','6E1C','6E6A','992A'],'nuàn':['5044'],'nuè':['7878'],'nuó':['345a','352e','3c19','50A9','513A','5A1C','632A','637C','689B','90CD'],'nuǒ':['3845','7808','36c2','6A60'],'nuò':['3421','6426','6992','9369','9518','35a0','46a5','558F','5DBF','611E','61E6','61E7','633C','63BF','643B','7A2C','7A64','7CD1','7CE5','7CEF','8AFE','8BFA','8E43','903D'],'nū':['9D11'],'nú':['5974','8498','36a2','5B65','7B2F','99D1','9A7D'],'nǔ':['4F2E','52AA','5F29','782E','80EC'],'nù':['6012','6419'],'nüè':['4588','7627','8650','458b','4a0b','759F','8B14'],'nǚ':['5973','9495','7C79','91F9'],'nǜ':['4610','6067','6712','8842','8844','3d56','45a1','46bc','4d8a'],'ň':['3576'],'ňg':['3576']},'o':{'ō':['5594','5662'],'ōu':['4271','4314','4654','4972','5340','5614','5878','8192','533A','616A','6AD9','6B27','6B50','6BB4','6BC6','6CA4','6F1A','71B0','74EF','750C','7B7D','84F2','8B33','8BB4','9D0E','9DD7','9E25'],'ó':['54E6'],'óu':['543D'],'ǒ':['5684'],'ǒu':['3496','5076','5418','5455','5614','8026','8162','8545','3f34','85D5'],'ò':['54E6'],'òu':['4302','5614','6004','616A','6CA4','6F1A']},'p':{'pā':['4524','5991','7685','8225','8469','8686','4bf2','556A','8DB4'],'pāi':['62CD'],'pān':['3434','3896','6500','7568','7705','7819','3f43','41ba','6F58','756A'],'pāng':['8180','8196','43fa','4a26','4E53','6EC2','80EE'],'pāo':['8422','3bf1','3c8f','4afd','629B','62CB','6CE1','812C'],'pá':['6252','6777','7436','8019','9200','63B1','6F56','722C','7B62','8DC1'],'pái':['6392','4c5d','4FF3','5F98','68D1','724C','7BFA','7C30','7C32','8F2B'],'pán':['5643','40f2','4c09','4c14','4E2C','5ABB','5E4B','642B','69C3','700A','723F','76D8','76E4','78D0','78FB','7E0F','80D6','84B0','87E0','8DD8','8E2B','8E52','8E63','939C','97B6'],'páng':['4819','5390','5396','8180','8783','9004','9736','396c','3ac4','416d','5ACE','5C28','5E9E','5EAC','5F77','5FAC','65C1','78C5','7BE3','823D','96F1','9A2F','9C1F','9CD1','9F8E','9F90'],'páo':['5228','5486','5789','9784','36bf','4a5d','530F','5E96','70AE','70B0','722E','72CD','74DF','888D','891C','8EF3','9E85'],'pǎi':['6392','4FD6','77F2','8FEB'],'pǎn':['5762','5964'],'pǎng':['448d','55D9','802A','89AB'],'pǎo':['8DD1'],'pà':['6015','8899','5E0A','5E15','7D48'],'pài':['9383','3b5b','3d7a','45b0','54CC','6C56','6D3E','6E43','848E'],'pàn':['5224','7249','7554','8041','9804','9816','51B8','53DB','62DA','6C9C','6CEE','6EBF','708D','76FC','88A2','897B','8A4A','947B','9D65'],'pàng':['3569','7090','80A8','80D6'],'pào':['3610','5945','7832','8422','9764','3be1','4d8c','6CE1','70AE','75B1','76B0','791F','792E','9AF1','9EAD'],'pen':['55B7'],'pēi':['5478','8843','9185','36b0','57BA','599A','5A1D','5CAF','67F8','80A7','80DA'],'pēn':['5674','35b9','55AF','55B7','6B55'],'pēng':['4995','5309','6026','6072','6888','7830','7851','36c1','382e','39f8','436c','494b','562D','62A8','6F30','70F9','78DE','8EEF','959B','99CD'],'péi':['8356','9307','37dd','3bc1','48d9','4aca','57F9','6BF0','88F4','88F5','8CE0','8D54','952B','962B','966A','966B'],'pén':['8450','6E53','74EB','76C6'],'péng':['4118','5017','5873','6189','6337','6412','6916','8283','8615','394a','3c76','486b','4c03','4d36','50B0','57C4','580B','585C','5F6D','670B','68DA','6A25','6DDC','6F8E','75ED','787C','7A1D','7AFC','7BF7','7E84','81A8','84EC','87DA','87DB','8F23','930B','945D','97F8','97FC','9A61','9AFC','9B05','9B14','9D6C','9E4F'],'pěi':['6622','7423'],'pěn':['5460','7FC9','7FF8'],'pěng':['6367','6DCE','768F'],'pèi':['3904','4283','9708','39e9','3cc8','3fa6','4F02','4F69','59F5','5E14','65BE','65C6','6C9B','6D7F','73EE','7FC7','82DD','84DC','8F61','8F94','914D','99B7'],'pèn':['5674','55B7'],'pèng':['3f1e','63BD','692A','78B0'],'piān':['6241','7247','8439','9342','9828','34f2','3fab','504F','56E8','5AA5','728F','7BC7','7FE9','8CB5','9DA3'],'piāo':['6153','50C4','527D','52E1','65DA','6F02','7E39','7F25','7FF2','85B8','87B5','98C3','98C4','98D8','9B52'],'pián':['6969','8141','36f9','3f10','4b81','4FBF','7DF6','7F0F','80FC','8ADA','8ADE','8CC6','8E41','99E2','9A08','9A88','9ABF'],'piáo':['6734','3f3c','456f','4d29','5AD6','6DF2','74E2','7AC2','95DD'],'piǎn':['8991','8ADE','8C1D'],'piǎo':['3d71','3e7e','6B8D','6F02','72A5','76AB','779F','7E39','91A5','9DC5'],'piàn':['7247','3e24','43d2','9A17','9A19','9A97','9B78'],'piào':['7968','8508','9860','3b13','43c7','560C','5F6F','5FB1','6F02','7BFB','9A43','9AA0'],'piē':['6486','6487','66BC','6C15','77A5'],'piě':['4955','6487','9405','4E3F','82E4'],'pī':['5288','6036','6279','7812','7915','9239','9294','9739','3a22','3c5f','4ae0','4bf1','4E15','4F3E','567C','576F','58CA','58DE','600C','61B5','62AB','62B7','65C7','708B','72C9','72D3','78C7','79DB','79E0','7D15','7EB0','7FCD','801A','8C7E','90B3','91FD','925F','95E2','99D3','9AEC','9D04'],'pīn':['3866','4399','7917','59D8','62FC','6D84','7A66'],'pīng':['7129','8060','9829','46e3','4E52','4FDC','5A09','782F','89AE'],'pí':['5564','6707','6787','6911','7137','7308','7435','8157','8298','8731','9239','9630','9642','9674','34df','3bb0','3bc5','3f30','4cb9','4d3d','57E4','58C0','6BD7','6BD8','6BDE','72A4','73AD','75B2','76AE','7B13','7D15','7F74','7F77','7F86','80B6','813E','818D','85E3','868D','86BD','87B7','882F','88E8','8C7C','8C94','90EB','921A','930D','94CD','96A6','9B6E','9B7E','9B8D','9C8F','9F19'],'pín':['7015','9870','9891','3c0b','3e8d','56AC','5A26','5AD4','5B2A','77C9','85B2','860B','8CA7','8D2B','983B','98A6'],'píng':['4202','4348','5840','6191','7501','7539','8275','8353','3d57','3eb8','3ec2','44d1','4d84','51AF','51ED','51F4','546F','576A','5C4F','5C5B','5CBC','5E21','5E32','5E48','5E73','617F','67B0','6CD9','6D34','70BE','73B6','74F6','7AEE','7BB3','7C08','7F3E','80D3','82F9','840D','84F1','860B','86B2','86E2','8A55','8BC4','8EFF','8F27','90F1','99AE','9B83','9C86'],'pǐ':['5288','5339','5426','7656','8134','46b0','46b9','490f','4acc','4c26','4EF3','567D','56AD','572E','5D25','5E80','64D7','758B','75DE','82C9','8AC0'],'pǐn':['6980','54C1'],'pǐng':['7D63'],'pì':['4440','4444','4818','4928','7513','7764','7765','7914','3a3d','3cea','3d68','3fd9','43d8','485f','4d19','50FB','568A','5AB2','5AD3','5C41','63CA','6DE0','6E12','6F4E','6FBC','8B6C','8F9F','95E2','9AF2','9DFF','9E0A'],'pìn':['8058','725D'],'pìng':['403b'],'pō':['4368','5761','6534','6535','6734','7679','9166','9197','9642','9887','35f6','39ca','497d','6CCA','6CFC','6E8C','6F51','7FCD','93FA','948B'],'pōu':['5256','5425','4b0c'],'pó':['5619','8522','9131','3a07','3a6f','5A46','6AC7','76A4','7E41'],'póu':['6294','6299','39f5','4bfd','634A','638A','88D2'],'pǒ':['9255','9817','53F5','5C00','7B38','94B7'],'pǒu':['5485','7283','357b','3c34','4cdd','54E3','5A44','5ECD','638A','68D3'],'pò':['4138','4385','6734','7087','7834','7836','36d8','479f','48ea','48ee','4a30','4a96','4a99','4bd9','5CB6','5EF9','6A38','6D26','70DE','73C0','7C95','84AA','8FEB','91B1','9B44'],'pū':['5657','6251','8217','9660','4b92','4c95','4EC6','50D5','5DEC','62AA','64B2','64C8','6F7D','75E1','77A8','92EA','94FA'],'pú':['3492','4451','4515','8386','8461','8946','8965','9564','3bf7','3cab','3eaa','422c','423b','45f1','49e4','4d06','4EC6','50D5','530D','58A3','6A38','6FEE','749E','7A59','7B81','7E80','812F','83D0','83E9','84B1','84B2','8D0C','8F50','917A','93F7'],'pǔ':['5703','5711','6734','9420','9568','3e52','57D4','666E','669C','6A38','6A8F','6C06','6D66','6EA5','70F3','8AA7','8AE9','8B5C','8C31','8E7C'],'pù':['5821','7011','8216','8217','3b25','66B4','66DD','92EA','94FA','9BAC']},'q':{'qian':['6B20'],'qiā':['3909','6390','845C','88B7'],'qiān':['4012','4266','5119','5343','5731','5732','5977','6106','6173','6266','6394','6434','6481','6510','6511','6513','6744','7275','8688','8930','9077','9431','9621','9845','9869','35d4','3a43','3a77','3aa0','41c2','47bf','4EDF','4F65','50C9','515B','5A5C','5C8D','60AD','62EA','6AB6','6ACF','6B26','6C58','6C67','727D','7ACF','7AD3','7B7E','7B9E','7C3D','7C56','7C64','7C81','7FA5','81E4','828A','833E','8AD0','8B19','8B63','8C26','8C38','8FC1','91FA','925B','93F2','948E','94C5','97C6','9A2B','9A9E','9B1C','9B1D','9D6E','9E50','9E89'],'qiāng':['6215','6217','6227','6436','7244','7310','7347','7437','7472','8154','8723','9397','9453','9535','3cfe','3fa4','490c','50B9','545B','55C6','55F4','5D88','65A8','67AA','690C','69CD','6EAC','73B1','77FC','7BEC','7F8C','7F97','7FAB','8B12','8DC4','8E4C','8E61','93D8','93F9','956A'],'qiāo':['3851','5281','5859','6084','6572','7857','9121','9430','9539','390d','40ad','4ade','4be8','4d72','52EA','589D','58BD','5D6A','5E67','6A47','78FD','7E51','7E70','7F32','8DAC','8DF7','8E7A','8E7B','90FB','936B','936C','93D2','96C0','981D','9AB9','9ADC'],'qiá':['62E4'],'qián':['4224','5042','5301','6272','8368','8465','8541','8654','8699','9210','9257','9322','9386','39ae','3a1c','3a6e','3e2b','406e','456d','458d','4E79','4E7E','4EF1','524D','59CF','5A8A','5C92','5FF4','62D1','63AE','63F5','69A9','6B6C','6F27','6F5B','6F5C','6FF3','704A','71C2','728D','74E9','7B9D','8EE1','92AD','94A4','94B1','94B3','9A1A','9B35','9C2C','9CF9','9ED4','9EDA'],'qiáng':['5899','7246','8262','8503','8537','8594','8620','3a56','4E2C','58BB','5AF1','5B19','5EE7','5F1C','5F37','5F3A','5F4A','6A2F','6AA3','6F12','8ED6'],'qiáo':['4009','4397','6194','6865','7644','7904','9408','9792','9866','376f','4a4c','4c41','4E54','4FA8','50D1','55AC','563A','5AF6','5CE4','5DA0','5DA3','657F','69D7','6A35','6A4B','71C6','77A7','785A','7C25','7FD8','7FF9','835E','854E','85EE','8B59','8C2F','8DAB','97BD'],'qiǎ':['5361','9160','5CE0','8DD2'],'qiǎn':['8181','8738','9063','39bf','39c4','3e42','41dc','4b64','5D70','69CF','6D45','6DFA','7E7E','7F31','80B7','8B74','8C34'],'qiǎng':['6436','8941','36e8','50B8','52E5','588F','5F1C','5F37','5F3A','62A2','78E2','7E48','7E66','7F9F','7FA5','93F9','956A'],'qiǎo':['6084','6100','36bd','40aa','4cbe','5DE7','91E5'],'qià':['4092','5736','6070','6118','34de','34e3','34e4','384a','404d','4a10','4bca','4d9d','5E22','6B8E','6D3D','9AC2'],'qiàn':['3438','4234','4476','4945','5029','5094','5811','5879','6093','6920','7698','8533','371e','37fb','3be0','42b4','4a88','4d56','4d5b','520B','55DB','58CD','5D4C','614A','68C8','69E7','6B20','6B49','7BCF','7BDF','7DAA','7E34','7EA4','82A1','831C','84A8','8F24','93F2'],'qiàng':['5534','6217','6227','7197','4d41','545B','55C6','709D','7FBB','8DC4','8E4C'],'qiào':['3681','3897','9657','9798','3d25','40dd','41bb','41cc','4FCF','50FA','58F3','5CED','5E29','64AC','64BD','6BBB','6BBC','7A8D','7AC5','7FD8','7FF9','8A9A','8B59','8BEE','8E88','97D2','9ADA'],'qie':['8D84'],'qiē':['5207','36d7','807A','82C6'],'qié':['3697','8304','49a7','4F3D','767F','807A'],'qiě':['4E14'],'qiè':['3932','3966','5207','5327','6308','6705','9365','9532','34f6','35eb','36cd','3e64','3f24','3f80','3f9c','47d9','493f','503F','59BE','602F','608F','60EC','611C','614A','6D2F','6DC1','7A55','7A83','7ACA','7B21','7BA7','7BCB','7C61','85D2','86EA','8D84','8E25','90C4','9BDC'],'qiōng':['5314','712A'],'qióng':['4143','4284','7162','7758','8315','8486','344b','348c','39ed','3baa','3dc0','3f07','41b3','44d6','46ea','483b','511D','536D','5B1B','5B86','60F8','684F','68FE','6A69','712D','718D','743C','749A','74CA','778F','7A77','7A79','7AAE','7AC6','7B3B','7B47','85D1','85ED','86E9','8D79','8DEB','8F01','909B','928E'],'qiū':['3400','4410','4813','5062','5775','6058','6978','8429','8612','8775','8824','36b1','3ccb','418b','4a02','4ca1','4E18','4E20','4E80','5A9D','6E6B','79CB','79CC','7A50','7BCD','7DE7','84F2','86AF','87D7','8DA5','90B1','97A6','97A7','9C0C','9C0D','9C43','9CC5','9D96','9E59','9F9C','9F9D','9F9F'],'qiú':['3564','3797','3939','3962','6739','6882','7403','7486','8119','8764','9011','9052','9194','36cf','37c8','39e8','3b5d','3dd5','3eab','42b5','43bf','472a','47f5','48c7','491b','4EC7','4FC5','50CB','53B9','53F4','56DA','5D37','5DEF','5DF0','624F','6B8F','6BEC','6C42','6C53','6CC5','6D57','6E1E','6E6D','716A','72B0','738C','76B3','76DA','7D0C','7D7F','808D','82EC','838D','866C','866F','86F7','88D8','89E9','8A04','8A05','8CD5','8D47','900E','914B','91DA','91FB','92B6','9B82','9BC4','9C3D'],'qiǔ':['641D','7CD7'],'qiù':['4817','47ec'],'qī':['3953','4953','5601','6532','6816','6864','8904','9863','380c','3a7b','3b24','3c66','45e9','48db','4acf','4E03','501B','50DB','51C4','54A0','552D','59BB','5A38','5F9B','608A','60BD','617C','617D','621A','637F','671E','671F','67D2','687C','68F2','69BF','69ED','6B39','6B3A','6C8F','6DD2','6F06','78E9','7D2A','7DC0','7DDD','7F09','840B','8AC6','8C3F','8E26','8E4A','90EA','970B','9B4C','9D88','9E02'],'qīn':['4737','7019','34ce','3fa3','40e2','4EB2','4FB5','512C','5A87','5BF4','5D5A','5D94','6B3D','7D85','887E','89AA','8A9B','94A6','99F8','9A8E','9BBC'],'qīng':['5568','9306','9516','9751','9752','4a1d','503E','50BE','537F','570A','5BC8','6C22','6C2B','6DF8','6E05','72C5','873B','8EFD','8F15','8F7B','90EC','9BD6','9CAD'],'qí':['4122','4172','4421','4474','5176','5258','5898','5947','6391','6589','7309','7382','7426','7482','7541','7566','7881','7895','7941','7948','8006','8110','8269','8360','8415','8572','8604','8691','8694','8810','8879','9321','9324','9754','9880','35a2','37d3','37da','37e2','3a7d','3be6','3c17','427b','44c5','44eb','479a','47da','484b','49f5','4a53','4b76','4b7c','4c07','4c48','4cac','4ce2','4d92','4d9e','4E93','4E9D','4FDF','573B','57FC','5C90','5C93','5D0E','5D5C','5E3A','612D','61E0','658A','65C2','65D7','68CA','68CB','6AB1','6AC0','6B67','6DC7','6E0F','6FDD','742A','75B7','797A','79A5','7A18','7AD2','7AE2','7C31','7C4F','7CB8','7DA6','7DA8','7DD5','7E83','7FD7','81CD','82AA','85BA','85C4','869A','86F4','871D','871E','87A7','8DC2','8E11','8EDD','8FC9','913F','91EE','951C','980E','9A0E','9A0F','9A90','9A91','9B10','9B3F','9BA8','9BD5','9C2D','9CAF','9CCD','9D78','9D80','9E92','9EA1','9F4A','9F50'],'qín':['3626','3899','4537','5659','6366','7434','7439','8039','8793','8804','8983','9219','9772','354b','3a52','3a81','3b97','49a6','4c3c','52E4','53AA','55EA','5AC0','5E88','5ED1','61C3','61C4','64D2','65B3','6A8E','6FBF','73E1','77DC','79BD','79E6','80A3','82A9','82B9','83E6','8D7A','922B','96C2','9D6D'],'qíng':['3500','5260','6674','6692','7520','7858','3bf3','478d','4c94','52CD','591D','60C5','64CE','6A08','6AA0','6B91','6C30','9EE5'],'qǐ':['3485','4507','4854','5447','5518','5553','5554','6567','6675','7398','8291','9094','3ad3','410e','412b','42ef','43a2','43ff','44bb','4b6b','4b6c','4E5E','4F01','542F','555F','5A4D','5C7A','5C82','675E','68E8','69E3','76C0','7A3D','7C2F','7DAE','7DBA','7EEE','829E','88FF','8AEC','8C48','8D77','95D9'],'qǐn':['3772','5745','6611','9513','9849','3f9b','5BD1','5BDD','5BE2','66CB','87BC','8D7E','92DF'],'qǐng':['9803','9877','3a69','3deb','451b','4be7','5EBC','5ECE','6ABE','7DAE','82D8','8ACB','8B26','8BF7'],'qì':['3793','4019','4048','4049','4164','4497','4644','4689','4880','5650','5668','5921','5951','6112','6187','6456','6589','6814','7081','7508','7918','379a','38ec','430c','43c5','43cc','43e0','453e','468d','47c4','4ad4','4c34','4E9F','546E','5F03','5FD4','61A9','658A','66A3','68C4','6B2B','6C14','6C17','6C23','6C54','6C7D','6CE3','6E46','6E47','710F','76F5','77F5','780C','789B','78B6','78DC','78E7','7DA5','847A','87FF','8A16','8AFF','8BAB','8FC4','93DA','9F1C'],'qìn':['3908','5422','5423','6407','37ac','421c','551A','628B','63FF','64B3','6C81','83E3'],'qìng':['4856','6176','6385','7883','9758','3d7e','42dc','4EB2','51CA','5E86','6AE6','6BB8','6C6B','6F00','78D8','78EC','7B90','7F44','7F4A','89AA','8B26','944B'],'qu':['620C'],'quān':['5708','34bd','432f','570F','5F2E','609B','60D3','68EC','7D5F'],'quán':['4830','5168','5573','6743','7065','7277','7288','7454','7842','8343','8472','8737','8838','9293','9874','34b0','37eb','402c','444f','47d2','4F7A','59FE','5A58','5B49','5CD1','5DCF','606E','62F3','643C','697E','6A29','6B0A','6CC9','6D24','6E76','75CA','7B4C','7E13','89E0','8A6E','8BE0','8DE7','8E21','8F07','8F81','919B','94E8','95CE','98A7','99E9','9A21','9B08','9C01','9CC8','9F64'],'quǎn':['7404','8647','415a','428e','545F','6C71','72AC','72AD','753D','754E','7DA3','7EFB'],'quàn':['4110','5238','6926','7276','529D','52E7','52F8','70C7','7D6D'],'quē':['7094','9619','7F3A','7F3C','849B','95D5'],'qué':['7638'],'què':['3541','4373','5374','6128','6164','6409','7910','9615','9619','3a41','3c0c','3c4b','3c7f','3c89','3d36','3e71','3fa1','41ce','49ac','49ff','4cb5','537B','57C6','58A7','5D05','60AB','69B7','6BC3','704D','71E9','76B5','785E','786E','788F','78BA','78BB','792D','8D9E','95CB','95D5','96C0','9B65','9D72','9E4A'],'quí':['9F3D'],'qū':['3617','4897','5324','5340','5765','6188','7820','9639','380a','3b55','3e16','3ec3','420c','44a7','44bc','44da','44db','45a6','49e2','4F39','4F49','51F5','533A','547F','5C48','5C96','5CA8','5CB4','5D87','62BE','657A','66F2','710C','795B','7B41','7CAC','7D36','80E0','86C6','86D0','88AA','89B0','89B7','8A58','8AB3','8BCE','8D8B','8DA8','8EAF','8EC0','957C','99C6','99C8','9A45','9A71','9AF7','9B7C','9C38','9C4B','9D8C','9EAF','9EB4','9EB9','9EE2'],'qūn':['9021','37d2','590B','5CEE','8E06'],'qú':['3586','3739','4082','4763','5337','6235','6710','7048','7383','7496','8556','8627','8837','8850','8862','38c4','3beb','3c98','41bd','42e7','47a4','47ca','4d76','52AC','5FC2','61C5','65AA','6B0B','6C0D','6DED','6E20','74A9','766F','77BF','78F2','7C67','7FD1','7FF5','80CA','81DE','83C3','844B','87B6','87DD','883C','8C66','8C9C','8EA3','8EE5','947A','9D1D','9E1C','9E32','9EB4','9F29'],'qún':['3a8a','3fcf','4b7d','5BAD','5E2C','7FA3','7FA4','88D9','88E0','9E87','9E8F','9E95'],'qǔ':['4d9a','53D6','5A36','66F2','6D40','7AEC','7B41','7D36','82E3','8A53','9EAF','9F72','9F8B'],'qù':['4066','4810','9612','39c1','3ae2','3c26','521E','53BA','53BB','801D','89B0','89B7','89BB','89D1','8DA3','8FF2','95B4','95C3','9EAE','9F01']},'r':{'rāng':['56B7'],'rán':['3723','4533','4584','7136','8692','8887','3caf','3e10','3f86','457c','4ac7','4cff','562B','71C3','7E4E','80B0','86A6','86BA','86C5','887B','88A1','9AE5','9AEF'],'ráng':['4274','5134','8618','8830','52F7','703C','737D','74E4','79B3','7A63','7A70','8E9F','9B24'],'ráo':['6861','8558','8953','9952','9976','3e5b','5A06','5B08','6A48','82DA','835B','87EF'],'rǎn':['3484','4383','4921','5184','5189','5465','8485','36a9','3ff5','44a3','48f8','59CC','5AA3','5AE8','67D3','6A6A','73C3','82D2'],'rǎng':['6518','7219','444b','56B7','58CC','58E4'],'rǎo':['3471','6270','5A06','5B08','64FE','7E5E'],'ràng':['61F9','703C','8B72','8B93','8BA9'],'rào':['9076','7E5E','7ED5','96A2'],'rēng':['6254'],'rén':['6732','9213','433e','46d8','4EBA','4EBB','4EC1','4EFB','58EC','5FC8','5FCE','79C2','7D1D','82A2','928B','9B5C','9D39'],'réng':['4127','3b41','3eb1','46ae','4ECD','793D','8FB8','967E'],'rě':['558F','60F9'],'rěn':['6820','6823','8375','38fc','4b43','5FCD','68EF','79F9','7A14','7D9B','814D','834F','8EB5'],'rè':['6E03','70ED','71B1'],'rèn':['3834','4014','5203','5204','6752','6895','7263','7268','8095','9771','9779','9901','3db5','3e3e','41ee','42d5','43d5','4EDE','4EED','4EFB','598A','59D9','5C7B','5C83','794D','7D09','7D4D','7EAB','7EB4','845A','887D','88B5','8A12','8A8D','8BA4','8BB1','8ED4','8EE0','8F6B','976B','976D','97CC','97E7','98EA','996A','9D40'],'rèng':['82BF'],'rì':['8875','9224','44a4','56F8','65E5','6C1C','99B9','9A72'],'róng':['3607','3750','4236','4846','4865','6804','6995','7194','7203','7462','8319','8338','8357','8363','8811','8923','9394','9555','38d1','3b5c','3c93','3ca8','3e8e','3f38','41c0','41ef','462c','481c','490a','4a78','5AB6','5B2B','5BB9','5D58','5D64','5DB8','620E','66E7','69AE','69B5','6BE7','6EB6','701C','70FF','72E8','7A41','7D68','7E19','7ED2','7FA2','809C','84C9','877E','878D','878E','93B9','99E5','9AF6','9C2B','9DDB'],'róu':['4413','7448','8447','9352','3f65','49f7','4c06','5A83','63C9','67D4','697A','6C91','6E18','74C7','79B8','7CC5','816C','875A','8E42','8F2E','97A3','97D6','9A25','9C07','9D94'],'rǒng':['4887','5087','5197','6411','3c9d','5B82','6C04','8EF5'],'rǒu':['7163','9355','7C88'],'ròng':['7A43','9D27'],'ròu':['8089','5B8D'],'ruán':['4647','5827','58D6','648B'],'ruǎn':['4782','8761','34f4','3b95','3f31','3f6d','43a1','44f4','4aad','5A86','670A','744C','74C0','789D','791D','7DDB','800E','815D','8EDF','8F2D','8F6F','962E'],'ruí':['4151','7524','8564','4b10','5A51','7DCC'],'ruǐ':['6875','8602','8603','60E2','6A64','7E60','854A','854B'],'ruì':['4132','6798','8739','9510','34f9','38bb','3aab','3c8a','40b1','41e4','433c','44f2','53E1','58E1','6C6D','745E','777F','82AE','868B','92B3','92ED'],'ruò':['6949','7207','9100','441e','504C','53D2','5D76','5F31','7BAC','7BDB','82E5','84BB','9C19','9C2F','9DB8'],'rū':['5DBF'],'rūn':['7289'],'rú':['3435','4795','5112','5685','5982','6310','6847','8339','8560','8815','8966','3a0e','3f92','42c8','4c30','5B7A','5E24','66D8','6E2A','6FE1','71F8','7B4E','85B7','88BD','909A','91B9','92A3','94F7','986C','98A5','9C6C','9D3D'],'rún':['77A4'],'rǔ':['8097','4E73','4F9E','64E9','6C5D','8FB1'],'rù':['5089','5165','6256','6741','8925','39ba','3e58','413e','55D5','5AB7','6D33','6EBD','7E1F','7F1B','84D0','8FBC','910F','9CF0'],'rùn':['3808','43f0','499e','6A4D','6DA6','6F64','81B6','958F','95A0','95F0']},'s':{'san':['6563'],'sang':['4E27'],'sā':['6492','4EE8'],'sāi':['5625','6056','6122','3a59','46a1','4c04','567B','585E','63CC','6BE2','816E','984B','9C13','9CC3'],'sān':['4200','5381','5607','6515','7299','4E09','53C1','53C4','5F0E','6BF5','6BF6','6BFF','9B16'],'sāng':['6851','6852','462e','4E27','55AA','67BD','69E1'],'sāo':['3970','6145','6414','63BB','6E9E','7E45','7F2B','81CA','87A6','98BE','9A12','9A37','9A9A','9BF5','9C20','9C3A','9C62','9CCB'],'sǎ':['6492','7051','9778','6D12','6F75','8A2F'],'sǎi':['3614','4222','35f7'],'sǎn':['4248','4289','5098','6563','9401','9993','39f2','4ae9','4ED0','4F1E','4F61','6A75','7CC1','7CC2','7CDD','7CE3','7CE4','7E56','93FE','994A'],'sǎng':['4866','6421','9859','4ad9','55D3','78C9','892C','939F','98A1'],'sǎo':['4545','6383','36ee','5AC2','626B'],'sà':['4663','5345','6503','8428','9491','348e','36ab','3aaa','3f42','429b','4b03','6AD2','810E','85A9','96A1','98AF','98D2','99BA'],'sài':['50FF','55EE','585E','7C3A','8CFD','8D5B'],'sàn':['6563','9590','393e','3a94','3a9a','4ac5','4FD5'],'sàng':['4E27','55AA'],'sào':['6383','7619','3ca7','3fcb','57FD','626B','6C09','81CA'],'sēn':['8518','8942','5E53','66D1','68EE','692E','69EE','7A7C','7BF8','7F67'],'sēng':['448f','50E7','9B19'],'sè':['3976','4262','7012','8272','348a','3c47','3eed','453c','4a1b','556C','55C7','585E','61CE','64CC','6B6E','6B70','6DA9','6E0B','6F80','6F81','6FC7','6FCF','729E','745F','74B1','7A51','7A61','7A6F','7E6C','7FDC','8B45','8D87','8F56','92AB','94EF','96ED','98CB'],'si':['53A0'],'sī':['4873','5072','5636','6056','6495','6952','7997','8724','8784','8997','9270','9376','9536','37c3','383c','3d32','3e87','3ea8','3f44','41c1','452e','4ae2','4c89','4E1D','4FEC','51D8','53AE','53B6','53B7','53F8','549D','565D','5AA4','5EDD','601D','65AF','69B9','6CC0','6F8C','71CD','78C3','79C1','7D72','7DE6','7F0C','7F73','856C','86F3','87D6','87F4','8B15','92AF','92D6','98B8','98D4','9A26','9DE5','9E36','9F36'],'sǐ':['6B7B'],'sì':['4999','5129','5155','7003','7940','8082','8086','9963','9972','357d','36b6','38c8','3b52','3e3b','3e51','41c3','43a3','43e4','4E96','4F3A','4F3C','4F40','4FDF','55B0','55E3','56DB','59D2','5A30','5B60','5BFA','5DF3','676B','67F6','6C5C','6CD7','6CE4','6D0D','6D98','726D','79A9','7AE2','7B25','801C','857C','8C84','8CDC','91F2','923B','98E0','98E4','98FC','99DF','9A77'],'sōng':['6780','7879','8719','38dd','4bf3','4bf7','502F','51C7','5A00','5D27','5D69','5EBA','5FEA','61BD','677E','67A9','67D7','68A5','6AA7','6DDE','6FCD','83D8','9B06'],'sōu':['4439','4479','4939','6449','6457','7340','8258','8490','9199','422d','45cf','4a73','4b12','4b9f','4c78','55D6','5EC0','5ECB','635C','641C','6EB2','84C3','878B','910B','93AA','953C','98BC','98D5','993F','998A','9A2A'],'sóng':['379e'],'sǒng':['4265','6002','6457','6964','8038','8073','39d0','3a26','3a73','472c','50B1','5D77','609A','612F','616B','7AE6','99F7'],'sǒu':['4239','4264','5081','36d0','37ec','43c2','53DC','53DF','55FE','64DE','64FB','6AE2','778D','7C54','84C3','85AE','85EA','8B0F'],'sòng':['9001','9882','9938','3bb8','46e6','48a0','5B8B','8A1F','8AA6','8BBC','8BF5','980C'],'sòu':['7636','55FD','64DE','64FB'],'suān':['9178','475c','72FB','75E0'],'suǎn':['5334'],'suàn':['7958','7B07','7B6D','7B97','849C'],'suī':['7762','8295','9796','49cc','4a8e','54F8','590A','595E','5A1E','5C3F','6BF8','6D7D','6ED6','6FC9','71A3','772D','7D8F','837D','837E','867D','96D6'],'suí':['4714','9040','9042','3d66','3edf','48ab','7D8F','7EE5','968B','968F','96A8','96DF'],'suǐ':['7021','9743','4b49','4bdd','5DB2','5DC2','81B8','9AC4','9AD3'],'suì':['4157','4341','4539','4814','4875','4959','7815','9042','9083','9406','9429','34b8','37b8','395e','3d1a','3eea','3efd','424c','4E97','57E3','5B18','5C81','5D57','65DE','6A85','6A96','6B72','6B73','6FBB','716B','71E7','74B2','74CD','775F','788E','795F','79AD','7A42','7A57','7A5F','7C8B','7E40','7E78','895A','8AB6','8B62','8C07','8CE5','96A7'],'suō':['5506','6331','6332','7743','36d6','44fe','450b','4bef','509E','55CD','55E6','5A11','644D','686B','686C','68AD','6A0E','7C11','7C14','7E2E','7F29','7FA7','838E','838F','84D1','8D96','9BBB'],'suǒ':['4174','4217','4786','5522','6240','6475','7410','7411','7463','7485','7637','8928','9396','9501','3abd','3ba6','40b9','459b','47bd','48d4','4d40','55E9','669B','6E91','7D22','938D','93BB','93C1','93FC'],'suò':['9024','441d'],'sū':['7526','8607','8613','9165','389d','3c9e','431a','4c86','56CC','6AEF','7A23','7A4C','7AA3','82CF','9BC2'],'sūn':['8575','5B59','5B6B','640E','69C2','72F2','733B','836A','84C0','859E','98E7','98F1'],'sú':['4FD7'],'sǔn':['4423','353c','398f','405a','635F','640D','69AB','7B0B','7B4D','7BB0','7C28','93A8','96BC'],'sù':['3449','3504','3556','4147','4398','4954','5083','5850','5851','5919','8083','8085','8186','8736','9061','9917','345b','34d8','371a','375b','3a1e','3aa9','3b18','3bc8','3d0b','3d11','3d3c','40e4','43cb','447f','450e','46fe','50F3','55C9','5ACA','5BBF','612B','612C','619F','681C','69A1','6A15','6A5A','6B90','6CDD','6D2C','6D91','6EAF','6EB8','6EB9','6F5A','6F65','738A','73DF','749B','78BF','7C0C','7C9B','7C9F','7D20','7E24','7E2E','7F29','850C','85D7','89EB','8A34','8A8E','8B16','8BC9','8C21','8D9A','8E5C','901F','906B','906C','92C9','9A4C','9A95','9C50','9DEB','9E54'],'sùn':['613B','6F60']},'sh':{'shang':['88F3'],'shā':['5239','6740','6749','7300','7802','8531','383a','3c9a','3e3a','492c','4E77','5E34','644B','699D','6A27','6BBA','6BEE','6C99','715E','75E7','7C86','7D17','7EB1','838E','88DF','93A9','94E9','9AFF','9B66','9BCA','9BCB','9CA8'],'shāi':['3a44','3d13','7B5B','7BE9','7C1B','7C6D'],'shān':['4010','4630','5093','5220','5738','6247','6427','6749','6763','6766','6805','6919','8120','8222','9096','9490','3c11','3e91','522A','527C','57CF','59CD','59D7','5C71','5F61','633B','6A86','6F78','6F98','70FB','717D','72E6','73CA','7A47','7B18','7E3F','7FB4','7FB6','81BB','829F','82EB','886B','8DDA','8ED5','91E4','958A','9ADF'],'shāng':['5546','5892','4d70','4d7c','4F24','50B7','616F','6B87','6BA4','6E6F','6EF3','6F21','71B5','850F','87AA','89DE','89F4','8B2A','9B3A'],'shāo':['4230','8244','8571','9798','423e','5F30','634E','65D3','68A2','70E7','713C','71D2','7A0D','7B72','83A6','86F8','8F0E','9AFE','9BB9'],'shá':['5565'],'sháo':['5734','6753','3c88','3e1b','52FA','724A','73BF','7AF0','828D','82D5','97F6'],'shǎ':['50BB','510D','7E4C'],'shǎi':['8272','7E7A'],'shǎn':['3692','6671','7752','9583','9655','3a1b','3a8e','3d38','3d92','483e','50D0','63BA','647B','64A3','89A2','95EA','965C','965D','967F'],'shǎng':['6244','4E04','4E0A','57A7','664C','8CDE','8D18','8D4F','945C'],'shǎo':['4520','3aa2','449a','5C11'],'shà':['4209','8410','3c31','3c3c','3d64','474a','4b0a','503D','53A6','553C','55A2','5E39','5EC8','6B43','715E','7B91','7FE3','95AF','970E'],'shài':['6652','3b20','4d58','66EC','6BBA','95B7'],'shàn':['4120','4947','4982','4985','5103','5261','5355','5584','6247','6472','7985','9425','9490','38cc','38e3','3aa8','46b2','486a','4c47','4c49','4d2e','58A0','58A1','5B17','639E','64A3','64C5','657E','692B','6B5A','6C55','759D','78F0','79AA','7E55','7F2E','81B3','82EB','87EE','87FA','8A15','8B06','8B71','8BAA','8D0D','8D61','8D78','912F','91E4','928F','994D','9A38','9A9F','9C53','9C54','9CDD','9CE3'],'shàng':['7219','9284','4E04','4E0A','4EE9','51C3','59E0','5C19','5C1A','7DD4','7EF1'],'shào':['5372','7744','8891','43f4','467c','4b30','4F4B','52AD','54E8','5A0B','5C11','634E','6F72','7A0D','7D39','7DA4','7ECD','90B5','98B5'],'shē':['5953','5962','7572','6AA8','731E','8B47','8CD2','8CD6','8D4A'],'shēn':['3457','3565','4178','6552','7521','7527','7533','7712','7837','8398','8460','8593','9620','372a','3bb1','4bc2','4F38','4F81','53C2','53C3','53C5','547B','59BD','5A20','5C7E','5CF7','625F','67DB','6C20','6DF1','71CA','73C5','7C76','7C78','7CC2','7CDD','7D33','7EC5','88D1','8A37','8A75','8BDC','8EAB','926E','99EA','9CB9','9D62'],'shēng':['5347','6598','6607','7272','7525','8072','9629','9679','3c61','4cbc','4d24','52DD','544F','58F0','66FB','6B85','6CE9','6E66','713A','72CC','72D5','73C4','751F','7ACD','7ACF','7AD3','7AD4','7AD5','7AE1','7B19','82FC','924E','965E','9D7F','9F2A'],'shé':['6298','8675','9248','9366','9607','34ed','3d43','478c','4F58','63F2','820C','86C7','86E5','94CA','95CD'],'shéi':['8AB0','8C01'],'shén':['4c20','4EC0','698A','795E','9C30'],'shéng':['4c46','61B4','6E11','6E97','6FA0','7E04','7E69','7EF3','8B5D','9C66'],'shě':['6368','4b37','820D','820E'],'shěn':['9823','369e','36a8','3c02','3f95','54C2','5A76','5B38','5BA1','5BB7','5BC0','5BE9','5F1E','6C88','6E16','700B','77AB','77E4','77E7','89BE','8A20','8AD7','8B85','8C02','8C09','90A5','9B6B'],'shěng':['4687','5057','7701','35c2','3b90','3f33','3faa','405e','4abf','771A','7BB5'],'shè':['4005','4115','4713','4836','5399','6151','6351','6368','6442','6444','7044','8802','3d07','492e','538D','5C04','5F3D','61FE','651D','6B07','6B59','6D89','6E09','6EE0','793E','820D','820E','850E','8A2D','8BBE','8D66','97D8','9A07','9E9D'],'shèn':['6939','7606','7718','8124','8703','3c2e','3d55','41a6','4FBA','613C','614E','661A','6D81','6E17','6EF2','751A','760E','762E','80BE','80C2','814E','845A','92E0'],'shèng':['4789','5269','5270','5723','6660','6909','8056','8542','4E57','4E58','52DD','58AD','5D4A','665F','69BA','6A73','741E','76DB','80DC','8CB9','8CF8'],'shi':['5319','6B96'],'shī':['4324','4333','5653','5931','7345','7461','8479','8492','8671','8768','8784','8937','8979','43c9','45d0','467e','4d13','545E','5C38','5C4D','5E08','5E2B','65BD','6D49','6E64','6E7F','6EAE','6EBC','6FD5','72EE','7BB7','7D41','84CD','8A69','8BD7','90BF','917E','91C3','921F','9BF4','9C24','9CBA','9CF2','9CFE','9DB3','9E24'],'shí':['4096','4137','4215','5159','5341','5852','6642','8680','8755','9048','9250','9963','35b7','3d53','45a8','49b9','4cbd','4da1','4E06','4E6D','4EC0','4F66','55B0','57D8','5B9E','5B9F','5BD4','5BE6','5CD5','5D75','62FE','65F6','65F9','69AF','6E41','6E5C','6EA1','70BB','74E7','77F3','78A9','794F','7ACD','7AD5','7BD2','83B3','8BC6','8FBB','98DF','98E0','9B96','9C23','9CA5','9F2B','9F2D'],'shǐ':['5158','6981','9242','355c','3e6c','3e77','40a0','44a8','4E68','4F7F','53F2','59CB','5BA9','5C4E','77E2','7B36','8C55','99DB','9A76'],'shì':['4293','4931','5376','5469','6043','6220','6630','7176','7702','7757','8210','8213','8494','8906','8996','9002','9069','9230','9243','9919','9970','34be','353a','3c41','3ccf','3e37','3e5d','407a','43e1','46c8','47d7','492d','4a43','4b44','4E16','4E17','4E8A','4E8B','4ED5','4F3C','4F40','4F8D','519F','52BF','52E2','534B','53D3','55DC','566C','58EB','596D','5A9E','5B15','5BA4','5CD9','5D3C','5E02','5F0F','5F11','5F12','5FA5','623A','62ED','63D3','662F','67BE','67F9','67FF','6C0F','6FA8','70D2','770E','793A','793B','7B6E','7C2D','7C42','7FE8','83B3','87AB','884B','896B','89C6','8A4D','8A66','8A93','8ADF','8AE1','8B1A','8B58','8BD5','8C25','8CB0','8D33','8DE9','8EFE','8F7C','901D','907E','91C8','91CA','91CB','927D','92B4','92EC','94C8','98FE','991D','9C18','9F5B'],'shōu':['6536','39c3','53CE','834D'],'shǒu':['9996','374a','4b6d','57A8','5B88','624B','624C','63B1','824F'],'shòu':['3945','5900','6388','7363','7378','7626','8184','359f','46f5','517D','53D7','552E','58FD','5BFF','6DAD','72E9','75E9','7DAC','7EF6','93C9'],'shuā':['5237','5530','355e','9B9B'],'shuāi':['6454','8870','3ca4','5B48','7E17'],'shuān':['6813','9582','62F4','95E9'],'shuāng':['3560','4276','4744','7027','7935','432e','53CC','5B40','5B47','6B06','6CF7','6EDD','826D','96D9','971C','9A66','9AA6','9DDE','9E18','9E74'],'shuǎ':['800D'],'shuǎi':['7529'],'shuǎng':['6161','452a','45ee','4aea','587D','6A09','6F3A','723D','7E14','93EF','9A3B'],'shuà':['8A9C'],'shuài':['7387','48a6','535B','54B0','5E05','5E25','7E42','87C0'],'shuàn':['8168','49e0','6DAE'],'shuàng':['7040','39bc'],'shuí':['813D','8AB0'],'shuǐ':['6C34','6C35','6C3A'],'shuì':['3968','7761','7793','7971','3f77','4b3d','4b68','4ce0','5E28','6D97','6D9A','7A05','7A0E','88DE','8AAA','8AAC','8BF4'],'shuō':['54FE','8AAA','8AAC','8BF4'],'shuò':['4025','5981','6420','6570','6578','6714','7361','7855','9399','9460','3bb6','407b','5E25','63F1','69CA','6B36','70C1','720D','77DF','78A9','7BBE','84B4','94C4'],'shū':['3450','5010','5715','6292','6445','6474','6504','6778','8212','3e21','3f21','4a39','4c59','4E66','500F','53D4','59DD','5C17','66F8','67A2','68B3','6A1E','6A7E','6B8A','6BB3','6BF9','6DD1','702D','758B','758E','758F','794B','7D13','7D80','7EBE','83FD','852C','85F2','8E08','8ED7','8F38','8F93','964E','9D68'],'shú':['3494','6393','7102','8961','3bee','40de','4d30','57F1','587E','5B70','719F','74B9','79EB','866A','8D16','8D4E','8DFE','9E00'],'shǔ':['4455','4796','6570','6578','6691','7659','8700','8834','8969','9483','3eff','476a','5A4C','5C5E','5C6C','66D9','6F7B','7CEC','7F72','85A5','85AF','97E3','9C6A','9C70','9ECD','9F20','9F21'],'shǔn':['542E','63D7','696F','8CF0'],'shù':['3710','4240','4624','4739','4742','5135','5885','6055','6352','6570','6578','6811','8167','8481','8853','9265','9330','36f8','384f','38fd','3af9','3d42','3d96','3dc2','3f70','3f81','483c','489e','48a4','4a71','4E28','4FB8','516A','51C1','5C0C','5EB6','5EBB','620D','672F','675F','6A1C','6A39','6CAD','6F31','6F44','6F8D','6FD6','7AD6','7AEA','7D49','7FDB','88CB','8C4E','8FF0','93E3','9D90'],'shùn':['3967','4022','4035','8563','9806','445e','4d04','6A53','779A','77AC','821C','987A','9B0A']},'t':{'ta':['6C93'],'tae':['8968'],'tā':['4308','5979','6135','7260','7942','9247','3bda','4ED6','584C','5B83','79A2','891F','8DBF','91F6','95E7'],'tāi':['56FC','576E','5B61','80CE','81FA','82D4'],'tān':['3631','4459','5574','6039','6524','7058','7671','8211','3a0f','3ce9','3d02','3d45','41b1','574D','62A9','644A','64F9','6EE9','762B','7DC2','8CAA','8D2A'],'tāng':['4800','5621','5763','8025','9557','34e5','47b6','528F','6C64','6E6F','7FB0','876A','8D9F','8E5A','93DC','940B','94F4','97BA','9F1E'],'tāo':['4231','5932','6146','7118','9955','38e0','3ae6','3e57','401e','446c','493e','53E8','5ACD','5E4D','5F22','638F','642F','69C4','6D9B','6ED4','6FE4','71FE','746B','7D5B','7E1A','7E27','7EE6','7FE2','872A','8A5C','8B1F','8F41','97B1','97DC','97EC','98F8'],'tái':['3497','3675','4453','5113','38cd','3b03','3dd8','3e00','421a','53F0','576E','5B2F','62AC','64E1','65F2','67B1','6AAF','70B1','70B2','79EE','7C49','81FA','82D4','83ED','85B9','8DC6','90B0','98B1','99D8','9A80','9B90','9C90'],'tán':['4261','5013','6619','6983','8983','9188','9414','9561','9924','3c9c','3dcb','3f4e','3f51','40ea','42a4','454a','575B','58B0','58B5','58C7','58DC','5A52','5F39','5F3E','5F48','619B','66C7','6A5D','6A80','6F6D','6FB9','75F0','7F48','7F4E','85EB','8AC7','8B5A','8C08','8C2D','8C9A','90EF','91B0','931F','952C','9A28','9A54','9DE4','9EEE'],'táng':['3676','4305','5510','5802','5858','8185','8797','9395','9557','9933','9939','9944','9967','347d','370d','3b7b','3ca5','3f3a','416f','424e','454b','48d8','49dc','508F','557A','642A','68E0','69B6','6A18','6A56','6E8F','6F1F','717B','746D','78C4','799F','7BD6','7CC3','7CD6','7CDB','819B','84CE','859A','87B3','8D6F','8E3C','910C','91A3','93DC','95DB','969A','9DB6'],'táo':['5555','6843','7979','8404','9003','9184','9676','9780','9789','9940','413b','46cc','46ec','4b1e','530B','54B7','68BC','6AAE','6D2E','6DD8','6FE4','71FE','7DAF','7EF9','88EA','8FEF','92FE','932D','99E3','9A0A','9F17'],'tǎ':['5854','5896','6999','35f3','3e9a','6E9A','736D','737A','939D','9C28','9CCE'],'tǎi':['3606'],'tǎn':['4994','5766','8892','8962','9193','3adc','3cad','43d9','47a1','55FF','5FD0','61B3','61BB','6BEF','74AE','83FC','88E7','8D09','926D','94BD'],'tǎng':['3489','5018','5052','6203','7223','9482','3f12','3fe9','4F16','50A5','513B','5E11','66ED','6DCC','77D8','8EBA','93B2','954B'],'tǎo':['46af','4d5a','8A0E','8BA8'],'tà':['3493','4233','4347','4393','5683','6428','9062','9314','9389','9449','9618','36e5','38db','38f5','39fa','3b7c','3bd3','3ce0','3e7a','3ff9','40bf','420b','435d','445c','447d','44e0','471a','4cf4','4d6c','4d80','4d81','4EA3','509D','56BA','5D09','62D3','631E','64BB','69BB','6A7D','6BFE','6C93','6DBE','6EBB','6F2F','6FBE','6FCC','72E7','737A','7F8D','8ABB','8B76','8E0F','8E4B','8E79','8E82','8EA2','8FD6','905D','95D2','95E5','95FC','979C','97B3','9B99','9C28','9F96','9F98'],'tài':['3477','5933','6001','8226','9226','396d','48ed','51AD','592A','5FF2','614B','6C70','6CF0','6E99','71E4','7C8F','80BD','915E','949B'],'tàn':['4716','5606','36f6','443a','45ca','53F9','57EE','63A2','6B4E','6E60','70AD','78B3'],'tàng':['6465','47d6','70EB','71D9','8D9F','940B'],'tào':['3690','5957'],'tēng':['71A5','81AF','9F1F'],'téng':['4485','4568','8645','482e','4c8d','4ca2','512F','5E50','6ED5','6F1B','75BC','7C50','7C58','7E22','817E','85E4','87A3','8A8A','8B04','99E6','9A30','9A63','9C27'],'tè':['3942','7279','8126','39f9','5FD1','5FD2','86AE','87A3','87D8','8CA3','92F1','94FD','9D0F'],'tiān':['4016','5172','5929','3b32','42ec','46b6','500E','5A56','5C47','6C97','6DFB','915F','975D','9EC7'],'tiāo':['6311','7967','3b38','4F7B','5EA3','604C','65EB','804E','9BA1'],'tián':['4852','4858','4956','5861','7530','7551','7560','9617','39c2','445a','47e7','49c3','586B','606C','6CBA','6E49','74B3','751B','751C','754B','76F7','78B5','78CC','7AB4','80CB','83FE','923F','94BF','95D0','9D2B','9DC6'],'tiáo':['4492','6761','7952','8280','8414','8729','9797','37d8','45ba','47ed','4a66','4bfe','4c54','5CA7','5CB9','689D','6A24','7B24','82D5','87A9','8ABF','8C03','8D92','8FE2','929A','92DA','93A5','94EB','9AEB','9C37','9CA6','9F60','9F86'],'tiǎn':['3649','4804','7753','8146','8214','9766','9902','35ad','394f','413c','413d','440c','553A','5FDD','60BF','666A','6B84','6DDF','75F6','89A5','89CD','8CDF'],'tiǎo':['4837','6311','6640','6713','3e20','5B25','5BA8','65A2','7A95','8A82'],'tiàn':['3401','7154','7471','3b87','3dba','63AD','821A'],'tiào':['6713','8101','773A','7AB1','7C9C','7CF6','7D69','899C','8DF3'],'tiē':['6017','5E16','841C','8CBC','8D34'],'tié':['4a5e'],'tiě':['9244','9421','9435','496b','50E3','5E16','94C1','9A56'],'tiè':['4d34','4d7f','5E16','86C8','98FB','992E'],'tī':['3538','4599','5254','9511','48b0','4d18','63A6','68AF','710D','8E22','92BB','9DC8','9DC9'],'tīng':['5385','5391','8013','8074','9793','34c5','42fc','4bd5','539B','542C','5E81','5EF0','5EF3','686F','6C40','70C3','70F4','807C','807D','827C'],'tí':['3592','3857','4160','4536','5397','7445','7994','8351','9046','9357','9684','9898','38e2','46a3','46f1','4a11','4b2b','4b3e','4c71','504D','557C','55C1','5A82','5A9E','5D39','60FF','63D0','6F3D','73F6','777C','78AE','79B5','7A0A','7D88','7DF9','7EE8','7F07','7F64','82D0','855B','876D','8DA7','8E44','8E4F','918D','984C','9A20','9BB7','9BF7','9CC0','9D3A','9D5C','9D97','9D99','9E48'],'tíng':['8064','8476','8713','9092','9706','3e76','3f17','45f4','4c53','4EAD','505C','5A77','5D49','5EAD','5EF7','673E','695F','69B3','6E1F','7B73','7D8E','839B','874F','8AEA','95AE','9BC5','9F2E'],'tǐ':['4321','4a86','4F53','632E','8EB0','8EC6','9AB5','9AD4'],'tǐng':['4990','5722','6883','8121','8247','9832','414d','4d7a','4FB9','633A','6D8F','70F6','73FD','753C','8A94','92CC','94E4','988B'],'tì':['4657','5243','5694','6090','6711','8599','8905','9016','9037','35e3','3b31','3be9','43ae','4bdc','4d8f','4d91','4FE4','4FF6','501C','568F','5C49','5C5C','608C','60D5','60D6','63E5','66FF','6B52','6BA2','6D95','7C4A','7D88','7EE8','88FC','8FCF','92BB','941F','9AE2','9AF0','9B00','9B04','9D5C'],'tìng':['6883','807D'],'tōng':['55F5','6A0B','70B5','72EA','75CC','84EA','901A'],'tōu':['5077','5078','5A7E','5AAE'],'tóng':['3809','4088','6723','6850','7867','9256','9275','9285','9907','383d','390f','3e17','3f27','3f3f','419a','4bb5','4ccb','4d00','4db1','4EDD','4F5F','50EE','52ED','540C','54C3','578C','5CC2','5CD2','5CDD','5E9D','5F64','664D','66C8','6A66','6C03','6D75','6F7C','70D4','70D5','71D1','721E','729D','735E','772E','77B3','783C','79F1','7A5C','7AE5','7CA1','7D67','7F7F','81A7','833C','856B','8A77','8FF5','916E','94DC','9BA6','9C96','9F28'],'tóu':['4571','5744','5934','6295','7250','9158','34f1','388f','4d49','4EA0','724F','982D','9AB0'],'tǒng':['6345','6876','36da','38da','3a8c','59DB','7B52','7B69','7D71','7D82','7EDF'],'tǒu':['8623','9204','3a97','3cc6','3f25','46b5','4c4f','59B5','5AAE','7D0F','94AD','9EC8'],'tòng':['6078','6185','8633','8855','540C','615F','75DB','901A'],'tòu':['35a3','47ac','47dd','65A2','900F'],'tuān':['7153','474e','4d4a','4d4e','6E4D','732F','8C92'],'tuán':['5278','5718','6171','6476','3a5b','429c','56E2','56E3','629F','69EB','6AB2','6F19','7CF0','93C4','9DFB'],'tuǎn':['7583','471d','4d6f','9ED7'],'tuàn':['8916','5F56','6E6A'],'tuī':['379c','63A8','84F7','85EC'],'tuí':['3888','3891','4003','8608','9839','9893','3fd7','416a','50D3','5F1A','6A54','7A68','8E6A','96A4','983A','983D','9B4B'],'tuǐ':['3782','3c63','3fbc','3fc9','4FC0','817F','8E46','9ABD'],'tuì':['3946','8715','9000','3ddf','5A27','717A','86FB','892A','99FE'],'tun':['9968','98E9'],'tuō':['5483','5836','6258','6265','6329','8131','9966','470f','4d31','4E47','4F82','4FBB','62D5','62D6','635D','6C51','6CB0','6DB6','77FA','812B','88A5','8A17','8A51','8BAC','99B2','9B60'],'tuó':['4850','5768','7823','7824','8889','9161','9247','9248','9624','9640','9641','3e30','3e31','3f20','3f83','436b','4a91','4b7e','4c3f','4F57','5CAE','67C1','69D6','6A50','6CB1','72CF','78A2','7D3D','8DCE','8FF1','91F6','94CA','98E5','99B1','99C4','99DD','99DE','9A28','9A52','9A6E','9A7C','9B80','9D15','9E35','9F09','9F0D','9F27'],'tuǒ':['6955','37ce','44d5','59A5','5AA0','5AF7','5EB9','5F75','64B1','692D','6A62','9C16','9D4E'],'tuò':['8600','553E','62D3','67DD','6BE4','6BFB','7BA8','7C5C','841A','88A5','8DC5','9A5D'],'tū':['5817','6378','8456','37ee','3eec','46e2','47ae','51F8','5B8A','5D80','6D8B','75DC','79BF','79C3','7A81','8FCC','92F5','9D5A'],'tūn':['5451','3b3f','541E','554D','564B','65FD','66BE','671C','6D92'],'tú':['4177','4598','4808','4905','5715','5716','5717','5857','6022','6348','7479','9014','9174','3b78','3ecc','3ee0','3eef','48c4','48dd','4a63','4cdc','56F3','56FE','5C60','5CF9','5D5E','5EA9','5EDC','5F92','63EC','688C','6D82','6E65','6F73','760F','7A0C','7B61','816F','837C','83B5','83DF','84A4','8DFF','922F','934E','999F','99FC','9D5A','9D9F','9DCB','9DF5','9F35'],'tún':['9715','3a54','3e60','3f0a','56E4','5C6F','5FF3','62F5','81C0','81CB','829A','8C58','8C5A','8ED8','9B68','9C80'],'tǔ':['5410','5721','550B','571F','6C62','91F7','948D'],'tǔn':['3594','6C3D','757D'],'tù':['5154','5410','514E','580D','83B5','83DF','8FCC','9D75'],'tùn':['8781','39f7','892A']},'w':{'wa':['54C7'],'wā':['6316','6432','6528','7556','8049','4a1f','4bc9','4d77','52B8','54C7','576C','5A32','5AA7','5C72','6D3C','6E9B','6F25','7A75','7AAA','86D9','9F03'],'wāi':['359e','35cf','4d1c','6B6A'],'wān':['3624','5846','7063','460e','4E5B','525C','58EA','5E35','5F2F','5F4E','6E7E','6F6B','873F','8C4C'],'wāng':['509F','5C22','5C23','5C29','5C2A','5C2B','6C6A'],'wá':['5A03'],'wán':['3774','5213','7413','8284','9811','4bc8','4E38','5A60','5B8C','5C8F','628F','6C4D','70F7','73A9','7B02','7D08','7EA8','987D'],'wáng':['5166','4EA1','4EBE','4EFC','5F7A','738B','869F'],'wǎ':['5493','39da','3f18','4F64','74E6','74E9','74F2','90B7'],'wǎi':['5D34'],'wǎn':['3736','4471','4779','5007','5558','6669','6900','7579','7696','7755','7897','8115','8118','8416','8442','9794','3f5c','3ff8','414b','45a4','45d5','463c','46f7','4a4a','4cc3','57E6','5A49','5B9B','60CB','633D','665A','667C','689A','6DB4','742C','76CC','76F6','774C','7DA9','7DB0','7EFE','839E','83C0','8F13','909C','92C4','92D4','933D'],'wǎng':['6680','6789','7007','7139','8744','34c1','3cbf','3cf9','3d0f','42c4','42de','44bd','4c23','5F80','5F83','5F8D','5FF9','60D8','68E2','7DB2','7F51','7F53','7F54','7F56','81E6','83F5','86E7','8AB7','8F1E','8F8B','8FEC','9B4D'],'wà':['8183','436a','43b3','46b4','481a','55E2','74E6','817D','889C','896A','97C8','97E4'],'wài':['5916','483f','4d90'],'wàn':['4951','5350','6365','6764','8155','8513','3e18','46c3','4bdb','4E07','4EF4','534D','5FE8','7D84','7FEB','842C','87C3','8CA6','8D0E','8E20','93AB'],'wàng':['4911','5984','6722','5F83','5FD8','65FA','671B','83A3','8FCB'],'wēi':['3552','3657','5371','6104','6933','6972','7140','7168','7179','8468','8473','8587','9036','9687','9688','364e','37ea','38e6','3b83','42ff','4acb','4d27','504E','55B4','5A01','5A81','5A99','5D34','5DB6','5DCD','5FAE','63CB','63FB','6E28','6EA6','6EBE','70D3','71F0','78A8','7E05','875B','89A3','9C03','9C04','9CC2'],'wēn':['6637','7465','7783','8570','3b08','3f14','586D','6B9F','6E29','6EAB','761F','8C71','8F3C','8F40','8F92','93BE','99A7','9C1B','9C2E','9CC1'],'wēng':['4235','5963','8789','9393','9710','3bac','3e8b','4a7a','4c75','55E1','5D61','6EC3','7FC1','9DB2','9E5F'],'wéi':['4260','4705','4750','4969','5729','6845','7022','7232','7653','9055','9180','38f2','444a','453a','465f','49e6','4E3A','552F','56D7','56F2','56F4','570D','5D6C','5E0F','5E37','5E43','60DF','6B08','6CA9','6D08','6DA0','6E4B','6F4D','6F59','6F7F','6FF0','6FFB','70BA','741F','77C0','7DAD','7EF4','89B9','8FDD','912C','934F','95C8','95F1','973A','97CB','97E6','9BA0','9D91'],'wén':['4607','6587','7086','7612','8689','43b9','43bd','4c1a','739F','73F3','741D','74BA','7D0B','7EB9','805E','82A0','868A','87A1','87C1','922B','95BA','95BF','95C5','95E6','95FB','960C','96EF','99BC','99C7','9B70','9CFC','9D0D','9D16','9F24'],'wěi':['3590','3654','3787','3791','3815','4227','4374','4377','4794','5049','5130','6107','6364','6596','6690','6932','7152','7325','8172','8249','8371','8466','8624','8732','9361','9697','9820','36f1','3a0a','3b19','3b4f','3c6c','40ec','41fb','49b1','4a98','4b3f','4d4b','4EB9','4F1F','4F2A','50DE','55A1','58DD','59D4','5A13','5BEA','5C3E','5C57','5CD7','5D23','5D54','5FAB','68B6','6D27','6D58','709C','73AE','744B','75CF','75FF','784A','78C8','7DEF','7EAC','829B','82C7','840E','848D','84F6','853F','85B3','8AC9','8BFF','8E13','97D1','97D9','97E1','97EA','98B9','9AA9','9AAA','9AAB','9BAA','9C94'],'wěn':['3767','4407','5461','8117','35c3','499f','520E','543B','545A','687D','7A33','7A4F','7A69','7D0A','80B3'],'wěng':['3622','3732','4425','5855','7788','3e59','52DC','651A','66A1','6D7B','806C','84CA'],'wèi':['4619','5473','5582','6170','7232','7859','8589','8636','9317','9728','9927','9935','395c','39a3','3dc9','428a','45fd','467f','471c','487a','4a8b','4b11','4b73','4bb9','4c81','4d73','4E3A','4EB9','4F4D','507D','536B','589B','5AA6','5B12','5C09','5FBB','61C0','672A','6E2D','70BA','71AD','729A','72A9','732C','748F','754F','78D1','7A4C','7DED','7F7B','80C3','82FF','83CB','851A','85EF','873C','875F','87B1','885B','885E','893D','8B02','8B86','8B8F','8C13','8D00','8E97','8E9B','8ECE','8F4A','93CF','9B4F','9B87','9CDA'],'wèn':['3848','6286','6435','7193','4F06','554F','598F','63FE','6C76','6E02','74BA','7D0B','805E','83AC','95EE'],'wèng':['7515','8579','74EE','7F4B','9F46'],'wō':['5529','5594','7327','8435','8717','8778','3e7b','502D','631D','64BE','6DA1','6DB9','6E26','7A9D','7AA9','7B7D','83B4','8E12'],'wǒ':['6211','6370','39b1','39f4','40ba','4c00','5A50'],'wò':['4011','5053','5367','6943','7912','381b','3c67','404a','480e','4bb8','5E44','637E','63E1','65A1','6C83','6E25','6FE3','786A','809F','81E5','9F77','9F8C'],'wū':['4867','6747','8790','9114','9653','3ba7','459a','4E4C','526D','545C','55DA','572C','5A89','5C4B','5DEB','5F19','65BC','6B4D','6C59','6C5A','6C61','6D3F','70CF','7A8F','7BBC','815B','8AA3','8BEC','90AC','93A2','94A8','9C1E','9D2E'],'wú':['4251','4362','5166','5433','5434','5449','5514','7121','7491','7966','7991','8323','8381','8708','3dfb','3e73','3ecd','44ca','499c','4ad3','4b8f','4FC9','543E','5A2A','5CFF','65E0','68A7','6BCB','6D16','6D6F','73F8','77B4','829C','856A','87F1','8A88','8B55','90DA','92D8','92D9','94FB','9BC3','9D50','9DE1','9E40','9E8C','9F2F'],'wǔ':['3405','3444','3487','4489','5035','5348','6003','6342','6440','7466','7512','7894','9125','3b33','3d72','47fc','4cc7','4E44','4E94','4EF5','4F0D','4FAE','511B','554E','59A9','5A2C','5AF5','5D68','5E91','5EE1','5FE4','61AE','6A46','6B66','6F55','727E','739D','73F7','821E','8E8C','8FD5','933B','9D61','9E49'],'wù':['3433','3854','4441','4711','5140','5641','5862','5966','6076','6264','6544','6664','7110','7183','7269','8601','9622','9696','9727','9770','3f7e','40d6','43b8','46e9','498d','4a01','4cf1','4E4C','52A1','52D9','52FF','537C','575E','57E1','5A7A','5BE4','5C7C','5C89','5D4D','5FE2','609E','609F','60AA','60AE','60E1','620A','65FF','674C','6C95','6EA9','70CF','715F','75E6','77F9','7AB9','7C85','82B4','84E9','8AA4','8BEF','901C','907B','92C8','96FE','971A','9A16','9A9B','9C1E','9DA9','9E5C','9F40']},'x':{'xiā':['3520','5084','5477','7175','8766','9595','3c28','3c30','480d','75A8','778E','867E','935C','98AC','9C15'],'xiān':['4085','4133','4273','5148','5615','6380','6774','7066','7946','8973','9170','9341','9528','353e','3c39','3c94','3dff','3e1d','3ea4','3fbe','3fcc','418e','42b1','4a42','4bed','4bf9','4d4c','4ED9','4EDA','50CA','50F2','597E','5B10','5B45','5C20','5C73','5EEF','5FFA','61B8','66B9','67AE','6C19','6F96','73D7','79C8','7C7C','7E4A','7E8E','7E96','7EA4','82EE','83B6','84D2','859F','893C','8A2E','8DF9','8E6E','8E9A','929B','94E6','97EF','97F1','99A6','9BAE','9C7B','9C9C'],'xiāng':['8297','8459','8944','9109','9115','9472','9576','9999','342e','4b15','4E61','53A2','554C','5EC2','5FC0','6B00','6E58','74D6','76F8','7BB1','7DD7','7E95','7F03','858C','90F7','910A','9A64','9AA7','9C5C','9E98'],'xiāo':['4303','4384','5610','5635','6077','7071','7072','7107','7362','7863','8427','8437','8648','8653','8828','9500','9704','357a','36a0','3a4b','3aa3','3c96','3e72','3e92','4a2d','4b18','4d1b','524A','547A','54D3','554B','560B','56A3','56BB','56C2','5A4B','5BAF','5BB5','5EA8','5F47','61A2','64A8','67AD','67B5','689F','6AF9','6B4A','6BCA','6D88','6D8D','6F47','6F5A','701F','70CB','75DA','75DF','785D','7A58','7A99','7BAB','7C18','7C2B','7D83','7EE1','81AE','856D','85C3','86F8','87CF','87F0','8E03','900D','92B7','9A4D','9A81','9AC7','9B48','9D1E','9E2E'],'xiá':['3621','4596','4625','5323','6433','6687','7455','7856','7864','8578','9050','35c7','3f60','458e','46c5','4a97','4ad7','4FA0','4FE0','51BE','5CE1','5CFD','656E','67D9','6E8A','70A0','70DA','72CE','72ED','72F9','73E8','78AC','78CD','796B','7B1A','7B6A','7E16','7FC8','821D','823A','8D6E','8F44','8F96','938B','965D','971E','9A22','9B7B','9EE0'],'xián':['3605','3849','4554','4768','5563','6326','7509','7647','7925','8237','8474','8854','8858','9466','9591','9592','360b','36fe','38ba','3b79','3bad','3bd7','3c0a','3cc4','3ced','3d6a','49a5','4c97','54B8','550C','5A34','5A39','5A71','5ACC','5AFA','5AFB','5F26','61AA','648F','6D8E','71C5','75C3','75EB','764E','77AF','7D43','7FAC','80D8','85D6','86BF','86DD','8AF4','8CE2','8D12','8D24','8F31','918E','929C','95F2','9DF3','9DF4','9DFC','9E47','9E79'],'xiáng':['4517','4736','5905','6819','7965','37c4','4F6D','5EA0','73E6','7D74','7FD4','8A73','8BE6','8DED','964D'],'xiáo':['36a3','3b35','3b81','449d','47c1','5B78','6D28','6DC6','7B05','8A24','8AB5','90E9'],'xiǎn':['4606','4722','6507','7303','7381','7992','8706','9291','9669','9855','39e5','3aeb','3b0e','3b60','3d8d','3fc5','45fe','469a','48be','496a','49cb','51BC','59FA','5C1F','5D04','5DAE','5E70','641F','663E','6AF6','6BE8','6D17','70CD','71F9','72DD','736B','736E','766C','7B45','7BB2','85D3','861A','86AC','8D7B','8DE3','934C','94E3','967A','96AA','97C5','986F','9BAE','9C9C','9F38','9F74'],'xiǎng':['4291','6651','9909','9957','9977','35fd','441f','45ae','4EAB','54CD','5D91','60F3','97FF','98E8','995F','9B9D','9BD7','9C76','9C9E'],'xiǎo':['4495','4975','6653','6681','5C0F','66C9','76A2','7B39','7B71','7B7F','7BE0','8B0F'],'xià':['3648','3664','5413','5687','5737','5913','7771','8290','3c3a','4E05','4E0B','53A6','590F','5EC8','61D7','68BA','6B31','759C','7F45','93BC','93EC','9DB7'],'xiàn':['3991','3993','4042','4404','4679','4998','7017','8706','9650','9665','9677','9730','9921','9985','387e','3a87','3b17','3e8c','3f49','40f1','40f8','426f','43f9','493c','49df','49ee','4a18','4a37','4c64','4d47','4d9f','4F23','4FD4','50E9','50F4','53BF','549E','54EF','57B7','59ED','5A0A','5A28','5BAA','5C98','5CF4','61B2','648A','665B','6A4C','6D80','732E','737B','73B0','73FE','770C','774D','7CAF','7D64','7DAB','7DDA','7E23','7EBF','7F10','7FA1','7FA8','817A','81D4','81FD','82CB','83A7','898B','8AA2','8C4F','8F5E','92E7','930E','9EB2'],'xiàng':['5411','6066','8683','8801','8950','9805','9879','37df','48bd','49b3','4d02','50CF','52E8','56AE','5DF7','66CF','6A61','6F52','76F8','7A25','842B','87D3','8C61','940C','95C0','95C2','9C4C'],'xiào':['3505','4270','4567','5578','5628','6054','6548','6569','6586','6821','8096','8644','35db','390a','3d7f','42a5','4FF2','509A','52B9','54B2','54EE','562F','5B5D','6B57','6EE7','71BD','7B11','85A2','8A9F','8E0D','97A9'],'xiē':['6954','7332','8909','35e8','3a1d','3c54','3f9a','4E9B','55CB','63F3','6B47','874E','880D'],'xié':['3416','3666','4018','4511','4575','4771','4861','4996','5055','5354','6136','6140','7181','8105','8107','8125','8449','8762','9821','9889','35bf','365d','38b5','395f','3a19','3a66','3a6a','3b68','464e','467d','4a64','52A6','52F0','534F','53F6','57A5','594A','604A','62F9','631F','633E','641A','643A','64B7','64D5','64F7','651C','659C','65EA','71F2','744E','7C7A','7D5C','7D8A','7E88','7F2C','7FD3','80C1','810B','818E','887A','896D','8AE7','8C10','90AA','978B','97B5','9BAD','9C91','9FA4'],'xiě':['3550','4971','5199','8840','374d','497e','51A9','5BEB','85DB','880F'],'xiè':['3591','3670','3792','3795','4263','4548','5070','5368','5378','5911','7009','7023','7215','7944','8878','9082','34a0','34d4','350e','385c','38ef','38f0','39aa','3c14','3c21','3ce6','3cff','3d2c','3d2e','3d3d','3e09','3f4a','404b','424f','429d','464a','465d','46b8','498f','4a67','4aa5','4c92','4d66','4EB5','4F33','586E','598E','5A0E','5A9F','5C51','5C5F','5C67','5DB0','5EE8','5FA2','61C8','65BA','66AC','68B0','698D','69AD','6CC4','6CFB','6D29','6E2B','6FA5','707A','710E','71EE','736C','75B6','79BC','7CCF','7D32','7D4F','7D6C','7DE4','7EC1','7F37','85A4','87F9','880F','893B','89E3','89E7','8B1D','8C22','8E9E','8EA0','97A2','97F0','99F4','9AB1','9F58','9F65'],'xiōng':['5144','5147','5302','5308','342b','36be','51F6','54C5','5FF7','605F','6C79','6D36','80F7','80F8','828E','8A29','8A7E','8BBB','8CEF'],'xióng':['49fa','718A','8D68','96C4'],'xiǒng':['713D'],'xiòng':['5910','657B','8A57','8BC7'],'xiū':['4430','8129','8320','9380','9948','9990','3c57','3cdc','3d7b','3e4b','3f8b','43eb','45db','486d','4F11','4FE2','4FEE','54BB','5EA5','6A07','6F43','70CC','7F9E','81F9','84DA','84E8','8C85','929D','93C5','9AE4','9AF9','9BB4','9D42','9E3A'],'xiǔ':['3c59','5BBF','673D','6EEB','7CD4','7D87'],'xiù':['7407','7493','8791','8896','9508','35dc','55C5','5BBF','5CAB','5CC0','6BA0','6EB4','73DB','79C0','7D89','7E4D','7E61','7EE3','81ED','81F0','890E','890F','92B9','93E5','93FD','9F45'],'xī':['3543','3567','3680','4080','4405','4416','4592','4675','5092','5365','5380','5438','5915','6037','6038','6053','6089','6095','6271','6278','6614','6670','6673','6790','6878','7101','7108','7155','7184','7188','7199','7214','7280','7604','7699','7852','7902','8383','8725','8785','8786','8787','8835','8980','9145','9521','34fe','35e9','35ed','360a','36d3','36eb','36ed','370e','372f','3aa7','3b1b','3ba9','3bd5','3c3f','3c46','3c64','3cb8','3d14','3d27','3d89','3ea3','3fb7','3ffd','406f','43e9','448a','45b7','46ca','46e5','4b52','4cf6','4d8b','4FD9','50C1','50D6','516E','51DE','550F','553D','563B','564F','56B1','595A','5A2D','5A90','5B06','5B09','5C56','5D60','5DC2','5DC7','5E0C','5F86','5F94','5FAF','5FDA','606F','60C1','60DC','637F','665E','66E6','68F2','69BD','6A28','6A40','6B37','6B56','6B59','6C25','6C50','6D60','6DC5','6E13','6EAA','6F5D','70EF','71B9','71BA','71BB','71E8','727A','72A0','72A7','740B','74D7','75A7','76FB','774E','77A6','77FD','78CE','7A00','7A78','7AB8','7C9E','7E18','7E65','7FB2','7FD5','819D','81C8','81D8','823E','831C','83E5','84B5','879D','87CB','88FC','897F','89F9','89FD','89FF','8B46','8C40','8C68','8C6F','8C95','8D65','8E4A','909C','90CB','90D7','91AF','932B','93ED','95DF','96B5','997B','9A31','9A68','9BD1','9D57','9ECA','9F37'],'xīn':['4723','5677','6615','7098','8398','36d9','3b62','417d','4FFD','515F','567A','59A1','5B1C','5EDE','5FC3','5FC4','5FFB','60DE','65B0','6B23','6B46','709B','76FA','82AF','85AA','8A22','8F9B','90A4','920A','92C5','946B','950C','99A8'],'xīng':['5174','7329','7446','8165','8208','365a','3de3','40cf','455f','45cc','57B6','60FA','661F','66D0','714B','76A8','7BC2','86F5','89EA','89F2','8B03','935F','99AB','9A02','9A8D','9B8F','9BF9'],'xí':['3512','3804','4481','7365','8582','8777','8972','39bb','3a57','3f6f','3fc7','43ee','46ab','4ae3','4E60','5AB3','5D8D','5E2D','68E4','693A','69E2','6A84','6B2F','6F1D','711F','712C','761C','7FD2','84A0','84C6','88AD','89A1','89CB','8B35','8D98','932B','93B4','96B0','972B','98C1','9A3D','9C3C','9CDB'],'xín':['3726','6533','8951','9129','9414','9561','36af','5C0B','677A','6A33'],'xíng':['3429','5211','5753','8365','9276','9292','9498','9649','9658','9933','9939','9967','34dd','38dc','3f1b','48c6','492f','4F80','54D8','578B','5F62','6D10','6ECE','6FDA','6FF4','70C6','784E','80FB','884C','88C4','90A2','90C9','92DE','94CF'],'xǐ':['4884','6198','6199','8448','8478','9269','9291','4E74','531A','559C','56CD','5C63','5F99','657C','66BF','67B2','6A72','6D17','6F07','72F6','73BA','74BD','77D6','79A7','7C01','7E30','7E9A','84F0','87E2','8AF0','8E5D','8EA7','94E3','973C','9C13','9C5A'],'xǐn':['4F08'],'xǐng':['7701','7772','9192','376d','3a18','4cd9','64E4','6E3B'],'xì':['3476','3938','4701','5338','6044','6231','6232','6461','7182','7294','8203','8204','8669','9474','9699','9969','367e','369b','38df','39a6','3b61','3c25','3e0d','400c','422a','42a0','443c','44c7','49cd','4a33','4b23','4b8e','4caa','4d71','4FC2','534C','54A5','55BA','5C43','5C53','5C6D','5FE5','602C','620F','622F','691E','6ECA','6F5F','6F99','78F6','798A','7A27','7CFB','7D30','7D8C','7E4B','7E6B','7EC6','7EE4','7FD6','80B8','80B9','856E','89A4','8B11','8D69','90E4','910E','91F3','91F8','938E','960B','969F','993C','9B29','9ED6','9F42'],'xìn':['3430','3524','4496','4717','5342','7161','8845','9620','9856','36db','3b44','3f99','46b1','46e8','4F29','4FE1','56DF','59A1','5B5E','712E','812A','81B7','820B','82AF','8A2B','8ED0','91C1','99B8'],'xìng':['4044','4094','5016','5174','6027','8208','8347','8395','34d1','3f2c','44f7','46ed','4c22','59D3','5A5E','5B39','5E78','60BB','61EC','674F','6DAC','7DC8','81D6','8E01'],'xu':['84FF'],'xuān':['3741','4054','4699','5107','5405','5847','5864','6103','6645','6684','7156','7444','8431','8432','8610','8756','8809','9379','34e9','39a5','3a4a','3ef9','41ad','46ad','4ce6','4F61','55A7','58CE','5A97','5B1B','5BA3','5F32','610B','63CE','660D','688B','714A','777B','77CE','79A4','79AB','7BAE','7FE7','7FFE','857F','85FC','8AE0','8AFC','8B5E','8C16','8ED2','8F69','92D7','9C1A','9DB1'],'xuán':['3623','4062','7384','7401','7487','8701','9084','352f','3cec','3e61','45e0','4b84','4c82','4cbb','4F2D','59B6','5AD9','60AC','61F8','65CB','66B6','6A88','6F29','73B9','74BF','7E23','8AB8'],'xuǎn':['3535','4823','7663','9009','9078','39cb','3f8c','54BA','70DC','766C'],'xuàn':['4357','5238','6030','6621','6965','6966','7729','7734','8519','8852','9249','9799','39e6','3bc0','3cd9','400f','40e0','437b','476e','49ce','4a59','4a70','57CD','65CB','6CEB','6E32','70AB','78B9','7D62','7E3C','7E4F','7EDA','88A8','8B82','8D19','93C7','94C9','955F','98B4','99FD'],'xuē':['5419','9774','35fe','3ee1','524A','5DA8','859B','8FA5','8FAA','97BE'],'xué':['5671','6585','6588','8313','35b8','3c12','3d85','3ff1','42c9','4c51','58C6','5B66','5B78','5CC3','6CF6','6FA9','71E2','7A74','89F7','8E05','96E4','9DFD','9E34'],'xuě':['4a2e','6A30','81A4','825D','8F4C','96EA','9C48','9CD5'],'xuè':['3570','4380','4915','4991','5779','6856','8840','8895','37bd','419d','41b7','44b8','46ce','4afc','4b02','4b65','5CA4','6CEC','8B14','8B1E','8C11','8D90'],'xū':['3960','5020','5401','5474','5618','5653','5729','6647','6948','8566','8657','8751','9450','9700','9808','3c2d','3f73','41d3','421d','43cf','4c6c','589F','5AAD','5B03','5B2C','5E41','620C','63DF','65F4','6B28','6B30','6B54','6B88','6E4F','759E','76F1','7A30','7C72','7E03','7E7B','80E5','865A','865B','88C7','8A0F','8B43','980A','987B','987C','9A49','9B1A','9B46','9B56'],'xūn':['5691','5743','5864','7104','7105','8477','8512','45fc','481d','4d6b','52CB','52DB','52F2','52F3','57D9','58E6','66DB','718F','71FB','736F','77C4','7AA8','7E81','81D0','85AB','85B0','860D','91BA'],'xú':['4371','4FC6','5F90','84A3'],'xún':['3704','3844','4629','4649','5071','6042','6794','6812','7495','7543','8340','8368','8541','358a','3a1a','3c2c','3d4c','3f66','42f8','45b2','565A','5BFB','5C0B','5CCB','5DE1','5EF5','5FAA','65EC','674A','686A','69C6','6A41','6BE5','6D35','6D54','6F6F','71D6','73E3','7D03','87F3','8A62','8BE2','90C7','99E8','9C4F','9C58','9C9F'],'xǔ':['3454','4161','4513','5066','5194','6829','9126','9191','346f','37b0','42f6','49c1','55A3','59C1','6D52','6E51','6EF8','73DD','76E8','7CC8','8A31','8A61','8ADD','8BB8','8BE9','8C1E'],'xù':['3428','3585','3627','3705','4086','4389','4652','4895','4997','5379','6034','6064','6149','6558','6702','7166','7781','8053','9157','355b','35f5','373f','378a','3cda','3d70','3de6','3eb7','460f','46d9','48f1','48f4','49bd','4b04','4cf3','4F35','4F90','52D6','52D7','53D9','563C','57BF','58FB','5A7F','5E8F','654D','65ED','662B','69D2','6C7F','6C80','6D2B','6E86','6F35','6F4A','70C5','73EC','755C','76E2','77B2','7A38','7AA2','7D6E','7D9A','7DD2','7DD6','7E8C','7EEA','7EED','805F','84C4','85C7','85DA','8A39','8CC9','928A','9C6E'],'xùn':['5640','8548','9442','9868','38b2','46dc','478a','4b40','4F28','4F9A','5DFA','5DFD','5F87','6B89','6BBE','6C5B','6D5A','718F','720B','8A0A','8A13','8A19','8BAD','8BAF','8CD0','8FC5','8FFF','900A','905C','97D7','99B4','9A6F','9D54','9D55']},'y':{'ya':['5440'],'yā':['4198','5440','5516','5727','6860','7146','375e','3ccc','3f8e','40c1','4E2B','538B','54D1','555E','57AD','57E1','58D3','5B72','5E98','62BC','690F','9D09','9D28','9D76','9E26','9E2D'],'yān':['4167','4299','5063','5266','5571','6079','7109','7111','7159','7312','9122','9140','9183','9609','35b6','393f','3b92','3e36','444d','45ce','479b','54BD','5AE3','5B2E','5D26','61D5','61E8','6A2E','6BB7','6DF9','6E6E','6F39','70DF','71D5','73DA','7BF6','80ED','814C','81D9','83F8','95B9','95BC','960F'],'yāng':['3495','5771','9260','9785','4c40','4F52','592E','59CE','67CD','6B83','6CF1','770F','79E7','7D3B','80E6','96F5','9D26','9E2F'],'yāo':['3658','4301','4645','5406','5593','5996','6946','7945','8170','8981','9080','46c2','4ce9','592D','5E7A','7D04','847D','8A1E'],'yá':['4130','5393','5810','6792','7259','8859','39ce','4F22','5C88','5D15','5D16','6DAF','6F04','72BD','731A','73A1','740A','775A','7B0C','82BD','869C','8C3A','9F56'],'yán':['3616','3619','4277','4597','5724','5869','6616','7402','7814','7939','8455','8505','8664','8712','9206','9586','9843','9854','35f4','375a','3adf','3cc2','3d84','3e82','3fd5','3ffc','400b','403d','40b4','41fe','44c2','45e1','48a5','49b2','4ae1','4E25','53B3','56B4','58DB','58E7','598D','59F8','5A2B','5A2E','5B4D','5CA9','5D52','5D53','5DCC','5DD6','5DD7','5EF6','63C5','694C','6A90','6AE9','6B15','6CBF','6E7A','708E','72FF','76D0','784F','789E','7B75','7C37','7D96','82AB','839A','8A00','8A01','8A7D','8BA0','90D4','925B','94C5','95B0','95BB','95EB','960E','963D','984F','989C','9E7D','9E99','9EA3'],'yáng':['4051','6698','6768','7080','7452','7993','9496','9626','9633','9737','37c5','39b9','3b15','45b9','4b17','4F6F','52B7','579F','5A78','5D35','5F89','626C','63DA','656D','65F8','661C','694A','6D0B','70CA','716C','739A','73DC','75A1','760D','773B','7F8A','86D8','8AF9','8F30','935A','940A','95AA','967D','98BA','98CF','9C11','9E09'],'yáo':['3478','4199','4504','5004','6416','6447','7307','7464','7476','8628','9059','9065','9443','9864','9906','347e','3a31','409a','42c2','430a','431b','45b4','46ba','46bb','481b','48a3','4b19','4FA5','509C','50E5','55C2','579A','582F','59DA','5AB1','5C27','5C2D','5CE3','5D24','5DA2','5DA4','5FAD','612E','63FA','669A','67FC','69A3','6BBD','70D1','723B','733A','73E7','7A91','7AAF','7AB0','7E47','80B4','8B20','8B21','8C23','8EFA','8F7A','929A','94EB','98BB','98D6','991A','9C29','9CD0','9F3C'],'yǎ':['6397','7602','8565','3fff','4ab5','4E9E','538A','54D1','555E','5E8C','758B','75D6','96C3','96C5'],'yǎn':['3563','3882','4059','4937','5043','5156','5157','5261','5935','5944','6281','7430','7517','8412','8758','8917','9043','9153','9692','36a7','3ac3','3b7a','410b','432a','437e','43a6','45fa','48cd','4c93','4dae','4E75','4FE8','513C','533D','53A3','53B4','59F6','5D43','5D96','5DD8','5DDA','5F07','60D4','611D','622D','624A','63A9','63DC','66EE','68EA','693C','6ABF','6C87','6E30','6E37','6F14','773C','787D','7F68','884D','88FA','8EBD','90FE','99A3','9B47','9B58','9C0B','9DA0','9EE1','9EE4','9EED','9EF6','9F34','9F39','9F3D','9F91'],'yǎng':['3526','4369','4446','6143','6501','7662','7922','8746','448b','4EF0','517B','536C','594D','5C9F','61E9','62B0','6C27','6C31','70B4','75D2','7F8F','7FAA','990A','990B','99DA'],'yǎo':['3754','3893','4058','4197','5060','6773','6796','7711','8200','37f1','3acf','3ad0','3d2d','3e53','404f','419e','4bda','4d20','4da7','4EF8','54AC','5A79','5ACD','5B8E','5C86','5D3E','62AD','699A','6B80','6E94','7A85','7A88','7A94','82ED','84D4','95C4','9A15','9DD5'],'yà':['4149','5720','5727','7330','7811','8050','3c33','475f','489d','49aa','4c32','4E9A','4E9C','4E9E','4FF9','529C','538B','58D3','5A05','5A6D','631C','63E0','6C29','6C2C','7A0F','7AAB','897E','8A1D','8BB6','8ECB','8F67','8FD3','930F','94D4','9F7E'],'yàn':['3994','4729','4781','5050','5501','5688','5830','5895','6565','7054','7067','7069','7114','7130','7131','7138','7196','7213','7217','8273','8276','8277','9586','9681','36ea','389b','3b2b','3c3d','3dd4','3df3','3dfc','40a9','46f3','48ad','4a04','4cdb','4ce1','4cfa','4d0f','4dab','50BF','538C','53AD','54BD','55AD','565E','56A5','58B1','599F','59F2','5A69','5B0A','5B3F','5BB4','5F65','5F66','61E8','664F','66A5','66D5','66E3','693B','6EDF','704E','71C4','71D5','726A','781A','786F','839A','898E','89C3','89FE','8AFA','8B8C','8B9E','8C1A','8C33','8C53','8C54','8D0B','8D17','8D5D','8EC5','917D','91B6','91BC','91C5','96C1','990D','995C','9A10','9A13','9A34','9A57','9A60','9A8C','9CEB','9D08','9D33','9DC3','9DF0'],'yàng':['6059','6837','7001','9785','3a3e','3e8a','3fee','4b3a','4b50','4d6e','600F','69D8','6A23','6F3E','70CA','716C','7F95','8A47','990A'],'yào':['3781','7627','8000','8981','9470','353d','3d78','3fd1','3fe2','66DC','718E','71FF','735F','759F','77C5','7A7E','7B44','825E','836F','846F','85AC','85E5','888E','899E','8B91','8DAD','94A5','977F','9DC2','9E5E'],'yē':['6396','6930','8036','4b47','503B','564E','6F71','882E'],'yé':['6353','7237','7458','9381','384b','3c4c','44c9','497a','5CEB','63F6','64E8','723A','740A','90AA','91FE','92E3','94D8'],'yě':['3652','5414','5622','4E5F','51B6','57DC','58C4','6F1C','91CE'],'yè':['3977','4046','4933','4936','4961','5629','6396','6654','7160','9134','9371','9391','9437','9765','9768','9801','9875','9923','9941','35a1','35fc','3a4e','3a91','3c49','3e23','420e','42a6','43a8','48a1','495f','49e8','4b4e','4b5f','4c52','4c9c','4E1A','4EB1','505E','50F7','53F6','54BD','58B7','591C','5DAA','5DAB','5FE6','64DB','64EA','64EB','66C4','66C5','66D7','66F3','67BC','696D','6B97','6B9C','6DB2','6FB2','70E8','71C1','76A3','77B1','77B8','814B','8B01','8C12','90BA','95CF','998C','9A5C','9D7A','9E08'],'yiāo':['9D01'],'yī':['3660','4257','4531','5901','6905','7317','7569','7995','8863','8864','36c4','394b','3cd6','3fa8','40dc','44be','46b7','49c7','4ab0','4ad1','4E00','4F0A','4F9D','533B','541A','54BF','566B','58F1','58F9','5ADB','5B04','5DAC','5F0C','63D6','6AB9','6B39','6BB9','6BC9','6D22','6E0F','6EB0','6F2A','71DA','747F','794E','7A26','7AD3','7AD5','7AE1','7E44','86DC','8B69','8FB7','90FC','91AB','92A5','94F1','966D','990F','9DD6','9E65','9EDF','9EF3'],'yīn':['4104','4903','5591','5794','5819','6114','6147','6836','7616','8335','8491','9625','9634','9670','9682','9720','9787','39e2','3d8f','44f0','473e','4F8C','51D0','567E','56D9','56E0','59FB','5A63','5CFE','647F','6B45','6BB7','6C24','6D07','6D15','6E6E','6EB5','798B','79F5','7B43','7D6A','7DF8','7EEC','852D','88C0','8AF2','92A6','94DF','95C9','967B','97F3','97FD','97FE','99F0','9A83','9EEB'],'yīng':['3855','4050','5040','5624','6125','6484','6516','6720','6967','7150','7507','7516','8621','8767','8833','9348','9533','9712','9719','44e8','48d0','49ab','49f9','4aaf','4d0d','56B6','5A74','5AC8','5B30','5B46','5B7E','5E94','5FDC','61C9','685C','6A31','6AFB','6E36','713D','73F1','745B','748E','74D4','78A4','792F','7DD3','7E93','7F28','7F42','7F43','7F4C','81BA','82F1','83BA','892E','8B7B','8EC8','944D','97FA','9D2C','9DA7','9DAF','9DEA','9DF9','9E0E','9E1A','9E66','9E70'],'yí':['3756','3794','3974','4785','5100','5937','6021','6098','6245','6686','6818','6938','7591','7719','7724','7731','8351','8413','8675','8794','8898','9057','9218','9236','9295','9809','9824','9825','9890','9974','340c','36a6','39be','3c18','3e6b','3ebf','3f22','412c','41f5','451f','48e1','49c5','4a5f','4b01','4b2e','4b8a','4c4c','4c91','4d0a','4E41','4EEA','4F87','519D','531C','54A6','572F','59E8','5B90','5B9C','5BA7','5BF2','5CD3','5DB7','5DF8','5F2C','5F5B','5F5C','5F5D','5F5E','605E','675D','67C2','684B','692C','6B4B','6C82','6CB6','6D1F','71AA','73C6','74F5','75CD','79FB','7BB7','7C03','7C4E','7FA0','80F0','82D0','86E6','886A','88B2','89FA','8A11','8A52','8ABC','8B3B','8B89','8BD2','8CA4','8CBD','8D3B','8DE0','8FC6','8FE4','8FFB','907A','914F','984A','98F4','9BA7','9E03'],'yín':['3542','3597','3759','4590','5198','5656','5701','5924','7892','8376','8529','9280','343a','366c','37a4','3e12','3e5c','3e5e','44c4','457e','459c','4aa9','4d26','51D0','541F','552B','569A','57A0','5A6C','5BC5','5D1F','5D2F','65A6','6AAD','6BA5','6CFF','6DEB','6EDB','70CE','72FA','748C','82C2','87EB','8A14','8A1A','8A21','8ABE','911E','91FF','921D','93D4','94F6','972A','9DE3','9F66','9F82','9F88'],'yíng':['4294','4449','4566','4930','6979','7005','7020','7050','7192','7469','8314','8365','8367','8424','8425','8426','8747','8805','3a15','3d6c','3d88','3e5a','3fd8','405d','40f7','50CC','55B6','584B','5A96','5B34','5DC6','5EEE','650D','651A','6AFF','6E81','6E8B','6ECE','6EE2','6F46','6FD9','6FDA','701B','702F','705C','71DF','76C1','76C8','7C5D','7C6F','7E08','83B9','843E','84E5','85C0','86CD','877F','87A2','8B0D','8D0F','8D62','8FCE','93A3'],'yǐ':['3548','3816','6246','6672','6905','8094','8223','8264','8681','8798','9018','9487','9857','382f','3aca','3c1d','3c3b','425d','475d','49e7','4b72','4c19','4E59','4EE5','501A','506F','5C3E','5D3A','5DF2','5EA1','639C','65D1','65D6','6AA5','77E3','7B16','80E3','82E1','82E2','87FB','8F22','8F59','8FC6','8FE4','91D4','926F','966D','9CE6','9F6E'],'yǐn':['3406','4325','5432','8693','9690','9777','396f','39a9','39c8','3c43','41d9','44a1','4a38','4E5A','5C39','5DBE','5EF4','5F15','6A83','6AFD','6DFE','6FE6','763E','766E','78E4','7C8C','7D16','7E2F','861F','87BE','8B94','8D9B','920F','96A0','96B1','98EE','98F2','996E','99BB'],'yǐng':['4034','4686','7034','7484','9834','9895','9896','388d','3c9f','3e75','4a0d','4b2c','4b4a','4b57','4b58','5DCA','5F71','68AC','6D67','6F41','763F','766D','77E8','7A4E','90E2','988D'],'yì':['3439','3465','3534','3582','3601','3608','3712','3763','3989','4101','4129','4268','4388','4581','4638','4758','4883','5104','5208','5293','5307','5453','5479','5508','5955','6008','6092','6291','6339','6359','6561','6581','6613','6679','6759','6827','7037','7088','7132','7348','7570','7617','7631','7654','7666','7796','8084','8189','8257','8285','8619','8649','8734','8939','9038','9091','9220','9552','9571','9623','9861','9950','344a','345c','34f7','366a','366f','36a4','36d5','36f3','370b','386b','387c','389e','38c7','38fb','39a4','3c45','3c5e','3c72','3cbc','3cd1','3d01','3d12','3d5d','3d69','3da0','3e6d','3f48','413f','41bf','41e9','41fc','42da','42f5','433b','44c3','44c8','44f9','452c','454d','458a','458c','45d1','45df','45f7','461d','476f','48e7','49b4','4b25','4b42','4b5e','4b7f','4bc6','4c2f','4d2c','4d5d','4E42','4E49','4E84','4EA6','4EBF','4F07','4F3F','4F5A','4F7E','4FCB','517F','52AE','52DA','52E9','546D','56C8','571B','57BC','57F6','57F8','58BF','5AD5','5B11','5B1F','5BF1','5C79','5CC4','5DA7','5E1F','5E20','5E46','5ED9','5F02','5F08','5F0B','5F79','5FC6','603F','60A5','610F','61B6','61CC','61FF','62B4','648E','66C0','66CE','678D','67BB','68ED','698F','69F7','69F8','6A8D','6B2D','6B5D','6B94','6BAA','6BC5','6CC6','6D02','6D42','6D65','6D73','6E59','6EA2','6F69','6FBA','71A0','71A4','71BC','71E1','71F1','73B4','75AB','75EC','761E','76CA','79C7','7A53','7AE9','7DC6','7E0A','7E76','7E79','7ECE','7F22','7F9B','7FA9','7FBF','7FCA','7FCC','7FF3','7FFC','808A','81C6','827A','827E','82C5','841F','84FA','858F','85D9','85DD','86E1','87A0','88A3','88D4','88DB','897C','8A32','8A33','8A63','8ABC','8B1A','8B6F','8B70','8B9B','8BAE','8BD1','8BE3','8C0A','8C59','8C5B','8C77','8DC7','8EFC','8F76','914F','91B3','91B7','91F4','93B0','943F','961D','96BF','972C','977E','97A5','99C5','9A5B','9A7F','9AAE','9BE3','9D8D','9DC1','9DE7','9DFE','9E5D','9E62','9ED3','9F78'],'yìn':['3865','4543','5370','6196','6197','6704','9173','349a','38e7','397c','3aa6','3d08','46bf','485b','4c9f','57BD','5ED5','616D','61DA','6ABC','6E5A','6FE5','730C','764A','7AA8','80E4','831A','836B','852D','96B1','98EE','98F2','996E','9BA3'],'yìng':['6620','7005','9795','345e','466c','491d','4d74','565F','5AB5','5E94','5FDC','61C9','646C','668E','786C','81A1','8B4D','8CCF','93A3','941B'],'yo':['54DF','55B2'],'yō':['5537','54DF','55B2','80B2'],'yōng':['3709','5670','5889','6175','7049','7655','7670','9095','9118','9954','342f','37fe','3d29','3efe','3f6b','45f8','49e1','4F63','50AD','55C8','58C5','5EB8','5EF1','62E5','64C1','6EFD','6FAD','724E','75C8','81C3','856F','90FA','93DE','955B','96CD','96DD','9C45','9CD9'],'yōu':['4973','5466','5698','6182','6538','7000','8030','35c0','3c4a','3cca','3d17','4F18','512A','5E7D','5FE7','602E','60A0','61EE','6ACC','7E8B','913E','9E80'],'yóng':['3758','5581','9852','9899','45e4','509B','5AC6','5ADE','5D71','69E6'],'yóu':['3571','3625','4343','4683','5064','6023','6962','7336','7337','7531','8555','8763','8764','9030','34a1','36ad','36dc','3acd','3cfa','3f55','3f9e','447b','45bb','488a','489f','5C22','5C23','5C24','5CF3','65BF','67DA','6AFE','6C7C','6C8B','6CB9','6D5F','6E38','6EFA','72B9','75A3','79DE','7E47','80AC','839C','83A4','83B8','86B0','8A27','8F0F','8F36','900C','904A','908E','90AE','90F5','923E','94C0','99C0','9B77','9B8B','9C7F','9C89'],'yǒng':['3672','6080','6111','6139','6142','6408','6810','7867','39b7','3d04','3dcf','47bb','4FD1','52C7','52C8','548F','57C7','584E','5F6E','603A','607F','60E5','64C1','67E1','6C38','6CF3','6D8C','6E67','752C','799C','848F','86F9','8A60','8E0A','8E34','92A2','9BD2','9CAC'],'yǒu':['5363','6709','6884','7256','7257','7989','8048','9149','3b8b','3c36','3dad','414e','44b4','4b00','4c42','4cd1','4E23','53CB','5CB0','5EAE','69F1','6CD1','6E75','7F90','7F91','811C','82C3','83A0','848F','870F','92AA','94D5','9EDD'],'yòng':['7528','37b2','3db2','4F63','50AD','783D','919F'],'yòu':['3557','3911','4001','5500','7270','7950','34dc','3e68','3ea0','419c','46fb','47a5','4EB4','4F51','4F91','53C8','53F3','54CA','56FF','59F7','5B67','5BA5','5CDF','5E7C','67DA','72D6','7CFF','86B4','8A98','8BF1','8C81','8FF6','916D','91C9','9D22','9F2C'],'yuān':['4949','5248','7041','7722','8099','8735','383e','3f93','485d','4a0a','51A4','56E6','5B3D','5BC3','60CC','68E9','6DF5','6E01','6E06','6E0A','6E15','7BA2','847E','84AC','870E','88EB','88F7','92FA','99CC','9CF6','9D1B','9D77','9E22','9E33','9E53','9F18','9F1D'],'yuán':['3973','5143','5186','5458','5706','5712','5713','7230','7328','7342','8597','8696','8788','8881','9228','37f6','3e49','45a0','49be','4b27','4c72','4cae','4cd2','4ce3','539F','53A1','53B5','54E1','56ED','570E','571C','57A3','586C','59A7','5A9B','5AB4','5AC4','5C1B','63F4','676C','699E','69AC','6A7C','6ADE','6C85','6E72','6E90','6E92','732D','733F','7B0E','7DE3','7E01','7F18','7FB1','82AB','849D','875D','876F','8C9F','8D20','8F45','8F95','908D','90A7','915B','93B1','9A35','9B6D','9DA2','9DB0','9EFF','9F0B'],'yuǎn':['9060','46c4','46c7','4a69','59B4','8FDC','903A'],'yuàn':['3950','4148','5086','5917','6028','7457','7990','8312','8911','8924','9060','9662','9858','392a','3b47','43cd','4b07','4b3c','566E','5A9B','613F','63BE','82D1','884F','8B1C'],'yuē':['5666','7125','5B33','66F0','66F1','7BB9','7D04','7EA6'],'yuě':['54D5'],'yuè':['3727','3730','4195','4583','4847','4881','4926','4943','5216','6071','6085','6209','6288','6373','6708','6782','7039','8625','9205','9470','9605','3b26','3c1b','3e4a','41a2','42d0','42e4','47d1','47e0','482f','48b2','4db3','4E50','599C','5B33','5C84','5CB3','5DBD','60A6','680E','697D','6A02','6A3E','6AAA','6ADF','6CE7','721A','72D8','73A5','793F','79B4','7BD7','7C46','7C65','7C70','7CA4','7CB5','85E5','868E','868F','8AAA','8AAC','8D8A','8DAF','8DC0','8DC3','8E8D','8ECF','925E','94A5','94BA','95B1','95B2','9E11','9E19','9FA0','9FA5'],'yū':['7600','8676','377c','3c32','41b0','48ff','4a7d','5CFF','625C','65BC','6BFA','6DE4','76D3','7A7B','7B8A','7C72','7D06','7EA1','8FBC','8FC2','8FC3'],'yūn':['3683','6655','6688','7174','7189','8480','8495','8779','596B','6C32','6C33','717E','7DFC','7E15','8D07','8D5F'],'yú':['3924','3965','4069','4128','4342','4433','4521','4893','5539','5823','6109','6275','6745','6859','6961','6970','6986','7397','7399','7862','8174','8201','8206','8245','8330','8362','8438','8753','8867','8915','9098','9103','9683','9685','9918','9980','36a5','395a','3a80','3b02','3b30','3cdb','3d9b','3dd2','3e9e','3eae','3ec0','3f36','409b','40cb','410f','43f8','45e8','473d','4a52','4b14','4c3b','4c77','4ca3','4E8E','4E90','4F03','4F59','4FDE','516A','582C','59A4','5A1B','5A2F','5A31','5A80','5B29','5D33','5D4E','5D5B','611A','63C4','65DF','6B24','6B48','6B5F','6B76','6E14','6E1D','6E61','6F01','6F9E','72F3','745C','74B5','756C','756D','76C2','776E','79BA','7AAC','7AFD','7C45','7DF0','7FAD','81FE','854D','861B','865E','87B8','89A6','89CE','8ADB','8B23','8C00','8E30','8F3F','8F5D','903E','91EA','935D','96D3','96E9','96FD','9AAC','9AC3','9B5A','9B63','9BBD','9BF2','9C05','9C7C','9D4C','9DE0','9E06','9E12','9F75'],'yún':['4259','5300','5458','5998','6600','6783','6985','7185','7547','7703','8018','8553','9116','9942','36e3','370f','48b5','4E91','4F1D','52FB','54E1','612A','62A3','69B2','6A52','6C84','6DA2','6EB3','6F90','79D0','7B60','7B7C','7BD4','7D1C','7E1C','7E67','7EAD','803A','82B8','837A','84B7','8C9F','8D20','90E7','92C6','96F2'],'yǔ':['3468','3481','3531','3651','3762','3818','3870','5673','5704','5709','6327','6554','6594','6940','7440','7610','7964','8065','8207','9105','9151','349c','38c3','399b','3cbe','3e84','3f0c','48c1','494f','4a1e','4E0E','4E88','4F1B','4FC1','4FE3','504A','50B4','532C','5B87','5BD9','5C7F','5DBC','5EBE','61D9','659E','79B9','7A8A','7AB3','7BFD','7FBD','842D','860C','87A4','8A9E','8BED','8C90','96E8','9F6C','9F89'],'yǔn':['5141','5597','9217','9668','9695','9723','3a48','41ac','41d6','47ab','491e','4a36','4ab3','508A','628E','6B92','6B9E','72C1','72C7','73A7','78D2','891E','8CF1','8F11','962D'],'yù':['3828','3922','3954','4205','4587','4618','4631','4721','4896','5401','5585','5590','5809','6086','6087','6108','6631','7134','7229','7344','7389','7419','7609','7652','7821','7872','7907','7916','8080','8207','8248','8577','8581','9033','9047','9079','9289','9325','9608','9731','9810','9884','9947','369c','39bd','39d2','3f63','404c','408a','425b','42d6','42ed','435e','463b','46d5','479d','48a9','490b','4a12','4afb','4b87','4b99','4d01','4d65','4E0E','4FFC','53DE','55A9','55BB','564A','572B','57DF','59AA','5AD7','5BD3','5C09','5CEA','5D8E','5EBD','5F67','5FA1','5FEC','60D0','617E','622B','682F','68DB','68DC','68EB','6AF2','6B0E','6B1D','6B25','6B32','6BD3','6D74','6DE2','6DEF','6EEA','6F4F','6FA6','706A','715C','71A8','71CF','71E0','72F1','735D','77DE','791C','79A6','79D7','7A22','7A36','7A65','7C5E','7C72','7CD3','7DCE','7E58','7F6D','807F','80B2','828B','828C','831F','83C0','842E','84AE','84E3','84F9','851A','871F','872E','88AC','88D5','8A89','8A9E','8AED','8B7D','8C15','8C6B','8EC9','8F0D','90C1','91A7','923A','92CA','942D','94B0','95BE','96A9','98EB','996B','99AD','9A1F','9A48','9A6D','9B30','9B31','9B3B','9B4A','9CFF','9D25','9D2A','9D52','9DF8','9E46','9E6C','9EE6'],'yùn':['5458','6120','6655','6688','8574','8580','9106','9196','36ba','378c','37e6','468b','4a75','4cb0','54E1','56E9','593D','5B55','607D','60F2','614D','679F','71A8','7DF7','7F0A','816A','85F4','860A','8C9F','8D20','8FD0','904B','90D3','915D','919E','97B0','97DE','97EB','97F5','97FB','9DA4']},'z':{'zā':['3789','5482','9254','39ab','531D','5E00','624E','62B8','62F6','6C9E','7D2E','81DC','81E2','8FCA'],'zāi':['7775','54C9','683D','6E3D','707D','707E','70D6','753E','83D1','8CF3'],'zān':['4436','5142','9415','437c','50AA','7C2A','7C2E','7CCC'],'zāng':['7242','7243','3b9c','6B0C','7F98','810F','81E7','8CCD','8CD8','8D13','8D1C','8D43','937A','9AD2'],'zāo':['385f','3bfe','3dee','470a','50AE','7CDF','8E67','906D'],'zá':['4579','4799','6742','7838','4a3f','4a9e','507A','56D0','5DBB','78FC','894D','96D1','96DC','96E5','97F4','9B73'],'zán':['5003','507A','54B1'],'záo':['4963','51FF','91A9','947F'],'zǎ':['548B','9BBA'],'zǎi':['3c70','43c1','48ec','4ba8','510E','5BB0','5D3D','7E21','8F09','8F7D'],'zǎn':['5127','5139','5592','5647','6505','6512','6522','7938','3ceb','4b55','5BC1','62F6','63DD','648D','661D','685A','6CAF','79B6','8DB1','8DB2'],'zǎng':['99D4','9A75'],'zǎo':['6806','45a3','45e2','4c83','65E9','67A3','68D7','6FA1','74AA','85BB','85FB','86A4'],'zài':['5728','6257','4d67','4FA2','50A4','510E','518D','8F09','8F7D'],'zàn':['3506','6682','7052','8978','9147','9961','373a','37db','38c5','4b24','56CB','66AB','6B11','74C9','74D2','74DA','7A73','8B83','8B9A','8CDB','8D0A','8D5E','8DB2','913C','933E','93E8'],'zàng':['3638','5328','8535','585F','5F09','810F','81D3','81DF','846C','85CF','92BA'],'zào':['5515','5523','6165','7076','7681','7682','8241','8672','9020','566A','688D','71E5','7AC3','7AC8','7AC9','7C09','8B5F','8DAE','8E81','9ADE'],'zēn':['3ef8'],'zēng':['4396','5897','7494','589E','618E','66FD','66FE','6A67','71B7','77F0','78F3','7E52','7F2F','7F7E','8B44','9A53','9C5B'],'zé':['4549','5219','5247','5567','5616','7794','8234','8434','8536','8808','35bd','37d9','38f1','3cfb','3e93','41e5','456a','4bd4','4c39','4da6','548B','5D31','5E3B','5E58','629E','62E9','64C7','6CA2','6CFD','6FA4','769F','7B2E','7BA6','7C00','802B','880C','8ACE','8B2E','8CAC','8CCA','8CFE','8D23','8D5C','8FEE','9F5A'],'zéi':['8CCA','8D3C','9C61','9C97'],'zěn':['600E'],'zěng':['3f6a'],'zè':['5928','6603','6617','3cc1','4EC4','5E82','6C44','7A04'],'zèn':['56CE','8B5B'],'zèng':['4662','7511','9503','4c1d','7D9C','7E52','8D08','8D60','92E5'],'zi':['5B50'],'zī':['4154','4185','5179','5431','6825','6914','7386','7920','8332','8458','8800','9111','9319','9531','9543','383f','3c23','3f67','3ff3','43a9','45aa','48ce','4c35','54A8','55DE','59D5','59FF','5B56','5B5C','5B73','5B76','5D30','5D6B','6DC4','6E7D','6ECB','6FAC','798C','79F6','7A35','7CA2','7D0E','7DC7','7F01','830A','87D5','89DC','8A3E','8AEE','8C18','8CB2','8CC7','8D40','8D44','8D91','8DA6','8F1C','8F3A','8F8E','922D','937F','93A1','983E','983F','9AED','9BD4','9C26','9CBB','9D1C','9D85','9DBF','9F12','9F4D','9F5C','9F87'],'zǐ':['4502','4623','5407','5470','5559','6893','8014','8293','8308','8678','373d','37a8','39d7','3ead','3f85','49bb','4ED4','59C9','59CA','5B50','674D','699F','6A74','6ED3','77F7','79C4','79ED','7B2B','7C7D','7D2B','80CF','8A3E','8A3F','91E8'],'zì':['4146','4409','5033','6063','7278','7725','7726','8321','8362','39d8','3c37','3c74','525A','5B57','627B','6D13','6E0D','6F2C','80D4','80FE','81EA'],'zōng':['3661','3687','4053','4226','4478','5027','6031','6936','7323','8159','8250','38ed','3a11','3bf6','45e5','582B','5B97','5D4F','5D55','5D78','60FE','679E','68D5','6A05','71A7','78EB','7A2F','7D9C','7DC3','7DF5','7E31','7E4C','7EFC','7FEA','847C','876C','8C75','8E28','8E2A','8E64','9A0C','9A23','9A94','9B03','9B09','9B37','9BEE','9BFC'],'zōu':['9112','9139','3ed3','5AB0','63AB','68F7','68F8','7B83','7DC5','83C6','8ACF','8B05','8BF9','90B9','90F0','966C','9A36','9A7A','9BEB','9CB0','9EC0','9F7A'],'zóng':['6F48'],'zǒng':['3894','4655','6121','6181','6374','6403','6460','6721','3dd3','3e45','4c0c','500A','506C','50AF','5FE9','603B','60E3','63D4','7DCF','7DEB','7E02','7E3D','84D7'],'zǒu':['8D70','8D71','9BD0'],'zòng':['7314','7632','7882','435f','474b','5F9E','662E','75AD','7CBD','7CC9','7CED','7D9C','7E26','7E31','7EB5'],'zòu':['350c','353f','3d75','482b','594F','63CD','9A5F'],'zuān':['487d','8E9C','8EA6','945A','947D','94BB'],'zuǎn':['4323','5139','3e07','408e','4c16','7C6B','7E64','7E82','7E89','7E98','7F35','947D'],'zuàn':['4938','6525','9961','8CFA','945A','947D','94BB'],'zuī':['4612','6718','3b70','4b94','539C','5D89','6A36','7E97'],'zuǐ':['5634','567F','5D8A','6D05','6FE2','74BB','89DC'],'zuì':['3761','3811','4639','6700','9028','9154','9189','3c0e','51A3','58AC','5DB5','666C','67A0','682C','69DC','6A87','6A8C','797D','7A21','7A5D','7D4A','7F6A','855E','894A','8FA0','917B','92F7','930A'],'zuō':['3d76','4F5C','562C'],'zuó':['6628','7422','8443','3e32','42cf','43b0','476b','47a2','47b0','690A','79E8','7A13','7B70','923C'],'zuǒ':['5497','5528','377e','4F50','5DE6','64AE','6BD1','7E53'],'zuò':['3445','3600','3634','3930','4518','5511','5750','8444','9162','3b6e','47f6','4F5C','505A','590E','5C9E','5EA7','600D','67DE','781F','795A','7CF3','80D9','84D9','888F','947F','963C'],'zū':['79DF','83F9','84A9'],'zūn':['9075','58AB','58FF','5C0A','5D9F','6A3D','71C7','7E5C','7F47','940F','9C52','9CDF','9D8E','9DF7'],'zú':['5346','5352','9390','37ba','3c35','3d40','469d','4bff','4c63','4F1C','50B6','54EB','5D12','5D2A','637D','65CF','8DB3','8E24','8E3F','8E75','93C3','955E'],'zǔ':['4503','4595','7956','4FCE','723C','73C7','7D44','7EC4','8A5B','8BC5','93BA','963B','977B'],'zǔn':['5642','6499','453f','50D4','58AB','8B50']},'zh':{'zhā':['4412','5067','5412','6313','6463','6942','35ec','398b','3aa5','3fb4','4d59','4da5','548B','54F3','55B3','5BB1','624E','62AF','63F8','67E4','67E5','67FB','6A1D','6E23','76B6','76BB','8B2F','9F44','9F47'],'zhāi':['3480','5908','6458','451d','635A','658B','658E','69B8','7C82','9F4B'],'zhān':['4993','5360','5661','6834','8998','9085','9246','9711','9958','38f6','3bb5','4a47','4c73','4da8','546B','5CBE','5DA6','65C3','65DC','6BE1','6C08','6C0A','6CBE','77BB','7C98','859D','8A40','8A79','8B60','8B6B','8B9D','8C35','8D88','959A','9A59','9C63','9E07','9E6F'],'zhāng':['7350','8501','9067','9123','9926','46eb','50BD','5ADC','5F20','5F35','5F63','5F70','615E','66B2','6A1F','6F33','748B','7AE0','87D1','93F1','9A3F','9C46','9E9E'],'zhāo':['5541','6477','7740','9363','47b4','59B1','5DF6','62DB','662D','671D','67D6','76C4','91D7','924A','948A','99CB'],'zhá':['4977','5273','5284','7534','9358','9598','9705','3c5c','3cd0','4b9c','4ba2','558B','624E','672D','70B8','7B9A','7D25','7D2E','86BB','883F','8B57','8ECB','8F67','94E1','95F8'],'zhái':['386f','5B85','629E','62E9','64C7','790B','7FDF'],'zháo':['7740'],'zhǎ':['4562','7728','3d19','3de2','42fe','46fd','4c79','538F','62C3','781F','82F2','8E37','9B93','9C8A','9C9D'],'zhǎi':['4349','9259','5C9D','7A84','98F5'],'zhǎn':['4074','4184','4392','4840','6990','7416','9186','350a','370a','37a1','382d','406a','47cb','4a45','4a46','4c7c','5AF8','5C55','5D2D','5D83','5D84','640C','65A9','65AC','6A3F','6A4F','76BD','76CF','76DE','8E4D','8F3E','8F97','98AD','98D0','9B59'],'zhǎng':['7903','9423','9577','9578','4EC9','50DF','514F','5E65','638C','6DA8','6F32','957F','979D'],'zhǎo':['4203','4756','7475','355a','627E','6CBC','722A','722F','83EC'],'zhà':['3878','5412','6805','7079','40ce','410d','419b','45b3','4E4D','549C','54A4','643E','67DE','67F5','69A8','6EA0','70B8','75C4','7C0E','86B1','874B','881F','8A50','8BC8','91A1'],'zhài':['4431','7635','7826','3a5f','503A','50B5','5BE8','8CAC'],'zhàn':['5061','5360','6218','6226','6230','6808','8638','8665','8666','37de','3e98','3ef5','42ce','45c3','463a','4a8c','4c60','4F54','5D98','685F','68E7','693E','6E5B','7AD9','7DBB','7EFD','83DA','89B1','8E54','8F1A','8F4F','986B','98A4','9A4F','9AA3'],'zhàng':['3663','5887','6259','6756','7634','7795','8139','3f74','4E08','4ED7','5D82','5E10','5E33','5E5B','6DA8','6DB1','6F32','75EE','762C','7C80','80C0','8CEC','8D26','969C'],'zhào':['4207','4472','5146','5797','7167','8081','8087','8088','347f','387d','3dd6','3df9','40cd','435c','436e','53EC','65D0','66CC','679B','68F9','6AC2','70A4','71F3','72E3','77BE','7B0A','7B8C','7F40','7F69','7F84','8A54','8BCF','8D75','8D99','96FF','9D6B'],'zhe':['7740'],'zhē':['6298','6663','8707','3e19','55FB','5AEC','906E'],'zhēn':['3598','3630','5075','6438','6815','6862','6939','6968','7349','7504','7827','8496','9049','9159','9241','9331','9488','9755','3c80','40a6','40cc','422f','4FA6','583B','5A9C','5AC3','5BCA','5E27','5E2A','5E40','659F','699B','6A3C','6B9D','6D48','6E5E','6EB1','6F67','73CD','73CE','744A','771E','771F','78AA','796F','798E','799B','7BB4','7C48','80D7','81FB','84A7','84C1','85BD','8A3A','8C9E','8D1E','8F43','91DD','936E','937C','99D7','9C75','9DCF'],'zhēng':['4375','6014','6323','6399','7319','7665','7710','7741','8047','9266','9441','3b39','41b8','41f0','42ca','42eb','4c62','4E89','4F42','51E7','57E9','59C3','5CE5','5D22','5F81','5FB0','5FB4','63C1','6B63','70A1','70DD','722D','72F0','75C7','775C','7B5D','7B8F','7BDC','84B8','8ACD','8E2D','931A','93F3','94B2','94EE','9B07','9BD6','9CAD'],'zhé':['3847','4411','4432','4706','4743','4755','5387','5560','5586','6174','6298','6662','6754','7813','8034','8674','8707','8975','378f','388e','3abf','3b59','3b6f','3bd9','3bf0','3e1e','41fd','429e','43b2','44c6','4bb0','4E5B','54F2','569E','57D1','608A','61FE','647A','6B7D','74CB','78D4','7C77','86F0','87C4','8A5F','8B2B','8B3A','8B81','8B8B','8B98','8C2A','8F12','8F19','8F4D','8F84','8F99','92B8','9BBF','9E05'],'zhě':['7987','8005','8936','9517','556B','8D6D','937A'],'zhěn':['3431','4450','4834','6623','6678','6795','7715','7973','8044','8419','8897','3a9b','3c7d','40a7','4ab4','4abe','4aec','5F2B','628C','62AE','69C7','755B','75B9','7A39','7B09','7D3E','7D7C','7E1D','7E25','7F1C','8A3A','8BCA','8EEB','8F78','8FB4','9B12','9ED5','9EF0'],'zhěng':['4855','6138','6574','628D','62EF','649C','6C36','7CFD'],'zhè':['4826','8517','9019','409e','43f3','45ea','4a7e','4d6d','67D8','6AA1','6D59','70E2','87C5','8FD9','9DD3','9E67'],'zhèn':['4015','4769','5733','5866','6576','6715','7739','8704','9156','9547','9635','9663','9707','34c4','38c0','3bb3','3be2','3d28','3f09','42b6','43d6','47f4','4a2f','4cb4','4cf2','4FB2','630B','632F','63D5','681A','686D','7EBC','8AAB','8CD1','8D48','92F4','93AD','93AE','9D06','9E29'],'zhèng':['3860','3867','4223','6323','6399','7665','3c4f','3f40','40bb','494c','496d','499b','49b6','4F42','653F','6B63','75C7','8A3C','8ACD','8B49','8BC1','8BE4','90D1','912D','931A','9D0A'],'zhī':['4777','5001','5431','6418','6800','6894','6925','7957','8102','8718','8879','3a7c','3bc4','3c8d','3d2f','3e1f','3f7b','44cb','44dc','44e1','47a0','47e1','48fd','49f4','4d79','4E4B','536E','53EA','5DF5','5F94','652F','679D','69B0','6C41','6C65','6CDC','77E5','796C','79D3','79D6','79EA','7AD3','7AD5','7D95','7E54','7EC7','80A2','80D1','80DD','829D','887C','96BB','99B6','9CF7','9D32','9F05'],'zhí':['3677','3940','4408','5024','5128','5767','6179','6267','7286','7983','8040','8077','8635','8901','373c','47c8','4d42','4F84','503C','57F4','57F7','588C','59B7','59EA','5B02','61EB','646D','64FF','67E3','690D','6A34','6B96','6F10','74C6','74E1','76F4','79F7','7A19','7D77','7E36','804C','81B1','87D9','8CEA','8DD6','8E2F','8E60','8E62','8E91','8EC4','91DE','99BD','9BEF'],'zhǐ':['3544','3873','3876','4169','4920','5740','5741','5902','6049','6307','7947','7949','8967','3ad1','3bb9','3c9b','41db','46d7','4cc5','51EA','52A7','538E','53EA','54AB','5E0B','5FB5','627A','62A7','65E8','664A','67B3','683A','6B62','6C9A','6D14','6DFD','75BB','780B','7D19','7EB8','82B7','85E2','8A28','8DBE','8EF9','8F75','916F','962F','9EF9'],'zhì':['3609','3731','3742','4188','4245','4447','4770','4783','4879','5236','5295','5394','5781','6184','6303','6431','6809','7099','7302','7318','7564','7590','7608','7929','7951','8296','8652','9070','9455','9466','9527','9666','35cc','35e7','36ff','38e5','3a01','3a16','3d1b','3fc3','413a','41e7','425c','43ba','43ef','442d','44cc','454c','462d','46a6','46b3','494d','49af','4a62','4b39','4b41','4c43','4c65','4c80','4E7F','4FE7','506B','5A21','5BD8','5CD9','5D3B','5E19','5E1C','5E5F','5EA2','5EA4','5F58','5F8F','5F9D','5FD7','5FEE','61E5','631A','63B7','646F','64F2','65D8','667A','684E','68BD','6ACD','6ADB','6CBB','6D37','6DDB','6ECD','6EDE','6EEF','6F4C','71AB','72FE','75D4','75E3','79E9','79F2','7A1A','7A3A','7A49','7A92','7B6B','7D29','7DFB','7F6E','7FD0','80F5','815F','81A3','81F3','81F4','81F8','86ED','87B2','889F','88A0','88FD','899F','89D7','89E2','89EF','89F6','8A8C','8B58','8BC6','8C51','8C52','8C78','8CAD','8CEA','8D04','8D28','8D3D','8DF1','8E2C','8E93','8F0A','8F7E','8FE3','90C5','928D','92D5','94DA','965F','96B2','96C9','99E4','9A2D','9A3A','9A47','9A98','9D19','9D29','9DD9','9E37'],'zhou':['78A1'],'zhōng':['4766','5223','5990','7082','7144','8520','8873','8877','9221','9418','3e63','41d7','423a','4E2D','4F00','5E52','5F78','5FE0','5FEA','67CA','6C77','6CC8','6F68','76C5','7C66','7D42','7EC8','822F','87BD','8E71','8FDA','92BF','937E','949F','953A','9D24'],'zhōu':['4387','5468','5541','9031','9282','3a04','447c','44df','49d3','4F9C','4FFC','558C','5A64','5DDE','5F9F','6D00','6D32','6DCD','70BF','70D0','73D8','76E9','77EA','7CA5','821F','8B05','8B78','8BCC','8BEA','8CD9','8D52','8F08','8F16','8F80','90EE','99F2','9A06','9D43','9E3C'],'zhóu':['36e9','59AF','59B0','8EF8','8F74'],'zhǒng':['7607','38eb','51A2','55A0','57EB','585A','5C30','6B71','79CD','7A2E','80BF','816B','8E35'],'zhǒu':['8098','3af6','459e','5E1A','666D','759B','776D','7B92','83F7','9BDE'],'zhòng':['5045','5839','5995','8846','8876','3cb4','4c70','4E2D','4E51','4EF2','4F17','5A91','5C30','6E69','72C6','773E','79CD','7A2E','7B57','7DDF','833D','869B','8AE5','91CD'],'zhòu':['3447','3473','3918','4219','5191','5492','5663','7503','8464','396e','3f19','3fad','42d3','43bb','46c6','4a5c','4d87','4F37','50FD','546A','54AE','5B99','601E','663C','665D','76B1','76BA','7C40','7C52','7C55','7C99','7D02','7E10','7E47','7EA3','7EC9','80C4','836E','8A4B','8EF8','8F74','914E','99CE','9A5F','9AA4'],'zhuā':['6293','631D','64BE','6A9B','9AFD'],'zhuān':['5278','7816','8011','9853','43dd','4E13','53C0','587C','5AE5','5C02','5C08','747C','750E','78D7','78DA','7BFF','819E','87E4','911F','989B','9C44','9DD2'],'zhuāng':['5986','6869','6889','8358','599D','5A24','5E84','5E92','6A01','7CA7','7CDA','838A','88C5','88DD'],'zhuǎ':['722A'],'zhuǎi':['8DE9','8EE2','8F49','8F6C'],'zhuǎn':['4871','56C0','7AF1','8EE2','8F49','8F6C'],'zhuǎng':['5958','5F09'],'zhuài':['62FD','66F5'],'zhuàn':['4275','7077','7451','8483','8948','9994','49d8','4F20','50B3','50CE','556D','56C0','581F','64B0','6C8C','7BC6','7C51','7E33','815E','8B54','8CFA','8D03','8D5A','8EE2','8F49','8F6C','994C'],'zhuàng':['6206','6207','58EE','58EF','58F5','5E62','649E','710B','72B6','72C0'],'zhuī':['6858','8144','9310','9525','35d3','369d','3b85','4a28','4d86','5A3A','690E','8FFD','96B9','9A05','9A93','9D2D','9D7B'],'zhuǐ':['6C9D'],'zhuì':['5760','7908','8187','9446','3a7e','3fbd','410c','53D5','589C','60F4','787E','7AA1','7B0D','7DB4','7E0B','7F00','7F12','8B75','8D05','8D58','933A','991F'],'zhuō':['3441','4090','4983','6349','34f8','4abc','4ace','4b93','4E35','502C','62D9','666B','684C','68C1','6DBF','7A5B','7AA7'],'zhuó':['3482','4175','4401','4574','5262','5285','5353','5544','5545','5734','6580','6913','7042','7422','7438','7740','8301','8743','8817','9323','9432','38ff','39fb','3b6c','3e7f','3e9f','41af','47fe','4b95','4d82','5F74','64AF','64C6','64E2','65AB','65AE','65B1','65B2','65B5','68B2','68F3','69D5','6C4B','6CCE','6D4A','6D5E','6FC1','6FEF','707C','70AA','70F5','712F','787A','799A','7AA7','7BE7','7C71','7E73','7F6C','8AD1','8B36','8BFC','914C','92DC','942F','956F','9DDF'],'zhuò':['39f3'],'zhū':['4417','4864','6731','7026','7843','7969','8331','8829','9296','39b5','39e3','3d86','40f4','41ec','48f7','4F8F','52AF','682A','69E0','6A65','6AE7','6AEB','6D19','6F74','732A','73E0','7D51','85F7','85F8','86DB','876B','88BE','89F0','8A85','8AF8','8BDB','8BF8','8C6C','90BE','94E2','99EF','9BA2','9D38','9F04'],'zhūn':['3852','8860','5B92','7A80','80AB','8A30','8AC4','8C06','8FCD'],'zhú':['4335','4831','7225','7603','8233','8853','9010','457d','461a','47c9','496e','4bb1','529A','672E','672F','705F','70A2','70DB','71ED','7A8B','7AF9','7AFA','7B01','7B1C','7BC9','7BEB','833F','84EB','880B','883E','8D89','8E85','8EF8','9C41'],'zhǔ':['3509','4622','5631','7151','3d6d','4c1e','4E36','4E3B','56D1','58F4','5B4E','5C5E','5C6C','62C4','65B8','6B18','6E1A','6FD0','716E','771D','77A9','77DA','782B','7F5C','891A','8A5D','8CAF','967C','9E88'],'zhǔn':['51C6','51D6','57FB','6E96','7DA7','9DBD'],'zhù':['3749','3916','4346','4422','4604','4752','8387','8457','9252','9444','344f','3ac2','3e65','3e9b','3fbb','3ffe','41e0','41e1','43b7','476c','4a92','4b21','4b56','4F2B','4F47','4F4F','52A9','577E','5D40','677C','67F1','67F7','6A26','6AE1','6BB6','6CE8','70B7','75B0','795D','79FC','7ADA','7B51','7B6F','7BB8','7BC9','7D35','7D38','7EBB','7F9C','7FE5','82A7','82CE','82E7','86C0','8A3B','8AD4','8CAF','8D2E','8DD3','8EF4','92F3','94F8','98F3','99B5','99D0','9A7B','9E86'],'zhùn':['7A15']}};

},{}],6:[function(require,module,exports){
// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.
require('../../js/transition.js')
require('../../js/alert.js')
require('../../js/button.js')
require('../../js/carousel.js')
require('../../js/collapse.js')
require('../../js/dropdown.js')
require('../../js/modal.js')
require('../../js/tooltip.js')
require('../../js/popover.js')
require('../../js/scrollspy.js')
require('../../js/tab.js')
require('../../js/affix.js')
},{"../../js/affix.js":7,"../../js/alert.js":8,"../../js/button.js":9,"../../js/carousel.js":10,"../../js/collapse.js":11,"../../js/dropdown.js":12,"../../js/modal.js":13,"../../js/popover.js":14,"../../js/scrollspy.js":15,"../../js/tab.js":16,"../../js/tooltip.js":17,"../../js/transition.js":18}],7:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: affix.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#affix
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    var target = this.options.target === Affix.DEFAULTS.target ? $(this.options.target) : $(document).find(this.options.target)

    this.$target = target
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      = null
    this.unpin        = null
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.4.1'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && scrollTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = Math.max($(document).height(), $(document.body).height())

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);

},{}],8:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: alert.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.4.1'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    selector    = selector === '#' ? [] : selector
    var $parent = $(document).find(selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

},{}],9:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: button.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.4.1'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state += 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d).prop(d, true)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d).prop(d, false)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked')) changed = false
        $parent.find('.active').removeClass('active')
        this.$element.addClass('active')
      } else if ($input.prop('type') == 'checkbox') {
        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
        this.$element.toggleClass('active')
      }
      $input.prop('checked', this.$element.hasClass('active'))
      if (changed) $input.trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
      this.$element.toggleClass('active')
    }
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest('.btn')
      Plugin.call($btn, 'toggle')
      if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault()
        // The target component still receive the focus
        if ($btn.is('input,button')) $btn.trigger('focus')
        else $btn.find('input:visible,button:visible').first().trigger('focus')
      }
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))
    })

}(jQuery);

},{}],10:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: carousel.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.4.1'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var that      = this

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      if (typeof $next === 'object' && $next.length) {
        $next[0].offsetWidth // force reflow
      }
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    if (href) {
      href = href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7
    }

    var target  = $this.attr('data-target') || href
    var $target = $(document).find(target)

    if (!$target.hasClass('carousel')) return

    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);

},{}],11:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: collapse.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +
                           '[data-toggle="collapse"][data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.4.1'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(document).find(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(document).find(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);

},{}],12:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: dropdown.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.4.1'

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector !== '#' ? $(document).find(selector) : null

    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))
    })
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div'))
          .addClass('dropdown-backdrop')
          .insertAfter($(this))
          .on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger($.Event('shown.bs.dropdown', relatedTarget))
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.disabled):visible a'
    var $items = $parent.find('.dropdown-menu' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--         // up
    if (e.which == 40 && index < $items.length - 1) index++         // down
    if (!~index)                                    index = 0

    $items.eq(index).trigger('focus')
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)

}(jQuery);

},{}],13:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: modal.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#modals
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options = options
    this.$body = $(document.body)
    this.$element = $(element)
    this.$dialog = this.$element.find('.modal-dialog')
    this.$backdrop = null
    this.isShown = null
    this.originalBodyPad = null
    this.scrollbarWidth = 0
    this.ignoreBackdropClick = false
    this.fixedContent = '.navbar-fixed-top, .navbar-fixed-bottom'

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION = '3.4.1'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    this.$body.addClass('modal-open')

    this.escape()
    this.resize()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      that.adjustDialog()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element.addClass('in')

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .off('click.dismiss.bs.modal')
      .off('mouseup.dismiss.bs.modal')

    this.$dialog.off('mousedown.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (document !== e.target &&
          this.$element[0] !== e.target &&
          !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
    } else {
      $(window).off('resize.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetAdjustments()
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        .addClass('modal-backdrop ' + animate)
        .appendTo(this.$body)

      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    var scrollbarWidth = this.scrollbarWidth
    if (this.bodyIsOverflowing) {
      this.$body.css('padding-right', bodyPad + scrollbarWidth)
      $(this.fixedContent).each(function (index, element) {
        var actualPadding = element.style.paddingRight
        var calculatedPadding = $(element).css('padding-right')
        $(element)
          .data('padding-right', actualPadding)
          .css('padding-right', parseFloat(calculatedPadding) + scrollbarWidth + 'px')
      })
    }
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
    $(this.fixedContent).each(function (index, element) {
      var padding = $(element).data('padding-right')
      $(element).removeData('padding-right')
      element.style.paddingRight = padding ? padding : ''
    })
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this = $(this)
      var data = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this = $(this)
    var href = $this.attr('href')
    var target = $this.attr('data-target') ||
      (href && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7

    var $target = $(document).find(target)
    var option = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

},{}],14:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: popover.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.4.1'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    if (this.options.html) {
      var typeContent = typeof content

      if (this.options.sanitize) {
        title = this.sanitizeHtml(title)

        if (typeContent === 'string') {
          content = this.sanitizeHtml(content)
        }
      }

      $tip.find('.popover-title').html(title)
      $tip.find('.popover-content').children().detach().end()[
        typeContent === 'string' ? 'html' : 'append'
      ](content)
    } else {
      $tip.find('.popover-title').text(title)
      $tip.find('.popover-content').children().detach().end().text(content)
    }

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
        o.content.call($e[0]) :
        o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

},{}],15:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: scrollspy.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    this.$body          = $(document.body)
    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target || '') + ' .nav li > a'
    this.offsets        = []
    this.targets        = []
    this.activeTarget   = null
    this.scrollHeight   = 0

    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))
    this.refresh()
    this.process()
  }

  ScrollSpy.VERSION  = '3.4.1'

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }

  ScrollSpy.prototype.refresh = function () {
    var that          = this
    var offsetMethod  = 'offset'
    var offsetBase    = 0

    this.offsets      = []
    this.targets      = []
    this.scrollHeight = this.getScrollHeight()

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = 'position'
      offsetBase   = this.$scrollElement.scrollTop()
    }

    this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#./.test(href) && $(href)

        return ($href
          && $href.length
          && $href.is(':visible')
          && [[$href[offsetMethod]().top + offsetBase, href]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        that.offsets.push(this[0])
        that.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.getScrollHeight()
    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (this.scrollHeight != scrollHeight) {
      this.refresh()
    }

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null
      return this.clear()
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])
        && this.activate(targets[i])
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    this.clear()

    var selector = this.selector +
      '[data-target="' + target + '"],' +
      this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length) {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate.bs.scrollspy')
  }

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, '.active')
      .removeClass('active')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.scrollspy

  $.fn.scrollspy             = Plugin
  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load.bs.scrollspy.data-api', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      Plugin.call($spy, $spy.data())
    })
  })

}(jQuery);

},{}],16:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: tab.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    // jscs:disable requireDollarBeforejQueryAssignment
    this.element = $(element)
    // jscs:enable requireDollarBeforejQueryAssignment
  }

  Tab.VERSION = '3.4.1'

  Tab.TRANSITION_DURATION = 150

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var $previous = $ul.find('.active:last a')
    var hideEvent = $.Event('hide.bs.tab', {
      relatedTarget: $this[0]
    })
    var showEvent = $.Event('show.bs.tab', {
      relatedTarget: $previous[0]
    })

    $previous.trigger(hideEvent)
    $this.trigger(showEvent)

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return

    var $target = $(document).find(selector)

    this.activate($this.closest('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: 'hidden.bs.tab',
        relatedTarget: $this[0]
      })
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: $previous[0]
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
        .removeClass('active')
        .end()
        .find('[data-toggle="tab"]')
        .attr('aria-expanded', false)

      element
        .addClass('active')
        .find('[data-toggle="tab"]')
        .attr('aria-expanded', true)

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu').length) {
        element
          .closest('li.dropdown')
          .addClass('active')
          .end()
          .find('[data-toggle="tab"]')
          .attr('aria-expanded', true)
      }

      callback && callback()
    }

    $active.length && transition ?
      $active
        .one('bsTransitionEnd', next)
        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tab

  $.fn.tab             = Plugin
  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault()
    Plugin.call($(this), 'show')
  }

  $(document)
    .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)
    .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)

}(jQuery);

},{}],17:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: tooltip.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+function ($) {
  'use strict';

  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn']

  var uriAttrs = [
    'background',
    'cite',
    'href',
    'itemtype',
    'longdesc',
    'poster',
    'src',
    'xlink:href'
  ]

  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i

  var DefaultWhitelist = {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  }

  /**
   * A pattern that recognizes a commonly useful subset of URLs that are safe.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */
  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi

  /**
   * A pattern that matches safe data URLs. Only matches image, video and audio types.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */
  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i

  function allowedAttribute(attr, allowedAttributeList) {
    var attrName = attr.nodeName.toLowerCase()

    if ($.inArray(attrName, allowedAttributeList) !== -1) {
      if ($.inArray(attrName, uriAttrs) !== -1) {
        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))
      }

      return true
    }

    var regExp = $(allowedAttributeList).filter(function (index, value) {
      return value instanceof RegExp
    })

    // Check if a regular expression validates the attribute.
    for (var i = 0, l = regExp.length; i < l; i++) {
      if (attrName.match(regExp[i])) {
        return true
      }
    }

    return false
  }

  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {
    if (unsafeHtml.length === 0) {
      return unsafeHtml
    }

    if (sanitizeFn && typeof sanitizeFn === 'function') {
      return sanitizeFn(unsafeHtml)
    }

    // IE 8 and below don't support createHTMLDocument
    if (!document.implementation || !document.implementation.createHTMLDocument) {
      return unsafeHtml
    }

    var createdDocument = document.implementation.createHTMLDocument('sanitization')
    createdDocument.body.innerHTML = unsafeHtml

    var whitelistKeys = $.map(whiteList, function (el, i) { return i })
    var elements = $(createdDocument.body).find('*')

    for (var i = 0, len = elements.length; i < len; i++) {
      var el = elements[i]
      var elName = el.nodeName.toLowerCase()

      if ($.inArray(elName, whitelistKeys) === -1) {
        el.parentNode.removeChild(el)

        continue
      }

      var attributeList = $.map(el.attributes, function (el) { return el })
      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || [])

      for (var j = 0, len2 = attributeList.length; j < len2; j++) {
        if (!allowedAttribute(attributeList[j], whitelistedAttributes)) {
          el.removeAttribute(attributeList[j].nodeName)
        }
      }
    }

    return createdDocument.body.innerHTML
  }

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       = null
    this.options    = null
    this.enabled    = null
    this.timeout    = null
    this.hoverState = null
    this.$element   = null
    this.inState    = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.4.1'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    },
    sanitize : true,
    sanitizeFn : null,
    whiteList : DefaultWhitelist
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $(document).find($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))
    this.inState   = { click: false, hover: false, focus: false }

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')
    }

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    var dataAttributes = this.$element.data()

    for (var dataAttr in dataAttributes) {
      if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {
        delete dataAttributes[dataAttr]
      }
    }

    options = $.extend({}, this.getDefaults(), dataAttributes, options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    if (options.sanitize) {
      options.template = sanitizeHtml(options.template, options.whiteList, options.sanitizeFn)
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in'
      return
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true
    }

    return false
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false
    }

    if (self.isInStateTrue()) return

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo($(document).find(this.options.container)) : $tip.insertAfter(this.$element)
      this.$element.trigger('inserted.bs.' + this.type)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var viewportDim = this.getPosition(this.$viewport)

        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  += marginTop
    offset.left += marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isVertical ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    if (this.options.html) {
      if (this.options.sanitize) {
        title = sanitizeHtml(title, this.options.whiteList, this.options.sanitizeFn)
      }

      $tip.find('.tooltip-inner').html(title)
    } else {
      $tip.find('.tooltip-inner').text(title)
    }

    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = $(this.$tip)
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr('aria-describedby')
          .trigger('hidden.bs.' + that.type)
      }
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && $tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template)
      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')
      }
    }
    return this.$tip
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    if (e) {
      self.inState.click = !self.inState.click
      if (self.isInStateTrue()) self.enter(self)
      else self.leave(self)
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
    }
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
      if (that.$tip) {
        that.$tip.detach()
      }
      that.$tip = null
      that.$arrow = null
      that.$viewport = null
      that.$element = null
    })
  }

  Tooltip.prototype.sanitizeHtml = function (unsafeHtml) {
    return sanitizeHtml(unsafeHtml, this.options.whiteList, this.options.sanitizeFn)
  }

  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

},{}],18:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: transition.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: https://modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // https://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

},{}],19:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );

},{}]},{},[2]);
